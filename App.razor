<div class="container">

    @foreach (var descriptor in this._Components)
    {
        // デスクリプタで指定されたコンポーネント名から、対応するコンポーネントの型を表引き
        var typeOfComponent = _ComponentNameToType[descriptor.ComponentName];

        <div @key="descriptor.Id">
            <DynamicComponent Type="typeOfComponent" Parameters="descriptor.Parameters" />
        </div>
    }

    <!-- "Counter" コンポーネントを追加するボタン -->
    <div class="container">
        <IgbButton @onclick="OnClickAddCounter">Add Counter</IgbButton>
    </div>

    <!-- "TextMessage" コンポーネントに表示するメッセージの入力欄と追加するボタン -->
    <div class="container">
        <IgbInput @bind-Value="this._Message" InputOcurred="@(e => this._Message = e.Detail)" />
        <div class="container">
            <IgbButton @onclick="OnClickAddTextMessage" Disabled="@(this._Message == "")">Add TextMessage</IgbButton>
        </div>
    </div>
</div>

@code {

    /// <summary>
    /// コンポーネント名文字列から、実際のコンポーネントの型 (`Type`) を表引きするための辞書
    /// </summary>
    private static readonly IReadOnlyDictionary<string, Type> _ComponentNameToType =
        new Dictionary<string, Type>
            {
                [nameof(Counter)] = typeof(Counter),
                [nameof(TextMessage)] = typeof(TextMessage),
            };

    /// <summary>
    /// "画面上にどのコンポーネントが表示されているか" を保持するリスト
    /// </summary>
    private readonly List<ComponentDescriptor> _Components = new();

    /// <summary>
    /// "Add Counter" ボタンがクリックされたときに呼び出されます。
    /// </summary>
    private void OnClickAddCounter()
    {
        var id = Guid.NewGuid().ToString();
        this._Components.Add(new(id, nameof(Counter), new()));
    }

    /// <summary>
    /// テキスト入力欄にバインドするフィールド変数
    /// </summary>
    private string _Message = "";

    /// <summary>
    /// "Add TextMessage" ボタンがクリックされたときに呼び出されます。
    /// </summary>
    private void OnClickAddTextMessage()
    {
        var id = Guid.NewGuid().ToString();
        this._Components.Add(new(id, nameof(TextMessage), new()
            {
                // ページ上の入力欄に入力されたテキストを、辞書の一項目として追加して渡す
                [nameof(TextMessage.Message)] = this._Message
            }));

        // 1つ TextMessage コンポーネントを追加したら、入力欄はクリアしておく
        this._Message = "";
    }
}
