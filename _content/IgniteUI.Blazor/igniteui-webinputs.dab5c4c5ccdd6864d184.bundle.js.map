{"version":3,"file":"igniteui-webinputs.dab5c4c5ccdd6864d184.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-webinputs/VoidEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPaneType.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneOrientation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/UnpinnedLocation.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPoint.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerPane_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-point.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/SplitPaneCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerLayout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-layout-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-split-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-document-host-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-content-pane-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-group-pane-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DragService.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-drag-service.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowHeaderIconOnHover.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/TabHeaderElement.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-tab-header-element-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerResourceStrings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-resource-strings.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManagerShowPaneHeaders.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/PaneActionBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/LayoutChangeEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-layout-change-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/DockManager.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-dock-manager-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-webinputs/igc-void-event-args.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class VoidEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(VoidEventArgs, 'VoidEventArgs', (<any>EventArgs).$);\r\n\tstatic b(a: any): VoidEventArgs {\r\n\t\treturn new VoidEventArgs();\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerPaneType {\r\n\tSplitPane = 0,\r\n\tContentPane = 1,\r\n\tTabGroupPane = 2,\r\n\tDocumentHost = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerPaneType_$type = markEnum('DockManagerPaneType', 'SplitPane,0|ContentPane,1|TabGroupPane,2|DocumentHost,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum SplitPaneOrientation {\r\n\tHorizontal = 0,\r\n\tVertical = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let SplitPaneOrientation_$type = markEnum('SplitPaneOrientation', 'Horizontal:horizontal,0|Vertical:vertical,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum UnpinnedLocation {\r\n\tTop = 0,\r\n\tBottom = 1,\r\n\tLeft = 2,\r\n\tRight = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let UnpinnedLocation_$type = markEnum('UnpinnedLocation', 'Top:top,0|Bottom:bottom,1|Left:left,2|Right:right,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPoint extends Base {\r\n\tstatic $t: Type = markType(DockManagerPoint, 'DockManagerPoint');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate e: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.e;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.e = a;\r\n\t\tthis.a.o = this.e;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget c(): number {\r\n\t\tlet ret_ = this.b.n(\"x\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset c(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"x\", value_);\r\n\t}\r\n\tget d(): number {\r\n\t\tlet ret_ = this.b.n(\"y\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset d(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"y\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType, enumGetBox, EnumUtil } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class DockManagerPane extends Base {\r\n\tstatic $t: Type = markType(DockManagerPane, 'DockManagerPane');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tprotected abstract b(): WCNativeHelper;\r\n\tget d(): string {\r\n\t\tlet ret_ = this.b().n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset d(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b().w(\"name\", value_);\r\n\t}\r\n\tstatic createFromNative(native_: any): DockManagerPane {\r\n\t\tif (native_ == null) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet a: string = <string>(native_.type);\r\n\t\tif (a == null || a == undefined) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tswitch (a.toLowerCase()) {\r\n\t\t\tcase \"splitpane\":\r\n\t\t\t{\r\n\t\t\t\tlet b = new SplitPane();\r\n\t\t\t\tb.setNativeElement(native_);\r\n\t\t\t\treturn b;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"contentpane\":\r\n\t\t\t{\r\n\t\t\t\tlet c = new ContentPane();\r\n\t\t\t\tc.setNativeElement(native_);\r\n\t\t\t\treturn c;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"tabgrouppane\":\r\n\t\t\t{\r\n\t\t\t\tlet d = new TabGroupPane();\r\n\t\t\t\td.setNativeElement(native_);\r\n\t\t\t\treturn d;\r\n\t\t\t}\r\n\r\n\t\t\tcase \"documenthost\":\r\n\t\t\t{\r\n\t\t\t\tlet e = new DocumentHost();\r\n\t\t\t\te.setNativeElement(native_);\r\n\t\t\t\treturn e;\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DocumentHost extends DockManagerPane {\r\n\tstatic $t: Type = markType(DocumentHost, 'DocumentHost', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate j: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.j;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.j = a;\r\n\t\tthis.g.o = this.j;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget f(): SplitPane {\r\n\t\tlet ret_ = this.h.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset f(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"rootPane\", value_);\r\n\t}\r\n\tget i(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset i(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabGroupPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(TabGroupPane, 'TabGroupPane', (<any>DockManagerPane).$);\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate m: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.m;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.m = a;\r\n\t\tthis.g.o = this.m;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget o(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset o(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget e(): ContentPaneCollection {\r\n\t\tlet ret_ = this.h.k(\"panes\", (a: any) => new ContentPaneCollection(), (a: any) => new ContentPane());\r\n\t\treturn <ContentPaneCollection>ret_;\r\n\t}\r\n\tget l(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset l(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tget k(): number {\r\n\t\tlet ret_ = this.h.n(\"selectedIndex\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset k(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"selectedIndex\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowEmpty\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isMaximized\", value_);\r\n\t}\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(ContentPane, 'ContentPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.h;\r\n\t}\r\n\tprivate g: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get h(): WCNativeHelper {\r\n\t\treturn this.g;\r\n\t}\r\n\tprivate v: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.v;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.v = a;\r\n\t\tthis.g.o = this.v;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget ab(): string {\r\n\t\tlet ret_ = this.h.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ab(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"id\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneType {\r\n\t\tlet ret_ = this.h.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.h.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset e(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"type\", value_);\r\n\t}\r\n\tget x(): string {\r\n\t\tlet ret_ = this.h.n(\"contentId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset x(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"contentId\", value_);\r\n\t}\r\n\tget z(): string {\r\n\t\tlet ret_ = this.h.n(\"header\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset z(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"header\", value_);\r\n\t}\r\n\tget aa(): string {\r\n\t\tlet ret_ = this.h.n(\"headerId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset aa(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"headerId\", value_);\r\n\t}\r\n\tget ac(): string {\r\n\t\tlet ret_ = this.h.n(\"tabHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ac(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"tabHeaderId\", value_);\r\n\t}\r\n\tget ad(): string {\r\n\t\tlet ret_ = this.h.n(\"unpinnedHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset ad(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"unpinnedHeaderId\", value_);\r\n\t}\r\n\tget y(): string {\r\n\t\tlet ret_ = this.h.n(\"floatingHeaderId\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset y(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"floatingHeaderId\", value_);\r\n\t}\r\n\tget t(): number {\r\n\t\tlet ret_ = this.h.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset t(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"size\", value_);\r\n\t}\r\n\tget j(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowClose\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset j(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowClose\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowMaximize\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowPinning\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowPinning\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowDocking\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowDocking\", value_);\r\n\t}\r\n\tget i(): boolean {\r\n\t\tlet ret_ = this.h.n(\"acceptsInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset i(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"acceptsInnerDock\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.h.n(\"allowFloating\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"allowFloating\", value_);\r\n\t}\r\n\tget u(): number {\r\n\t\tlet ret_ = this.h.n(\"unpinnedSize\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset u(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"unpinnedSize\", value_);\r\n\t}\r\n\tget s(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isPinned\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset s(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isPinned\", value_);\r\n\t}\r\n\tget r(): boolean {\r\n\t\tlet ret_ = this.h.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset r(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"isMaximized\", value_);\r\n\t}\r\n\tget f(): UnpinnedLocation {\r\n\t\tlet ret_ = this.h.n(\"unpinnedLocation\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <UnpinnedLocation>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, this.h.f<UnpinnedLocation>(UnpinnedLocation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<UnpinnedLocation>(UnpinnedLocation_$type, ret_);\r\n\t}\r\n\tset f(a: UnpinnedLocation) {\r\n\t\tlet value_ = <any>enumGetBox<UnpinnedLocation>(UnpinnedLocation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.h.w(\"unpinnedLocation\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.h.n(\"hidden\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"hidden\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.h.n(\"disabled\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"disabled\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.h.n(\"documentOnly\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.h.w(\"documentOnly\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ContentPaneCollection extends ObservableCollection$1<ContentPane> {\r\n\tstatic $t: Type = markType(ContentPaneCollection, 'ContentPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>ContentPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>ContentPane).$, 0);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPane extends DockManagerPane {\r\n\tstatic $t: Type = markType(SplitPane, 'SplitPane', (<any>DockManagerPane).$);\r\n\tprotected b(): WCNativeHelper {\r\n\t\treturn this.j;\r\n\t}\r\n\tprivate i: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get j(): WCNativeHelper {\r\n\t\treturn this.i;\r\n\t}\r\n\tprivate r: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.r;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.r = a;\r\n\t\tthis.i.o = this.r;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget t(): string {\r\n\t\tlet ret_ = this.j.n(\"id\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset t(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"id\", value_);\r\n\t}\r\n\tget f(): DockManagerPaneType {\r\n\t\tlet ret_ = this.j.n(\"type\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerPaneType>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, this.j.f<DockManagerPaneType>(DockManagerPaneType_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerPaneType>(DockManagerPaneType_$type, ret_);\r\n\t}\r\n\tset f(a: DockManagerPaneType) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerPaneType>(DockManagerPaneType_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.j.w(\"type\", value_);\r\n\t}\r\n\tget h(): SplitPaneOrientation {\r\n\t\tlet ret_ = this.j.n(\"orientation\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <SplitPaneOrientation>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, this.j.f<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<SplitPaneOrientation>(SplitPaneOrientation_$type, ret_);\r\n\t}\r\n\tset h(a: SplitPaneOrientation) {\r\n\t\tlet value_ = <any>enumGetBox<SplitPaneOrientation>(SplitPaneOrientation_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.j.w(\"orientation\", value_);\r\n\t}\r\n\tget e(): DockManagerPaneCollection {\r\n\t\tlet ret_ = this.j.k(\"panes\", (a: any) => new DockManagerPaneCollection(), (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPaneCollection>ret_;\r\n\t}\r\n\tget q(): number {\r\n\t\tlet ret_ = this.j.n(\"size\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset q(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"size\", value_);\r\n\t}\r\n\tget g(): DockManagerPoint {\r\n\t\tlet ret_ = this.j.m(\"floatingLocation\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset g(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingLocation\", value_);\r\n\t}\r\n\tget p(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingWidth\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset p(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingWidth\", value_);\r\n\t}\r\n\tget o(): number {\r\n\t\tlet ret_ = this.j.n(\"floatingHeight\");\r\n\t\treturn <number>ret_;\r\n\t}\r\n\tset o(a: number) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingHeight\", value_);\r\n\t}\r\n\tget l(): boolean {\r\n\t\tlet ret_ = this.j.n(\"floatingResizable\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset l(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"floatingResizable\", value_);\r\n\t}\r\n\tget k(): boolean {\r\n\t\tlet ret_ = this.j.n(\"allowEmpty\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset k(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"allowEmpty\", value_);\r\n\t}\r\n\tget m(): boolean {\r\n\t\tlet ret_ = this.j.n(\"isMaximized\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset m(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"isMaximized\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.j.n(\"useFixedSize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.j.w(\"useFixedSize\", value_);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerPaneCollection extends ObservableCollection$1<DockManagerPane> {\r\n\tstatic $t: Type = markType(DockManagerPaneCollection, 'DockManagerPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>DockManagerPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>DockManagerPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\n\r\nexport abstract class IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DockManagerPane\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPane {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerPaneComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\tget name() : string {\r\n\t\treturn (this.i.d as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.d = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerPaneComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        \r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { DockManagerPane as DockManagerPane_internal } from './DockManagerPane';\r\nimport { IgcDockManagerPaneComponent as IgcDockManagerPaneComponent } from './igc-dock-manager-pane-component';\r\n\r\nexport class IgcDockManagerPaneCollection extends IgCollection<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n    constructor(list?: IgcDockManagerPaneComponent[]) {\r\n        super();\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal> {\r\n        if (!(IgcDockManagerPaneComponent as any).$type) {\r\n            (IgcDockManagerPaneComponent as any).$type = markType(IgcDockManagerPaneComponent, \"IgcDockManagerPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcDockManagerPaneComponent, DockManagerPane_internal>((IgcDockManagerPaneComponent as any).$type, (DockManagerPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcDockManagerPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPoint as DockManagerPoint_internal } from \"./DockManagerPoint\";\r\n\r\nexport class IgcDockManagerPoint\r\n{\r\n\r\nprotected createImplementation() : DockManagerPoint_internal\r\n{\r\n\treturn new DockManagerPoint_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerPoint_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget x() : number {\r\n\t\treturn (this.i.c as number);\r\n\t}\r\n\tset x(v: number) {\r\n\t\tthis.i.c = +v;\r\n\t}\r\n\tget y() : number {\r\n\t\treturn (this.i.d as number);\r\n\t}\r\n\tset y(v: number) {\r\n\t\tthis.i.d = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { SplitPaneOrientation, SplitPaneOrientation_$type } from \"./SplitPaneOrientation\";\r\nimport { IgcDockManagerPaneCollection } from \"./igc-dock-manager-pane-collection\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { DockManagerPaneCollection as DockManagerPaneCollection_internal } from \"./DockManagerPaneCollection\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcSplitPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : SplitPane\r\n{\r\n\treturn new SplitPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : SplitPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.t as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.t = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * The orientation of the split pane.\r\n\t*/\r\n\tget orientation() : SplitPaneOrientation {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset orientation(v: SplitPaneOrientation) {\r\n\t\tthis.i.h = ensureEnum<SplitPaneOrientation>(SplitPaneOrientation_$type, v);\r\n\t                                        this._a(\"orientation\", enumToString<SplitPaneOrientation>(SplitPaneOrientation_$type, this.i.h));\r\n\t}\r\n\tprivate _panes: IgcDockManagerPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child panes of the split pane.\r\n\t*/\r\n\tget panes() : IgcDockManagerPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcDockManagerPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcDockManagerPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcDockManagerPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<DockManagerPane>((DockManagerPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new DockManagerPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.q as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.q = +v;\r\n\t                                        this._a(\"size\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * The absolute location point of the pane. Applies only for floating panes.\r\n\t*/\r\n\tget floatingLocation() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.g;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset floatingLocation(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.g = null : this.i.g = v.i;\r\n\t}\r\n\t/**\r\n\t * The absolute width of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingWidth() : number {\r\n\t\treturn (this.i.p as number);\r\n\t}\r\n\tset floatingWidth(v: number) {\r\n\t\tthis.i.p = +v;\r\n\t                                        this._a(\"floatingWidth\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * The absolute height of the pane. Applies only for floating panes. Defaults to 100.\r\n\t*/\r\n\tget floatingHeight() : number {\r\n\t\treturn (this.i.o as number);\r\n\t}\r\n\tset floatingHeight(v: number) {\r\n\t\tthis.i.o = +v;\r\n\t                                        this._a(\"floatingHeight\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Determines whether floating pane resizing is allowed. Applies only for floating panes.\r\n\t*/\r\n\tget floatingResizable() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset floatingResizable(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"floatingResizable\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether a split pane is maximized or not. Defaults to false.\r\n\t * @deprecated Use the `isMaximized` property of TabGroupPane and/or ContentPane instead.  Having isMaximized set to true on a split pane level has no real effect as split panes serve as containers only, meaning they have no actual content to be shown maximized.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether child panes are sized in pixels (instead of relatively to their siblings) and can be resized beyond the viewport, allowing scrollable overflow within the container.\r\n\t * Defaults to false.\r\n\t*/\r\n\tget useFixedSize() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset useFixedSize(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"useFixedSize\", this.i.n);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\tif (this.floatingLocation && (this.floatingLocation as any).name && (this.floatingLocation as any).name == name) { return this.floatingLocation; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { SplitPane as SplitPane_internal } from './SplitPane';\r\nimport { IgcSplitPaneComponent as IgcSplitPaneComponent } from './igc-split-pane-component';\r\n\r\nexport class IgcSplitPaneCollection extends IgCollection<IgcSplitPaneComponent, SplitPane_internal> {\r\n    constructor(list?: IgcSplitPaneComponent[]) {\r\n        super();\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal> {\r\n        if (!(IgcSplitPaneComponent as any).$type) {\r\n            (IgcSplitPaneComponent as any).$type = markType(IgcSplitPaneComponent, \"IgcSplitPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcSplitPaneComponent, SplitPane_internal>((IgcSplitPaneComponent as any).$type, (SplitPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcSplitPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SplitPaneCollection extends ObservableCollection$1<SplitPane> {\r\n\tstatic $t: Type = markType(SplitPaneCollection, 'SplitPaneCollection', (<any>ObservableCollection$1).$.specialize((<any>SplitPane).$));\r\n\tconstructor() {\r\n\t\tsuper((<any>SplitPane).$, 0);\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SplitPaneCollection } from \"./SplitPaneCollection\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerLayout extends Base {\r\n\tstatic $t: Type = markType(DockManagerLayout, 'DockManagerLayout');\r\n\tprivate ___mustPassByValue: boolean = true;\r\n\tget h(): string {\r\n\t\tlet ret_ = this.d.n(\"name\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.w(\"name\", value_);\r\n\t}\r\n\tprivate c: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get d(): WCNativeHelper {\r\n\t\treturn this.c;\r\n\t}\r\n\tprivate f: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.f;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.f = a;\r\n\t\tthis.c.o = this.f;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): SplitPane {\r\n\t\tlet ret_ = this.d.m(\"rootPane\", (a: any) => new SplitPane());\r\n\t\treturn <SplitPane>ret_;\r\n\t}\r\n\tset a(a: SplitPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.d.w(\"rootPane\", value_);\r\n\t}\r\n\tget b(): SplitPaneCollection {\r\n\t\tlet ret_ = this.d.k(\"floatingPanes\", (a: any) => new SplitPaneCollection(), (a: any) => new SplitPane());\r\n\t\treturn <SplitPaneCollection>ret_;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcSplitPaneCollection } from \"./igc-split-pane-collection\";\r\nimport { DockManagerLayout as DockManagerLayout_internal } from \"./DockManagerLayout\";\r\nimport { SplitPaneCollection as SplitPaneCollection_internal } from \"./SplitPaneCollection\";\r\nimport { SplitPane } from \"./SplitPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * Describes a Dock Manager layout.\r\n*/\r\nexport class IgcDockManagerLayout\r\n{\r\n\r\nprotected createImplementation() : DockManagerLayout_internal\r\n{\r\n\treturn new DockManagerLayout_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerLayout_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget name() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset name(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\t/**\r\n\t * The root split pane of the layout.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\tprivate _floatingPanes: IgcSplitPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The floating panes of the layout.\r\n\t*/\r\n\tget floatingPanes() : IgcSplitPaneCollection {\r\n\t                                        if (this._floatingPanes === null) {\r\n\t                                            let coll = new IgcSplitPaneCollection();\r\n\t                                            let innerColl = this.i.b;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._floatingPanes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._floatingPanes;\r\n\t}\r\n\tset floatingPanes(v: IgcSplitPaneCollection) {\r\n\t                                        if (this._floatingPanes !== null) {\r\n\t                                            (this._floatingPanes as any)._setSyncTarget(null);\r\n\t                                            this._floatingPanes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSplitPaneCollection();\r\n\t                                        this._floatingPanes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<SplitPane>((SplitPane as any).$type);\r\n\t                                        let innerColl = this.i.b;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SplitPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._floatingPanes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\tif (this.floatingPanes != null && this.floatingPanes.findByName && this.floatingPanes.findByName(name)) { return this.floatingPanes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDockManagerLayout } from './igc-dock-manager-layout';\r\nimport { DockManagerLayout } from './DockManagerLayout';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDockManagerLayoutModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcDockManagerLayout\", IgcDockManagerLayout);\r\n        TypeRegistrar.register(\"DockManagerLayout\", (<any>DockManagerLayout).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { UnpinnedLocation, UnpinnedLocation_$type } from \"./UnpinnedLocation\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcContentPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : ContentPane\r\n{\r\n\treturn new ContentPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ContentPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.ab as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.ab = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content element.\r\n\t*/\r\n\tget contentId() : string {\r\n\t\treturn (this.i.x as string);\r\n\t}\r\n\tset contentId(v: string) {\r\n\t\tthis.i.x = v;\r\n\t}\r\n\t/**\r\n\t * The text header of the content pane. Even if header slot templates are used, the text header is used for aria label.\r\n\t*/\r\n\tget header() : string {\r\n\t\treturn (this.i.z as string);\r\n\t}\r\n\tset header(v: string) {\r\n\t\tthis.i.z = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the content pane header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget headerId() : string {\r\n\t\treturn (this.i.aa as string);\r\n\t}\r\n\tset headerId(v: string) {\r\n\t\tthis.i.aa = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the tab header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget tabHeaderId() : string {\r\n\t\treturn (this.i.ac as string);\r\n\t}\r\n\tset tabHeaderId(v: string) {\r\n\t\tthis.i.ac = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the unpinned header element. If not set, the `header` property value is used.\r\n\t*/\r\n\tget unpinnedHeaderId() : string {\r\n\t\treturn (this.i.ad as string);\r\n\t}\r\n\tset unpinnedHeaderId(v: string) {\r\n\t\tthis.i.ad = v;\r\n\t}\r\n\t/**\r\n\t * The slot attribute's value of the floating header element. If not set, the `headerId` property value is used.\r\n\t*/\r\n\tget floatingHeaderId() : string {\r\n\t\treturn (this.i.y as string);\r\n\t}\r\n\tset floatingHeaderId(v: string) {\r\n\t\tthis.i.y = v;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.t as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.t = +v;\r\n\t                                        this._a(\"size\", this.i.t);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to close the pane. Defaults to true.\r\n\t*/\r\n\tget allowClose() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset allowClose(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"allowClose\", this.i.j);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize the pane.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.m as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.m = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.m);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to pin/unpin the pane. Defaults to true.\r\n\t*/\r\n\tget allowPinning() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowPinning(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowPinning\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to dock the pane. Defaults to true.\r\n\t*/\r\n\tget allowDocking() : boolean {\r\n\t\treturn (this.i.k as boolean);\r\n\t}\r\n\tset allowDocking(v: boolean) {\r\n\t\tthis.i.k = ensureBool(v);\r\n\t                                        this._a(\"allowDocking\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can inner dock another pane in this one. Defaults to true.\r\n\t*/\r\n\tget acceptsInnerDock() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset acceptsInnerDock(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"acceptsInnerDock\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to make the pane floating. Defaults to true.\r\n\t*/\r\n\tget allowFloating() : boolean {\r\n\t\treturn (this.i.l as boolean);\r\n\t}\r\n\tset allowFloating(v: boolean) {\r\n\t\tthis.i.l = ensureBool(v);\r\n\t                                        this._a(\"allowFloating\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The absolute size of the pane in an unpinned state. Defaults to 200.\r\n\t*/\r\n\tget unpinnedSize() : number {\r\n\t\treturn (this.i.u as number);\r\n\t}\r\n\tset unpinnedSize(v: number) {\r\n\t\tthis.i.u = +v;\r\n\t                                        this._a(\"unpinnedSize\", this.i.u);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is pinned or not. Defaults to true.\r\n\t*/\r\n\tget isPinned() : boolean {\r\n\t\treturn (this.i.s as boolean);\r\n\t}\r\n\tset isPinned(v: boolean) {\r\n\t\tthis.i.s = ensureBool(v);\r\n\t                                        this._a(\"isPinned\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether a content pane is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.r as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.r = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * The desired unpinned location of the content pane.\r\n\t * If not set the Dock Manager automatically calculates it based on the location of the pane relatively to the document host.\r\n\t * If more than one document host is presented, the closest one in the pane hierarchy will be used for the calculation.\r\n\t * If there is no document host, the default location is left.\r\n\t*/\r\n\tget unpinnedLocation() : UnpinnedLocation {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset unpinnedLocation(v: UnpinnedLocation) {\r\n\t\tthis.i.f = ensureEnum<UnpinnedLocation>(UnpinnedLocation_$type, v);\r\n\t                                        this._a(\"unpinnedLocation\", enumToString<UnpinnedLocation>(UnpinnedLocation_$type, this.i.f));\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is hidden in the UI. Defaults to false.\r\n\t*/\r\n\tget hidden() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset hidden(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"hidden\", this.i.q);\r\n\t}\r\n\t/**\r\n\t * Determines whether a pane is disabled. Defaults to false.\r\n\t*/\r\n\tget disabled() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset disabled(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"disabled\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Marks that a content pane can be docked only inside a document host.\r\n\t*/\r\n\tget documentOnly() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset documentOnly(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"documentOnly\", this.i.p);\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcContentPaneComponent } from './igc-content-pane-component';\r\nimport { ContentPane } from './ContentPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcContentPaneModule {\r\n    public static register(): void {\r\n        IgcContentPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcContentPaneComponent\", IgcContentPaneComponent);\r\n        TypeRegistrar.register(\"ContentPane\", (<any>ContentPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcSplitPaneComponent } from './igc-split-pane-component';\r\nimport { SplitPane } from './SplitPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcSplitPaneModule {\r\n    public static register(): void {\r\n        IgcSplitPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcSplitPaneComponent\", IgcSplitPaneComponent);\r\n        TypeRegistrar.register(\"SplitPane\", (<any>SplitPane).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcSplitPaneComponent } from \"./igc-split-pane-component\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { DocumentHost } from \"./DocumentHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\nexport class IgcDocumentHostComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : DocumentHost\r\n{\r\n\treturn new DocumentHost();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : DocumentHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.e;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.e = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.e));\r\n\t}\r\n\t/**\r\n\t * The root split pane of the document host.\r\n\t*/\r\n\tget rootPane() : IgcSplitPaneComponent {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSplitPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset rootPane(v: IgcSplitPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.i as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.i = +v;\r\n\t                                        this._a(\"size\", this.i.i);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.rootPane && (this.rootPane as any).name && (this.rootPane as any).name == name) { return this.rootPane; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.rootPane && (this.rootPane as any)._styling) {\r\n\t    (this.rootPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcDocumentHostComponent } from './igc-document-host-component';\r\nimport { DocumentHost } from './DocumentHost';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcDocumentHostModule {\r\n    public static register(): void {\r\n        IgcDocumentHostComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcDocumentHostComponent\", IgcDocumentHostComponent);\r\n        TypeRegistrar.register(\"DocumentHost\", (<any>DocumentHost).$type);\r\n    }\r\n}\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { markType } from 'igniteui-core/type';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\n\r\nimport { ContentPane as ContentPane_internal } from './ContentPane';\r\nimport { IgcContentPaneComponent as IgcContentPaneComponent } from './igc-content-pane-component';\r\n\r\nexport class IgcContentPaneCollection extends IgCollection<IgcContentPaneComponent, ContentPane_internal> {\r\n    constructor(list?: IgcContentPaneComponent[]) {\r\n        super();\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal> {\r\n        if (!(IgcContentPaneComponent as any).$type) {\r\n            (IgcContentPaneComponent as any).$type = markType(IgcContentPaneComponent, \"IgcContentPaneComponent\");\r\n        }\r\n        let coll = new SyncableObservableCollection$2<IgcContentPaneComponent, ContentPane_internal>((IgcContentPaneComponent as any).$type, (ContentPane_internal as any).$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp._implementation) {\r\n                comp = comp._implementation;\r\n            }\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return (ext as any)._implementation;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            let ext = (int as any).externalObject;\r\n            if (!ext) {\r\n                ext = IgcContentPaneComponent._createFromInternal(int);\r\n\r\n                if (ext) {\r\n                    if (!int.$type && (ext as any)._implementation.setNativeElement) {\r\n                        (ext as any)._implementation.setNativeElement(int);\r\n                    } else {\r\n                        (ext as any)._implementation = int;\r\n                    }\r\n                }\r\n            }\r\n            return ext;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerPaneType, DockManagerPaneType_$type } from \"./DockManagerPaneType\";\r\nimport { IgcContentPaneCollection } from \"./igc-content-pane-collection\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { TabGroupPane } from \"./TabGroupPane\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { ContentPaneCollection as ContentPaneCollection_internal } from \"./ContentPaneCollection\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\nexport class IgcTabGroupPaneComponent extends IgcDockManagerPaneComponent\r\n{\r\n\r\nprotected createImplementation() : TabGroupPane\r\n{\r\n\treturn new TabGroupPane();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TabGroupPane {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * The id of the pane. If not set the Dock Manager generates it automatically.\r\n\t*/\r\n\tget id() : string {\r\n\t\treturn (this.i.o as string);\r\n\t}\r\n\tset id(v: string) {\r\n\t\tthis.i.o = v;\r\n\t}\r\n\t/**\r\n\t * The type of the pane.\r\n\t*/\r\n\tget type() : DockManagerPaneType {\r\n\t\treturn this.i.f;\r\n\t}\r\n\tset type(v: DockManagerPaneType) {\r\n\t\tthis.i.f = ensureEnum<DockManagerPaneType>(DockManagerPaneType_$type, v);\r\n\t                                        this._a(\"Type\", enumToString<DockManagerPaneType>(DockManagerPaneType_$type, this.i.f));\r\n\t}\r\n\tprivate _panes: IgcContentPaneCollection = null;\r\n\t                                \r\n\t/**\r\n\t * The child content panes of the tab group.\r\n\t*/\r\n\tget panes() : IgcContentPaneCollection {\r\n\t                                        if (this._panes === null) {\r\n\t                                            let coll = new IgcContentPaneCollection();\r\n\t                                            let innerColl = this.i.e;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t\t}\r\n\t                                            this._panes = (coll as any)._fromInner(innerColl);\r\n\t                                            \r\n\t                                        }\r\n\t\treturn this._panes;\r\n\t}\r\n\tset panes(v: IgcContentPaneCollection) {\r\n\t                                        if (this._panes !== null) {\r\n\t                                            (this._panes as any)._setSyncTarget(null);\r\n\t                                            this._panes = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcContentPaneCollection();\r\n\t                                        this._panes = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<ContentPane>((ContentPane as any).$type);\r\n\t                                        let innerColl = this.i.e;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new ContentPaneCollection_internal();\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._panes as any)._setSyncTarget(syncColl);\r\n\t                                        \r\n\t}\r\n\t/**\r\n\t * The size of the pane relative to its sibling panes' sizes. Defaults to 100.\r\n\t*/\r\n\tget size() : number {\r\n\t\treturn (this.i.l as number);\r\n\t}\r\n\tset size(v: number) {\r\n\t\tthis.i.l = +v;\r\n\t                                        this._a(\"size\", this.i.l);\r\n\t}\r\n\t/**\r\n\t * The index of the selected tab.\r\n\t*/\r\n\tget selectedIndex() : number {\r\n\t\treturn (this.i.k as number);\r\n\t}\r\n\tset selectedIndex(v: number) {\r\n\t\tthis.i.k = +v;\r\n\t                                        this._a(\"selectedIndex\", this.i.k);\r\n\t}\r\n\t/**\r\n\t * Determines whether the pane should present in the UI when empty.\r\n\t*/\r\n\tget allowEmpty() : boolean {\r\n\t\treturn (this.i.i as boolean);\r\n\t}\r\n\tset allowEmpty(v: boolean) {\r\n\t\tthis.i.i = ensureBool(v);\r\n\t                                        this._a(\"allowEmpty\", this.i.i);\r\n\t}\r\n\t/**\r\n\t * Determines whether a tab group is maximized or not. Defaults to false.\r\n\t*/\r\n\tget isMaximized() : boolean {\r\n\t\treturn (this.i.j as boolean);\r\n\t}\r\n\tset isMaximized(v: boolean) {\r\n\t\tthis.i.j = ensureBool(v);\r\n\t                                        this._a(\"isMaximized\", this.i.j);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.panes != null && this.panes.findByName && this.panes.findByName(name)) { return this.panes.findByName(name); }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabGroupPaneComponent } from './igc-tab-group-pane-component';\r\nimport { TabGroupPane } from './TabGroupPane';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabGroupPaneModule {\r\n    public static register(): void {\r\n        IgcTabGroupPaneComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTabGroupPaneComponent\", IgcTabGroupPaneComponent);\r\n        TypeRegistrar.register(\"TabGroupPane\", (<any>TabGroupPane).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DragService extends Base {\r\n\tstatic $t: Type = markType(DragService, 'DragService');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DragService as DragService_internal } from \"./DragService\";\r\n\r\nexport class IgcDragService\r\n{\r\n\r\nprotected createImplementation() : DragService_internal\r\n{\r\n\treturn new DragService_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DragService_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowHeaderIconOnHover {\r\n\tNone = 0,\r\n\tCloseOnly = 1,\r\n\tMoreOptionsOnly = 2,\r\n\tAll = 3\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowHeaderIconOnHover_$type = markEnum('DockManagerShowHeaderIconOnHover', 'None,0|CloseOnly,1|MoreOptionsOnly,2|All,3');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DragService } from \"./DragService\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TabHeaderElement extends BaseElement {\r\n\tstatic $t: Type = markType(TabHeaderElement, 'TabHeaderElement', (<any>BaseElement).$);\r\n\tprivate b: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get c(): WCNativeHelper {\r\n\t\treturn this.b;\r\n\t}\r\n\tprivate d: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.d;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.d = a;\r\n\t\tthis.b.o = this.d;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget a(): DragService {\r\n\t\tlet ret_ = this.c.m(\"dragService\", (a: any) => new DragService());\r\n\t\treturn <DragService>ret_;\r\n\t}\r\n\tset a(a: DragService) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.c.w(\"dragService\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDragService } from \"./igc-drag-service\";\r\nimport { TabHeaderElement as TabHeaderElement_internal } from \"./TabHeaderElement\";\r\n\r\n/**\r\n * Describes a tab header element.\r\n*/\r\nexport class IgcTabHeaderElement\r\n{\r\n\r\nprotected createImplementation() : TabHeaderElement_internal\r\n{\r\n\treturn new TabHeaderElement_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : TabHeaderElement_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets/sets the drag service.\r\n\t*/\r\n\tget dragService() : IgcDragService {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDragService();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dragService(v: IgcDragService) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.dragService && (this.dragService as any).name && (this.dragService as any).name == name) { return this.dragService; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTabHeaderElement } from './igc-tab-header-element';\r\nimport { TabHeaderElement } from './TabHeaderElement';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTabHeaderElementModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTabHeaderElement\", IgcTabHeaderElement);\r\n        TypeRegistrar.register(\"TabHeaderElement\", (<any>TabHeaderElement).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManagerResourceStrings extends Base {\r\n\tstatic $t: Type = markType(DockManagerResourceStrings, 'DockManagerResourceStrings');\r\n\tprivate a: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get b(): WCNativeHelper {\r\n\t\treturn this.a;\r\n\t}\r\n\tprivate c: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.c;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.c = a;\r\n\t\tthis.a.o = this.c;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget e(): string {\r\n\t\tlet ret_ = this.b.n(\"close\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset e(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"close\", value_);\r\n\t}\r\n\tget l(): string {\r\n\t\tlet ret_ = this.b.n(\"pin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset l(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"pin\", value_);\r\n\t}\r\n\tget m(): string {\r\n\t\tlet ret_ = this.b.n(\"unpin\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset m(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"unpin\", value_);\r\n\t}\r\n\tget g(): string {\r\n\t\tlet ret_ = this.b.n(\"maximize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset g(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"maximize\", value_);\r\n\t}\r\n\tget h(): string {\r\n\t\tlet ret_ = this.b.n(\"minimize\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset h(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"minimize\", value_);\r\n\t}\r\n\tget i(): string {\r\n\t\tlet ret_ = this.b.n(\"moreOptions\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset i(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"moreOptions\", value_);\r\n\t}\r\n\tget j(): string {\r\n\t\tlet ret_ = this.b.n(\"moreTabs\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset j(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"moreTabs\", value_);\r\n\t}\r\n\tget k(): string {\r\n\t\tlet ret_ = this.b.n(\"panes\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset k(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"panes\", value_);\r\n\t}\r\n\tget f(): string {\r\n\t\tlet ret_ = this.b.n(\"documents\");\r\n\t\treturn <string>ret_;\r\n\t}\r\n\tset f(a: string) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.b.w(\"documents\", value_);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { DockManagerResourceStrings as DockManagerResourceStrings_internal } from \"./DockManagerResourceStrings\";\r\n\r\n/**\r\n * Describes dock manager resource strings.\r\n*/\r\nexport class IgcDockManagerResourceStrings\r\n{\r\n\r\nprotected createImplementation() : DockManagerResourceStrings_internal\r\n{\r\n\treturn new DockManagerResourceStrings_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManagerResourceStrings_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget close() : string {\r\n\t\treturn (this.i.e as string);\r\n\t}\r\n\tset close(v: string) {\r\n\t\tthis.i.e = v;\r\n\t}\r\n\tget pin() : string {\r\n\t\treturn (this.i.l as string);\r\n\t}\r\n\tset pin(v: string) {\r\n\t\tthis.i.l = v;\r\n\t}\r\n\tget unpin() : string {\r\n\t\treturn (this.i.m as string);\r\n\t}\r\n\tset unpin(v: string) {\r\n\t\tthis.i.m = v;\r\n\t}\r\n\tget maximize() : string {\r\n\t\treturn (this.i.g as string);\r\n\t}\r\n\tset maximize(v: string) {\r\n\t\tthis.i.g = v;\r\n\t}\r\n\tget minimize() : string {\r\n\t\treturn (this.i.h as string);\r\n\t}\r\n\tset minimize(v: string) {\r\n\t\tthis.i.h = v;\r\n\t}\r\n\tget moreOptions() : string {\r\n\t\treturn (this.i.i as string);\r\n\t}\r\n\tset moreOptions(v: string) {\r\n\t\tthis.i.i = v;\r\n\t}\r\n\tget moreTabs() : string {\r\n\t\treturn (this.i.j as string);\r\n\t}\r\n\tset moreTabs(v: string) {\r\n\t\tthis.i.j = v;\r\n\t}\r\n\tget panes() : string {\r\n\t\treturn (this.i.k as string);\r\n\t}\r\n\tset panes(v: string) {\r\n\t\tthis.i.k = v;\r\n\t}\r\n\tget documents() : string {\r\n\t\treturn (this.i.f as string);\r\n\t}\r\n\tset documents(v: string) {\r\n\t\tthis.i.f = v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\t\r\n\t        return null;\r\n\t    }\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum DockManagerShowPaneHeaders {\r\n\tAlways = 0,\r\n\tOnHoverOnly = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let DockManagerShowPaneHeaders_$type = markEnum('DockManagerShowPaneHeaders', 'Always,0|OnHoverOnly,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\nexport enum PaneActionBehavior {\r\n\tAllPanes = 0,\r\n\tSelectedPane = 1\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let PaneActionBehavior_$type = markEnum('PaneActionBehavior', 'AllPanes:allPanes,0|SelectedPane:selectedPane,1');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Base, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class LayoutChangeEventArgs extends Base {\r\n\tstatic $t: Type = markType(LayoutChangeEventArgs, 'LayoutChangeEventArgs');\r\n\ta: DockManagerLayout = null;\r\n\tstatic b(a: any): LayoutChangeEventArgs {\r\n\t\treturn ((() => {\r\n\t\t\tlet $ret = new LayoutChangeEventArgs();\r\n\t\t\t$ret.a = <DockManagerLayout>a;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { LayoutChangeEventArgs as LayoutChangeEventArgs_internal } from \"./LayoutChangeEventArgs\";\r\n\r\nexport class IgcLayoutChangeEventArgs\r\n{\r\n\r\nprotected createImplementation() : LayoutChangeEventArgs_internal\r\n{\r\n\treturn new LayoutChangeEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : LayoutChangeEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tget detail() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset detail(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { BaseElement } from \"./BaseElement\";\r\nimport { WCNativeHelper } from \"./WCNativeHelper\";\r\nimport { Base, enumGetBox, EnumUtil, Type, markType } from \"igniteui-core/type\";\r\nimport { DockManagerLayout } from \"./DockManagerLayout\";\r\nimport { DockManagerPane } from \"./DockManagerPane\";\r\nimport { DockManagerPoint } from \"./DockManagerPoint\";\r\nimport { ContentPane } from \"./ContentPane\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { DockManagerResourceStrings } from \"./DockManagerResourceStrings\";\r\nimport { DockManagerShowPaneHeaders, DockManagerShowPaneHeaders_$type } from \"./DockManagerShowPaneHeaders\";\r\nimport { PaneActionBehavior, PaneActionBehavior_$type } from \"./PaneActionBehavior\";\r\nimport { LayoutChangeEventArgs } from \"./LayoutChangeEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class DockManager extends BaseElement {\r\n\tstatic $t: Type = markType(DockManager, 'DockManager', (<any>BaseElement).$);\r\n\tlayoutChange: (sender: any, args: LayoutChangeEventArgs) => void = null;\r\n\tlayoutChangeChanged(): void {\r\n\t\tif (this.layoutChange != null) {\r\n\t\t\tthis.m.s(\"layoutChange\", (a: any) => this.layoutChange(this, LayoutChangeEventArgs.b(this.b)), false);\r\n\t\t} else {\r\n\t\t\tthis.m.v(\"layoutChange\");\r\n\t\t}\r\n\t}\r\n\tprivate l: WCNativeHelper = new WCNativeHelper();\r\n\tprotected get m(): WCNativeHelper {\r\n\t\treturn this.l;\r\n\t}\r\n\tprivate u: any = null;\r\n\tprotected get nativeElement(): any {\r\n\t\treturn this.u;\r\n\t}\r\n\tprotected set nativeElement(a: any) {\r\n\t\tthis.u = a;\r\n\t\tthis.l.o = this.u;\r\n\t}\r\n\tsetNativeElement(a: any): void {\r\n\t\tthis.nativeElement = a;\r\n\t}\r\n\tget b(): DockManagerLayout {\r\n\t\tlet ret_ = this.m.m(\"layout\", (a: any) => new DockManagerLayout());\r\n\t\treturn <DockManagerLayout>ret_;\r\n\t}\r\n\tset b(a: DockManagerLayout) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"layout\", value_);\r\n\t}\r\n\tget c(): DockManagerPane {\r\n\t\tlet ret_ = this.m.m(\"draggedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset c(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"draggedPane\", value_);\r\n\t}\r\n\tget e(): DockManagerPoint {\r\n\t\tlet ret_ = this.m.m(\"dropPosition\", (a: any) => new DockManagerPoint());\r\n\t\treturn <DockManagerPoint>ret_;\r\n\t}\r\n\tset e(a: DockManagerPoint) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"dropPosition\", value_);\r\n\t}\r\n\tget a(): ContentPane {\r\n\t\tlet ret_ = this.m.m(\"activePane\", (a: any) => new ContentPane());\r\n\t\treturn <ContentPane>ret_;\r\n\t}\r\n\tset a(a: ContentPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"activePane\", value_);\r\n\t}\r\n\tget p(): boolean {\r\n\t\tlet ret_ = this.m.n(\"allowMaximize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset p(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"allowMaximize\", value_);\r\n\t}\r\n\tget r(): boolean {\r\n\t\tlet ret_ = this.m.n(\"containedInBoundaries\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset r(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"containedInBoundaries\", value_);\r\n\t}\r\n\tget g(): DockManagerShowHeaderIconOnHover {\r\n\t\tlet ret_ = this.m.n(\"showHeaderIconOnHover\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerShowHeaderIconOnHover>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.m.f<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, ret_);\r\n\t}\r\n\tset g(a: DockManagerShowHeaderIconOnHover) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.m.w(\"showHeaderIconOnHover\", value_);\r\n\t}\r\n\tget d(): DockManagerPane {\r\n\t\tlet ret_ = this.m.m(\"maximizedPane\", (a: any) => DockManagerPane.createFromNative(a));\r\n\t\treturn <DockManagerPane>ret_;\r\n\t}\r\n\tset d(a: DockManagerPane) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"maximizedPane\", value_);\r\n\t}\r\n\tget f(): DockManagerResourceStrings {\r\n\t\tlet ret_ = this.m.m(\"resourceStrings\", (a: any) => new DockManagerResourceStrings());\r\n\t\treturn <DockManagerResourceStrings>ret_;\r\n\t}\r\n\tset f(a: DockManagerResourceStrings) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"resourceStrings\", value_);\r\n\t}\r\n\tget n(): boolean {\r\n\t\tlet ret_ = this.m.n(\"allowFloatingPanesResize\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset n(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"allowFloatingPanesResize\", value_);\r\n\t}\r\n\tget s(): boolean {\r\n\t\tlet ret_ = this.m.n(\"disableKeyboardNavigation\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset s(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"disableKeyboardNavigation\", value_);\r\n\t}\r\n\tget o(): boolean {\r\n\t\tlet ret_ = this.m.n(\"allowInnerDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset o(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"allowInnerDock\", value_);\r\n\t}\r\n\tget h(): DockManagerShowPaneHeaders {\r\n\t\tlet ret_ = this.m.n(\"showPaneHeaders\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <DockManagerShowPaneHeaders>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, EnumUtil.getEnumValue<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, this.m.f<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, ret_);\r\n\t}\r\n\tset h(a: DockManagerShowPaneHeaders) {\r\n\t\tlet value_ = <any>enumGetBox<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.m.w(\"showPaneHeaders\", value_);\r\n\t}\r\n\tget t(): boolean {\r\n\t\tlet ret_ = this.m.n(\"proximityDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset t(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"proximityDock\", value_);\r\n\t}\r\n\tget j(): PaneActionBehavior {\r\n\t\tlet ret_ = this.m.n(\"closeBehavior\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <PaneActionBehavior>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<PaneActionBehavior>(PaneActionBehavior_$type, EnumUtil.getEnumValue<PaneActionBehavior>(PaneActionBehavior_$type, this.m.f<PaneActionBehavior>(PaneActionBehavior_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<PaneActionBehavior>(PaneActionBehavior_$type, ret_);\r\n\t}\r\n\tset j(a: PaneActionBehavior) {\r\n\t\tlet value_ = <any>enumGetBox<PaneActionBehavior>(PaneActionBehavior_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.m.w(\"closeBehavior\", value_);\r\n\t}\r\n\tget k(): PaneActionBehavior {\r\n\t\tlet ret_ = this.m.n(\"unpinBehavior\");\r\n\t\tif (<boolean>(ret_ === undefined && (this as any).___rawMode)) {\r\n\t\t\treturn <PaneActionBehavior>(undefined as any);\r\n\t\t}\r\n\t\tret_ = enumGetBox<PaneActionBehavior>(PaneActionBehavior_$type, EnumUtil.getEnumValue<PaneActionBehavior>(PaneActionBehavior_$type, this.m.f<PaneActionBehavior>(PaneActionBehavior_$type, ret_)));\r\n\t\treturn EnumUtil.getEnumValue<PaneActionBehavior>(PaneActionBehavior_$type, ret_);\r\n\t}\r\n\tset k(a: PaneActionBehavior) {\r\n\t\tlet value_ = <any>enumGetBox<PaneActionBehavior>(PaneActionBehavior_$type, a);\r\n\t\tvalue_ = WCNativeHelper.camel(value_.toString());\r\n\t\tthis.m.w(\"unpinBehavior\", value_);\r\n\t}\r\n\tget q(): boolean {\r\n\t\tlet ret_ = this.m.n(\"allowSplitterDock\");\r\n\t\treturn <boolean>ret_;\r\n\t}\r\n\tset q(a: boolean) {\r\n\t\tlet value_ = <any>a;\r\n\t\tthis.m.w(\"allowSplitterDock\", value_);\r\n\t}\r\n\tw(a: string): void {\r\n\t\tthis.nativeElement.focusPane(this.m.i(a));\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcDockManagerLayout } from \"./igc-dock-manager-layout\";\r\nimport { IgcDockManagerPaneComponent } from \"./igc-dock-manager-pane-component\";\r\nimport { IgcDockManagerPoint } from \"./igc-dock-manager-point\";\r\nimport { IgcContentPaneComponent } from \"./igc-content-pane-component\";\r\nimport { DockManagerShowHeaderIconOnHover, DockManagerShowHeaderIconOnHover_$type } from \"./DockManagerShowHeaderIconOnHover\";\r\nimport { IgcDockManagerResourceStrings } from \"./igc-dock-manager-resource-strings\";\r\nimport { DockManagerShowPaneHeaders, DockManagerShowPaneHeaders_$type } from \"./DockManagerShowPaneHeaders\";\r\nimport { PaneActionBehavior, PaneActionBehavior_$type } from \"./PaneActionBehavior\";\r\nimport { IgcLayoutChangeEventArgs } from \"./igc-layout-change-event-args\";\r\nimport { DockManager } from \"./DockManager\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { NamePatcher, getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, initializePropertiesFromCss } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Describes a Dock Manager component.\r\n*/\r\nexport class IgcDockManagerComponent\r\n{\r\n\r\nprotected createImplementation() : DockManager\r\n{\r\n\treturn new DockManager();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : DockManager {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcDockManagerComponent {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\t                                    \r\n\t                                    if ((this as any)._styling) {\r\n\t                                        NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n\t                                    }\r\n\t\tthis._implementation = this.createImplementation();\r\n\t\t(<any>this._implementation).externalObject = this;\r\n\t\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprivate _settingAttributes: boolean = false;\r\n\t                                protected _attached: boolean = false;\r\n\t                                    \r\n\t                                private _queuedSetAttributes: { attrName: string, attrValue: string }[] = [];\r\n\t                                protected _enqueueSetAttribute(attrName: string, attrValue: string) {\r\n\t                                     this._queuedSetAttributes.push({ attrName: attrName, attrValue: attrValue });\r\n\t                                }\r\n\t\r\n\t                                protected _flushQueuedAttributes() {\r\n\t                                    this._settingAttributes = true;\r\n\t                                    for (let i = 0; i < this._queuedSetAttributes.length; i++) {\r\n\t                                        this.setAttribute(\r\n\t                                            this._queuedSetAttributes[i].attrName,\r\n\t                                            this._queuedSetAttributes[i].attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t                                    this._queuedSetAttributes.length = 0;\r\n\t                                }\r\n\t                                protected _a(attrName: string, attrValue: any) {\r\n\t                                    if (this._updatingFromAttribute) {\r\n\treturn;\r\n\t    }\r\n\t                                    if (attrValue) {\r\n\t                                        attrValue = attrValue.toString();\r\n\t                                    }\r\n\t                                    this._settingAttributes = true;\r\n\t                                    attrName = toSpinal(attrName);\r\n\t                                    if (this._attached) {\r\n\t                                        this.setAttribute(attrName, attrValue);\r\n\t                                    } else { \r\n\t                                        this._enqueueSetAttribute(attrName, attrValue);\r\n\t                                    }\r\n\t                                    this._settingAttributes = false;\r\n\t    }\r\n\t\r\n\t                                protected setAttribute(attrName: string, attrValue: string) {\r\n\t\r\n\t                                }\r\n\t\r\n\t                \r\n\t                private _updatingFromAttribute: boolean = false;\r\n\t                attributeChangedCallback(name: string, oldValue: string, newValue: string) {\r\n\t                    if (this._settingAttributes) {\r\n\t                        return;\r\n\t                    }\r\n\t                    let setName = fromSpinal(name);\r\n\t                    this._updatingFromAttribute = true;\r\n\t                    (<any>this)[setName] = newValue;\r\n\t                    this._updatingFromAttribute = false;\r\n\t                }\r\n\t\r\n\t                public static register() { }\r\n\t/**\r\n\t * Gets/sets the layout configuration of the Dock Manager.\r\n\t*/\r\n\tget layout() : IgcDockManagerLayout {\r\n\t                                        const r = this.i.b;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerLayout();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset layout(v: IgcDockManagerLayout) {\r\n\t\tv == null ? this.i.b = null : this.i.b = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the currently dragged pane.\r\n\t*/\r\n\tget draggedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.c;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset draggedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.c = null : this.i.c = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the current drop position when performing custom drag/drop.\r\n\t*/\r\n\tget dropPosition() : IgcDockManagerPoint {\r\n\t                                        const r = this.i.e;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerPoint();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset dropPosition(v: IgcDockManagerPoint) {\r\n\t\tv == null ? this.i.e = null : this.i.e = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the active pane of the Dock Manager.\r\n\t*/\r\n\tget activePane() : IgcContentPaneComponent {\r\n\t                                        const r = this.i.a;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContentPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset activePane(v: IgcContentPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.a = null : this.i.a = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to maximize panes. Defaults to true.\r\n\t*/\r\n\tget allowMaximize() : boolean {\r\n\t\treturn (this.i.p as boolean);\r\n\t}\r\n\tset allowMaximize(v: boolean) {\r\n\t\tthis.i.p = ensureBool(v);\r\n\t                                        this._a(\"allowMaximize\", this.i.p);\r\n\t}\r\n\t/**\r\n\t * Determines whether the floating panes are kept inside the Dock Manager boundaries. Defaults to false.\r\n\t*/\r\n\tget containedInBoundaries() : boolean {\r\n\t\treturn (this.i.r as boolean);\r\n\t}\r\n\tset containedInBoundaries(v: boolean) {\r\n\t\tthis.i.r = ensureBool(v);\r\n\t                                        this._a(\"containedInBoundaries\", this.i.r);\r\n\t}\r\n\t/**\r\n\t * Determines which tab header icons should show when hovering over the tab with the mouse. Defaults to none.\r\n\t*/\r\n\tget showHeaderIconOnHover() : DockManagerShowHeaderIconOnHover {\r\n\t\treturn this.i.g;\r\n\t}\r\n\tset showHeaderIconOnHover(v: DockManagerShowHeaderIconOnHover) {\r\n\t\tthis.i.g = ensureEnum<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, v);\r\n\t                                        this._a(\"showHeaderIconOnHover\", enumToString<DockManagerShowHeaderIconOnHover>(DockManagerShowHeaderIconOnHover_$type, this.i.g));\r\n\t}\r\n\t/**\r\n\t * Gets/sets the maximized pane.\r\n\t*/\r\n\tget maximizedPane() : IgcDockManagerPaneComponent {\r\n\t                                        const r = this.i.d;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcDockManagerPaneComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset maximizedPane(v: IgcDockManagerPaneComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.d = null : this.i.d = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets/sets the resource strings.\r\n\t*/\r\n\tget resourceStrings() : IgcDockManagerResourceStrings {\r\n\t                                        const r = this.i.f;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcDockManagerResourceStrings();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset resourceStrings(v: IgcDockManagerResourceStrings) {\r\n\t\tv == null ? this.i.f = null : this.i.f = v.i;\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to resize floating panes. Defaults to true.\r\n\t*/\r\n\tget allowFloatingPanesResize() : boolean {\r\n\t\treturn (this.i.n as boolean);\r\n\t}\r\n\tset allowFloatingPanesResize(v: boolean) {\r\n\t\tthis.i.n = ensureBool(v);\r\n\t                                        this._a(\"allowFloatingPanesResize\", this.i.n);\r\n\t}\r\n\t/**\r\n\t * Disables the built-in keyboard shortcuts for pane navigation. Defaults to false.\r\n\t*/\r\n\tget disableKeyboardNavigation() : boolean {\r\n\t\treturn (this.i.s as boolean);\r\n\t}\r\n\tset disableKeyboardNavigation(v: boolean) {\r\n\t\tthis.i.s = ensureBool(v);\r\n\t                                        this._a(\"disableKeyboardNavigation\", this.i.s);\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user is allowed to inner dock panes. Defaults to true.\r\n\t*/\r\n\tget allowInnerDock() : boolean {\r\n\t\treturn (this.i.o as boolean);\r\n\t}\r\n\tset allowInnerDock(v: boolean) {\r\n\t\tthis.i.o = ensureBool(v);\r\n\t                                        this._a(\"allowInnerDock\", this.i.o);\r\n\t}\r\n\t/**\r\n\t * Determines whether pane headers are only shown on hover or always visible. Defaults to 'always'.\r\n\t*/\r\n\tget showPaneHeaders() : DockManagerShowPaneHeaders {\r\n\t\treturn this.i.h;\r\n\t}\r\n\tset showPaneHeaders(v: DockManagerShowPaneHeaders) {\r\n\t\tthis.i.h = ensureEnum<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, v);\r\n\t                                        this._a(\"showPaneHeaders\", enumToString<DockManagerShowPaneHeaders>(DockManagerShowPaneHeaders_$type, this.i.h));\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can dock the dragged pane by dragging it close to the target pane edges.\r\n\t * If enabled, docking indicators are not visible. Defaults to false.\r\n\t*/\r\n\tget proximityDock() : boolean {\r\n\t\treturn (this.i.t as boolean);\r\n\t}\r\n\tset proximityDock(v: boolean) {\r\n\t\tthis.i.t = ensureBool(v);\r\n\t                                        this._a(\"proximityDock\", this.i.t);\r\n\t}\r\n\t/**\r\n\t * Determines whether the selected pane or all panes are closed when clicking the close button of a pane within a dockable TabGroup.\r\n\t * Defaults to 'allPanes'.\r\n\t*/\r\n\tget closeBehavior() : PaneActionBehavior {\r\n\t\treturn this.i.j;\r\n\t}\r\n\tset closeBehavior(v: PaneActionBehavior) {\r\n\t\tthis.i.j = ensureEnum<PaneActionBehavior>(PaneActionBehavior_$type, v);\r\n\t                                        this._a(\"closeBehavior\", enumToString<PaneActionBehavior>(PaneActionBehavior_$type, this.i.j));\r\n\t}\r\n\t/**\r\n\t * Determines whether the selected pane or all panes are unpinned when clicking the unpin button of a pane within a dockable TabGroup.\r\n\t * Defaults to 'allPanes'.\r\n\t*/\r\n\tget unpinBehavior() : PaneActionBehavior {\r\n\t\treturn this.i.k;\r\n\t}\r\n\tset unpinBehavior(v: PaneActionBehavior) {\r\n\t\tthis.i.k = ensureEnum<PaneActionBehavior>(PaneActionBehavior_$type, v);\r\n\t                                        this._a(\"unpinBehavior\", enumToString<PaneActionBehavior>(PaneActionBehavior_$type, this.i.k));\r\n\t}\r\n\t/**\r\n\t * Determines whether the end user can dock the dragged pane directly in the parent split pane by dragging it over a splitter.\r\n\t * If enabled, a docking indicator will be shown over the splitter's drag handler. Defaults to false.\r\n\t*/\r\n\tget allowSplitterDock() : boolean {\r\n\t\treturn (this.i.q as boolean);\r\n\t}\r\n\tset allowSplitterDock(v: boolean) {\r\n\t\tthis.i.q = ensureBool(v);\r\n\t                                        this._a(\"allowSplitterDock\", this.i.q);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.layout && (this.layout as any).name && (this.layout as any).name == name) { return this.layout; }\r\n\tif (this.draggedPane && (this.draggedPane as any).name && (this.draggedPane as any).name == name) { return this.draggedPane; }\r\n\tif (this.dropPosition && (this.dropPosition as any).name && (this.dropPosition as any).name == name) { return this.dropPosition; }\r\n\tif (this.activePane && (this.activePane as any).name && (this.activePane as any).name == name) { return this.activePane; }\r\n\tif (this.maximizedPane && (this.maximizedPane as any).name && (this.maximizedPane as any).name == name) { return this.maximizedPane; }\r\n\tif (this.resourceStrings && (this.resourceStrings as any).name && (this.resourceStrings as any).name == name) { return this.resourceStrings; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\tprotected __p: string = null;\r\n\tprotected _hasUserValues: Set<string> = new Set<string>();\r\n\tprotected get hasUserValues(): Set<string> {\r\n\t    return this._hasUserValues;\r\n\t}\r\n\tprotected __m(propertyName: string) {\r\n\t    if (!this._inStyling) {\r\n\t        this._hasUserValues.add(propertyName);\r\n\t    }\r\n\t}\r\n\t\r\n\tprotected _stylingContainer: any = null;\r\n\tprotected _stylingParent: any = null;\r\n\tprotected _inStyling: boolean = false;\r\n\tprotected _styling(container: any, component: any, parent?: any) {\r\n\t        if (this._inStyling) {\r\n\t            return;\r\n\t        }\r\n\t        this._inStyling = true;\r\n\t        this._stylingContainer = container;\r\n\t        this._stylingParent = component;\r\n\t\t\r\n\t        let genericPrefix = \"\";\r\n\t        let typeName = (this.i as any).$type.name;\r\n\t        if (typeName.indexOf(\"Xam\") === 0) {\r\n\t            typeName = typeName.substring(3);\r\n\t        }\r\n\t        genericPrefix = toSpinal(\"DockManagerComponent\");\r\n\t\t\r\n\t\tlet additionalPrefixes = [];\r\n\t\t\r\n\t\tlet prefix = toSpinal(typeName);\r\n\t\tadditionalPrefixes.push(prefix + \"-\");\r\n\t\r\n\t        let b = (this.i as any).$type.baseType;\r\n\t        while (b && b.name != \"Object\" && \r\n\t            b.name != \"Base\" && \r\n\t            b.name != \"Control\" && \r\n\t            b.Name != \"DependencyObject\" &&\r\n\t            b.Name != \"FrameworkElement\") {\r\n\t            typeName = b.name;\r\n\t            if (typeName.indexOf(\"Xam\") === 0) {\r\n\t                typeName = typeName.substring(3);\r\n\t            }\r\n\t            let basePrefix = toSpinal(typeName);\r\n\t            additionalPrefixes.push(basePrefix + \"-\");\r\n\t            b = b.baseType;\r\n\t        }\r\n\t\t\r\n\t\tif (parent) {\r\n\t\t\tlet parentTypeName = (parent.i as any).$type.name;\r\n\t            if (parentTypeName.indexOf(\"Xam\") === 0) {\r\n\t                parentTypeName = parentTypeName.substring(3);\r\n\t            }\r\n\t            let parentPrefix = toSpinal(parentTypeName);\r\n\t\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\r\n\t\t\tadditionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\r\n\t\t}\r\n\t\r\n\t\tinitializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\r\n\t\r\n\t        if (this.draggedPane && (this.draggedPane as any)._styling) {\r\n\t    (this.draggedPane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.activePane && (this.activePane as any)._styling) {\r\n\t    (this.activePane as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.maximizedPane && (this.maximizedPane as any)._styling) {\r\n\t    (this.maximizedPane as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t\r\n\t        if ((this as any)._otherStyling) {\r\n\t            (this as any)._otherStyling(container, component, parent);\r\n\t        }\r\n\t        this._inStyling = false;\r\n\t}\r\n\tpublic setNativeElement(element: any) {\r\n\t\tthis.i.setNativeElement(element);\r\n\t}\r\n\t/**\r\n\t * Focuses a pane from the layout.\r\n\t\r\n\t*/\r\n\tpublic focusPane(contentId: string) {\r\n\t\tthis.i.w(contentId);\r\n\t}\r\n\t\r\n\t    private _layoutChange: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void = null;\r\n\t    private _layoutChange_wrapped: any = null;\r\n\t\r\n\tpublic get layoutChange(): (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void {\r\n\treturn this._layoutChange;\r\n\t}\r\n\t    public set layoutChange(ev: (s: IgcDockManagerComponent, e: IgcLayoutChangeEventArgs) => void) {\r\n\t        if (this._layoutChange_wrapped !== null) {\r\n\t            this.i.layoutChange = delegateRemove(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t            this._layoutChange_wrapped = null;\r\n\t            this._layoutChange = null;\r\n\t        }\r\n\t\r\n\t        this._layoutChange = ev;\r\n\t        this._layoutChange_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcLayoutChangeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeLayoutChange) {\r\n\t                        (this as any).beforeLayoutChange(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._layoutChange) {\r\n\t    this._layoutChange(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.layoutChange = delegateCombine(this.i.layoutChange, this._layoutChange_wrapped);\r\n\t        if (this.i.layoutChangeChanged) {\r\n\t            this.i.layoutChangeChanged();\r\n\t        }\r\n\t;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcDockManagerLayoutModule } from './igc-dock-manager-layout-module';\r\nimport { IgcContentPaneModule } from './igc-content-pane-module';\r\nimport { IgcSplitPaneModule } from './igc-split-pane-module';\r\nimport { IgcDocumentHostModule } from './igc-document-host-module';\r\nimport { IgcTabGroupPaneModule } from './igc-tab-group-pane-module';\r\nimport { IgcTabHeaderElementModule } from './igc-tab-header-element-module';\r\nimport { IgcDockManagerComponent } from './igc-dock-manager-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcDockManagerModule {\r\n    public static register() {\r\n                IgcDockManagerLayoutModule.register();\r\n        IgcContentPaneModule.register();\r\n        IgcSplitPaneModule.register();\r\n        IgcDocumentHostModule.register();\r\n        IgcTabGroupPaneModule.register();\r\n        IgcTabHeaderElementModule.register();\r\n        IgcDockManagerComponent.register();\r\n        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);        TypeRegistrar.registerCons('IgcDockManagerComponent', IgcDockManagerComponent);\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { VoidEventArgs as VoidEventArgs_internal } from \"./VoidEventArgs\";\r\n\r\nexport class IgcVoidEventArgs\r\n{\r\n\r\nprotected createImplementation() : VoidEventArgs_internal\r\n{\r\n\treturn new VoidEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : VoidEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n"],"names":["VoidEventArgs","static","a","$t","$","DockManagerPaneType","DockManagerPaneType_$type","SplitPaneOrientation","SplitPaneOrientation_$type","UnpinnedLocation","UnpinnedLocation_$type","DockManagerPoint","WCNativeHelper","e","b","this","nativeElement","o","setNativeElement","c","n","value_","w","d","DockManagerPane","___mustPassByValue","native_","undefined","toLowerCase","SplitPane","ContentPane","TabGroupPane","DocumentHost","g","j","h","l","ret_","___rawMode","getEnumValue","f","camel","toString","m","i","k","ContentPaneCollection","v","ab","x","z","aa","ac","ad","y","t","u","s","r","q","p","ObservableCollection$1","constructor","super","specialize","DockManagerPaneCollection","createFromNative","IgcDockManagerPaneComponent","createImplementation","_implementation","internal","$type","externalName","name","isRegistered","create","onImplementationCreated","_settingAttributes","_attached","_queuedSetAttributes","_updatingFromAttribute","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","ensureStylablePatched","Object","getPrototypeOf","externalObject","_initializeAdapters","_enqueueSetAttribute","attrName","attrValue","push","_flushQueuedAttributes","length","setAttribute","_a","attributeChangedCallback","oldValue","newValue","setName","findByName","findEphemera","indexOf","hasUserValues","__m","propertyName","add","container","component","parent","genericPrefix","typeName","substring","additionalPrefixes","prefix","baseType","Name","basePrefix","parentTypeName","parentPrefix","_otherStyling","IgcDockManagerPaneCollection","IgCollection","list","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","_createFromInternal","IgcDockManagerPoint","_provideImplementation","element","IgcSplitPaneComponent","_panes","id","type","orientation","panes","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","_inner","clear","size","floatingLocation","floatingWidth","floatingHeight","floatingResizable","allowEmpty","isMaximized","useFixedSize","IgcSplitPaneCollection","SplitPaneCollection","DockManagerLayout","IgcDockManagerLayout","_floatingPanes","rootPane","floatingPanes","IgcDockManagerLayoutModule","registerCons","register","IgcContentPaneComponent","contentId","header","headerId","tabHeaderId","unpinnedHeaderId","floatingHeaderId","allowClose","allowMaximize","allowPinning","allowDocking","acceptsInnerDock","allowFloating","unpinnedSize","isPinned","unpinnedLocation","hidden","disabled","documentOnly","IgcContentPaneModule","IgcSplitPaneModule","IgcDocumentHostComponent","IgcDocumentHostModule","IgcContentPaneCollection","IgcTabGroupPaneComponent","selectedIndex","IgcTabGroupPaneModule","DragService","IgcDragService","DockManagerShowHeaderIconOnHover","TabHeaderElement","BaseElement","IgcTabHeaderElement","dragService","IgcTabHeaderElementModule","DockManagerShowHeaderIconOnHover_$type","DockManagerResourceStrings","IgcDockManagerResourceStrings","close","pin","unpin","maximize","minimize","moreOptions","moreTabs","documents","DockManagerShowPaneHeaders","DockManagerShowPaneHeaders_$type","PaneActionBehavior","PaneActionBehavior_$type","LayoutChangeEventArgs","$ret","IgcLayoutChangeEventArgs","detail","DockManager","layoutChange","layoutChangeChanged","focusPane","IgcDockManagerComponent","_layoutChange","_layoutChange_wrapped","layout","draggedPane","dropPosition","activePane","containedInBoundaries","showHeaderIconOnHover","maximizedPane","resourceStrings","allowFloatingPanesResize","disableKeyboardNavigation","allowInnerDock","showPaneHeaders","proximityDock","closeBehavior","unpinBehavior","allowSplitterDock","ev","outerArgs","beforeLayoutChange","IgcDockManagerModule","IgcVoidEventArgs"],"sourceRoot":""}