{"version":3,"file":"igniteui-webcomponents-maps.0152f95725bbfcaf80b7.bundle.js","mappings":"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","sources":["webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMapSeriesHost_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicMarkerSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesBase_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImageTilesReadyEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ImagesChangedEventArgs.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapBackgroundTilingMode.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/MapResizeBehavior.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileSeries_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorVerticalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SphericalMercatorHorizontalScaler.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/XamGeographicMap_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsImageryStyle.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-sub-domains-collection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/SubDomainsCollection.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/BingMapsMapImageryView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-bing-maps-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/CustomMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-custom-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicContourLineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-contour-line-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicHighDensityScatterSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-high-density-scatter-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/ArcGISOnlineMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-arc-gis-online-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-core-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-images-changed-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-map-series-host-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-marker-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicPolylineSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-polyline-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicProportionalSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-proportional-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-scatter-area-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-base-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicShapeSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-shape-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicSymbolSeriesView_combined.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-symbol-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/GeographicTileSeries.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-tile-series-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-geographic-xy-triangulating-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-image-tiles-ready-event-args.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-open-street-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/TileGeneratorMapImagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-generator-map-imagery-module.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-component.ts","webpack://InfragisticsBlazor/./ig/igniteui-maps/igc-tile-series-module.ts"],"sourcesContent":["/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Base, Point, Type, typeCast, Number_$type, runOn, delegateRemove, delegateCombine, markType, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { SeriesPointOfInterest } from \"igniteui-charts/SeriesPointOfInterest\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { HighlightingInfo } from \"igniteui-core/HighlightingInfo\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { Visibility } from \"igniteui-core/Visibility\";\r\nimport { RectChangedEventArgs } from \"igniteui-core/RectChangedEventArgs\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { DataContext } from \"igniteui-core/DataContext\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapSeriesHost extends Series {\r\n\tstatic $t: Type = markType(GeographicMapSeriesHost, 'GeographicMapSeriesHost', (<any>Series).$);\r\n\tqi(): void {\r\n\t\tsuper.qi();\r\n\t\tif (this.w5 != null) {\r\n\t\t\tthis.w5.qi();\r\n\t\t}\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.w5 = this.w4();\r\n\t}\r\n\tprivate w3: Series = null;\r\n\tprotected get_fd(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tkr(a: any, b: string): any {\r\n\t\tlet c = this.nf(b);\r\n\t\tif (c == \"LatitudeMemberPath\") {\r\n\t\t\tc = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (c == \"LongitudeMemberPath\") {\r\n\t\t\tc = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.w5.kr(a, c);\r\n\t}\r\n\tmf(a: string): string {\r\n\t\tlet b = this.nf(a);\r\n\t\tif (b == \"LatitudeMemberPath\") {\r\n\t\t\tb = \"YMemberPath\";\r\n\t\t}\r\n\t\tif (b == \"LongitudeMemberPath\") {\r\n\t\t\tb = \"XMemberPath\";\r\n\t\t}\r\n\t\treturn this.w5.mf(b);\r\n\t}\r\n\tprotected get_kj(): any {\r\n\t\treturn this.k1(this.w5);\r\n\t}\r\n\tprotected set_kj(a: any): void {\r\n\t\tthis.o1(this.w5, a);\r\n\t}\r\n\ted(a: List$1<SeriesPointOfInterest>, b: boolean, c: boolean, d: number, e: boolean): boolean {\r\n\t\treturn this.w5.ed(a, b, c, d, e);\r\n\t}\r\n\tai(): Axis[] {\r\n\t\treturn this.w5.ai();\r\n\t}\r\n\tbp(): Series {\r\n\t\treturn this.w5;\r\n\t}\r\n\tget w5(): Series {\r\n\t\treturn this.w3;\r\n\t}\r\n\tset w5(a: Series) {\r\n\t\tlet b = this.w3;\r\n\t\tlet c: boolean = this.w5 != a;\r\n\t\tif (c) {\r\n\t\t\tthis.w3 = a;\r\n\t\t\tthis.xa(b, this.w3);\r\n\t\t}\r\n\t}\r\n\tprotected get_hasMarkers(): boolean {\r\n\t\treturn this.w5.hasMarkers;\r\n\t}\r\n\tprotected xa(a: any, b: any): void {\r\n\t\tif (this.w3 != null) {\r\n\t\t\tlet hostedSeries_ = this.w3;\r\n\t\t\t(<any>hostedSeries_).externalObject = TypeRegistrar.createFromInternal(hostedSeries_, PlatformConstants.Prefix, PlatformConstants.Postfix);\r\n\t\t\t(<any>hostedSeries_).externalObject._implementation = hostedSeries_;\r\n\t\t}\r\n\t\tthis.ph(this.w5);\r\n\t\tthis.w6.ci();\r\n\t\tif (a != null) {\r\n\t\t\tlet c = <Series>(a);\r\n\t\t\tthis.r5(c, null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = <Series>(b);\r\n\t\t\tthis.r5(d, this);\r\n\t\t}\r\n\t}\r\n\tdh(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.dj(this.w5, a, b, c);\r\n\t}\r\n\tdi(a: any, b: Point, c: boolean): HighlightingInfo {\r\n\t\treturn this.dk(this.w5, a, b, c);\r\n\t}\r\n\tko(a: Point): any {\r\n\t\treturn this.kx(this.w5, a);\r\n\t}\r\n\tkb(a: Point, b: boolean): number {\r\n\t\treturn this.w5.kb(a, b);\r\n\t}\r\n\tj9(a: Point, b: boolean): number {\r\n\t\treturn this.w5.j9(a, b);\r\n\t}\r\n\ti6(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.w5.i6(a, b, c);\r\n\t}\r\n\twh(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.wh(a, b, c);\r\n\t}\r\n\tws(a: Point): Rect {\r\n\t\treturn this.w5.ws(a);\r\n\t}\r\n\tao(a: Point): Rect[] {\r\n\t\treturn this.w5.ao(a);\r\n\t}\r\n\twt(a: Point): Rect {\r\n\t\treturn this.w5.wt(a);\r\n\t}\r\n\tap(a: Point): Rect[] {\r\n\t\treturn this.w5.ap(a);\r\n\t}\r\n\twu(a: Point): Rect {\r\n\t\treturn this.w5.wu(a);\r\n\t}\r\n\twv(a: Point): Rect {\r\n\t\treturn this.w5.wv(a);\r\n\t}\r\n\ti2(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.w5.i2(a, b, c);\r\n\t}\r\n\twd(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.wd(a, b, c);\r\n\t}\r\n\ti4(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.i6(a, b, c);\r\n\t}\r\n\twf(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.wf(a, b, c);\r\n\t}\r\n\twi(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.wi(a, b, c);\r\n\t}\r\n\ti7(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.w5.i7(a, b, c);\r\n\t}\r\n\twe(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.we(a, b, c);\r\n\t}\r\n\ti3(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.w5.i3(a, b, c);\r\n\t}\r\n\twg(a: Point, b: boolean, c: boolean): Point {\r\n\t\treturn this.w5.wg(a, b, c);\r\n\t}\r\n\ti5(a: Point, b: boolean, c: boolean): number {\r\n\t\treturn this.w5.i5(a, b, c);\r\n\t}\r\n\tj5(a: Point): number {\r\n\t\treturn this.w5.j5(a);\r\n\t}\r\n\tix(): number {\r\n\t\treturn this.w5.ix();\r\n\t}\r\n\tit(a: Point): number {\r\n\t\treturn this.w5.it(a);\r\n\t}\r\n\tkp(a: Point): any {\r\n\t\treturn this.w5.kp(a);\r\n\t}\r\n\tprotected abstract w4(): Series;\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new HostSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.w6 = typeCast<HostSeriesView>((<any>HostSeriesView).$, a);\r\n\t}\r\n\tw6: HostSeriesView;\r\n\tstatic readonly xc: DependencyProperty = DependencyProperty.i(\"VisibleFromScale\", Number_$type, (<any>GeographicMapSeriesHost).$, new PropertyMetadata(2, 1, (a: DependencyObject, b: DependencyPropertyChangedEventArgs) => {\r\n\t\tlet c: GeographicMapSeriesHost = <GeographicMapSeriesHost>a;\r\n\t\tc.raisePropertyChanged(\"VisibleFromScale\", b.oldValue, b.newValue);\r\n\t}));\r\n\tget w7(): number {\r\n\t\treturn <number>this.c(GeographicMapSeriesHost.xc);\r\n\t}\r\n\tset w7(a: number) {\r\n\t\tthis.h(GeographicMapSeriesHost.xc, a);\r\n\t}\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.w5.dc = this.dc;\r\n\t\t\tif (c != null) {\r\n\t\t\t\t(<SeriesViewer>c).rn(this.w5);\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.dc.nq(this.w5);\r\n\t\t\t}\r\n\t\t\tthis.w5.rf(this.wx);\r\n\t\t\tthis.w5.index = this.index;\r\n\t\t\tthis.p2(this.w5);\r\n\t\t\tthis.kh = this.w5.kh;\r\n\t\t\tlet e: SeriesViewer = typeCast<SeriesViewer>((<any>SeriesViewer).$, c);\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.actualWindowRectChanged = delegateRemove(e.actualWindowRectChanged, runOn(this, this.xb));\r\n\t\t\t}\r\n\t\t\tif (this.dc != null) {\r\n\t\t\t\tlet f = this.dc;\r\n\t\t\t\tf.actualWindowRectChanged = delegateCombine(f.actualWindowRectChanged, runOn(this, this.xb));\r\n\t\t\t}\r\n\t\t\tthis.w9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SyncLink\":\r\n\t\t\tthis.w5.c4 = this.c4;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"VisibleFromScale\":\r\n\t\t\tthis.w9();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Index\":\r\n\t\t\tthis.w5.index = this.index;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ItemsSource\":\r\n\t\t\tthis.w6.cj();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Resolution\":\r\n\t\t\tthis.w6.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"TransitionDuration\":\r\n\t\t\tthis.w6.ct();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Opacity\":\r\n\t\t\tthis.w6.cn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Visibility\":\r\n\t\t\tlet hs_ = this.w5;\r\n\t\t\tlet v_ = this._visibility;\r\n\t\t\ths_.visibility = v_;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MouseOverEnabled\":\r\n\t\t\tthis.w5.f9 = this.f9;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ExpectFunctions\":\r\n\t\t\tthis.w5.expectFunctions = this.expectFunctions;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Thickness\":\r\n\t\t\tthis.w6.cs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Brush\":\r\n\t\t\tthis.w6.ch();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Outline\":\r\n\t\t\tthis.w6.cp();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\t\t\tthis.w6.ce();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\t\t\tthis.w6.cf();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerFillOpacity\":\r\n\t\t\tif (!isNaN_(this.jh)) {\r\n\t\t\t\tthis.w6.cm();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"AreaFillOpacity\":\r\n\t\t\tif (!isNaN_(this.il)) {\r\n\t\t\t\tthis.w6.cg();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"OutlineMode\":\r\n\t\t\tthis.w6.co();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShowDefaultTooltip\":\r\n\t\t\tthis.w6.cr();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Title\":\r\n\t\t\tthis.w5.title = this.title;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeMode\":\r\n\t\t\tthis.w6.ck();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LegendItemBadgeShape\":\r\n\t\t\tthis.w6.cl();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"Legend\":\r\n\t\t\tthis.w5.legend = this.legend;\r\n\t\t\tthis.cw.a5();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate w9(): void {\r\n\t\tif (this.dc == null || this.w5 == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!isNaN_(this.w7)) {\r\n\t\t\tif (this.dc.wt.width > this.w7) {\r\n\t\t\t\tlet hs_ = this.w5;\r\n\t\t\t\tlet v_ = 1;\r\n\t\t\t\ths_.visibility = v_;\r\n\t\t\t} else {\r\n\t\t\t\tlet hs2_ = this.w5;\r\n\t\t\t\tlet v2_ = 0;\r\n\t\t\t\ths2_.visibility = v2_;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate xb(a: any, b: RectChangedEventArgs): void {\r\n\t\tthis.w9();\r\n\t}\r\n\tru(a: boolean): void {\r\n\t\tsuper.ru(a);\r\n\t\tif (this.w5 != null) {\r\n\t\t\tthis.w5.ru(a);\r\n\t\t}\r\n\t}\r\n\tprotected q7(a: boolean): void {\r\n\t\tsuper.q7(a);\r\n\t\tif (this.w5 != null) {\r\n\t\t\tthis.w5.qp();\r\n\t\t}\r\n\t}\r\n\trt(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tif (this.w5 != null) {\r\n\t\t\tthis.w5.rt(a, b, c, d, e);\r\n\t\t}\r\n\t}\r\n\ta2(a: Point, b: boolean): DataContext {\r\n\t\treturn this.w5.a2(a, b);\r\n\t}\r\n\tsg(): void {\r\n\t\tsuper.sg();\r\n\t\tthis.w5.sg();\r\n\t}\r\n\tprotected get_coercionMethods(): any {\r\n\t\treturn this._coercionMethods;\r\n\t}\r\n\tprotected set_coercionMethods(a: any): void {\r\n\t\tthis._coercionMethods = a;\r\n\t\tthis.w5.coercionMethods = a;\r\n\t}\r\n\tprotected p1(a: any): void {\r\n\t\tsuper.p1(a);\r\n\t\tif (this.w5 != null) {\r\n\t\t\tlet b = this.w5.kn();\r\n\t\t\tthis.pa(a, b);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class HostSeriesView extends SeriesView {\r\n\tstatic $t: Type = markType(HostSeriesView, 'HostSeriesView', (<any>SeriesView).$);\r\n\tconstructor(a: GeographicMapSeriesHost) {\r\n\t\tsuper(a);\r\n\t\tthis.cd = a;\r\n\t}\r\n\tprivate cd: GeographicMapSeriesHost = null;\r\n\ta3(a: RenderingContext, b: RenderingContext): void {\r\n\t\tsuper.a3(a, b);\r\n\t}\r\n\tci(): void {\r\n\t\tthis.cd.legendItemVisibility = 1;\r\n\t\tthis.cd.w5.legendItemVisibility = 0;\r\n\t\tthis.cd.w5.itemsSource = this.cd.itemsSource;\r\n\t\tthis.cd.w5.index = this.cd.index;\r\n\t\tthis.cd.w5.vk = this.cd.vk;\r\n\t\tthis.cd.w5.v0 = this.cd.vk;\r\n\t\tthis.cd.w5.cj = this.cd.cj;\r\n\t\tthis.cd.w5.jk = this.cd.jk;\r\n\t\tthis.cd.w5.ke = this.cd.ke;\r\n\t\tthis.cd.w5._opacity = this.cd._opacity;\r\n\t\tthis.cd.w5.jq = this.cd.jq;\r\n\t\tthis.cd.w5.il = this.cd.il;\r\n\t\tthis.cd.w5.jh = this.cd.jh;\r\n\t\tthis.cd.w5.gq = this.cd.gq;\r\n\t\tthis.cd.w5.legendItemBadgeShape = this.cd.legendItemBadgeShape;\r\n\t\tthis.cd.w5.be = this.cd.be;\r\n\t}\r\n\tcj(): void {\r\n\t\tthis.cd.w5.itemsSource = this.cd.itemsSource;\r\n\t}\r\n\tcq(): void {\r\n\t\tthis.cd.w5.jk = this.cd.jk;\r\n\t}\r\n\tct(): void {\r\n\t\tthis.cd.w5.ke = this.cd.ke;\r\n\t}\r\n\tcn(): void {\r\n\t\tthis.cd.w5._opacity = this.cd._opacity;\r\n\t}\r\n\tcs(): void {\r\n\t\tthis.cd.w5.jq = this.cd.jq;\r\n\t}\r\n\tch(): void {\r\n\t\tthis.cd.w5.vk = this.cd.vk;\r\n\t}\r\n\tcp(): void {\r\n\t\tthis.cd.w5.v0 = this.cd.v0;\r\n\t}\r\n\tce(): void {\r\n\t\tthis.cd.w5.vk = this.cd.ve;\r\n\t}\r\n\tcf(): void {\r\n\t\tthis.cd.w5.v0 = this.cd.vi;\r\n\t}\r\n\tck(): void {\r\n\t\tthis.cd.w5.be = this.cd.be;\r\n\t}\r\n\tcl(): void {\r\n\t\tthis.cd.w5.legendItemBadgeShape = this.cd.legendItemBadgeShape;\r\n\t}\r\n\tcg(): void {\r\n\t\tthis.cd.w5.il = this.cd.il;\r\n\t}\r\n\tcm(): void {\r\n\t\tthis.cd.w5.jh = this.cd.jh;\r\n\t}\r\n\tco(): void {\r\n\t\tthis.cd.w5.cj = this.cd.cj;\r\n\t}\r\n\tcr(): void {\r\n\t\tthis.cd.w5.gq = this.cd.gq;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, Type, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, typeGetValue, markType, markDep, TypeRegistrar } from \"igniteui-core/type\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\nimport { PlatformConstants } from \"igniteui-core/PlatformConstants\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMarkerSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicMarkerSeries, 'GeographicMarkerSeries', (<any>GeographicMapSeriesHost).$);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tlet a = this.w5;\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.xt));\r\n\t}\r\n\ts3(): DataTemplate {\r\n\t\treturn this.xu;\r\n\t}\r\n\tvq(): Brush {\r\n\t\treturn this.x7;\r\n\t}\r\n\tvr(): Brush {\r\n\t\treturn this.x8;\r\n\t}\r\n\tip(): number {\r\n\t\treturn this.xg;\r\n\t}\r\n\tmc(): string {\r\n\t\tlet a = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.w5);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.mc();\r\n\t}\r\n\tprivate xt(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<MarkerSeries>((<any>MarkerSeries).$, this.w5);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualMarkerTemplate\") {\r\n\t\t\tthis.xu = c.x5;\r\n\t\t} else if (b.propertyName == \"ActualMarkerOutline\") {\r\n\t\t\tthis.x8 = c.yn;\r\n\t\t} else if (b.propertyName == \"ActualMarkerBrush\") {\r\n\t\t\tthis.x7 = c.ym;\r\n\t\t}\r\n\t}\r\n\txf: MarkerType;\r\n\txg: number;\r\n\txe: MarkerOutlineMode;\r\n\txd: MarkerFillMode;\r\n\txv: DataTemplate;\r\n\tx9: Brush;\r\n\tya: Brush;\r\n\txh: number;\r\n\txu: DataTemplate;\r\n\tx7: Brush;\r\n\tx8: Brush;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicMarkerSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.w5).yo = this.x9;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.w5).yp = this.ya;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.w5).w9 = this.xe;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.w5).w5 = this.xd;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[9]:\r\n\t\t\t(<ScatterBase>this.w5).xf = this.xf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[7]:\r\n\t\t\t(<ScatterBase>this.w5).x7 = this.xv;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[8]:\r\n\t\t\t(<ScatterBase>this.w5).xo = this.xg;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMarkerSeries.$$p[10]:\r\n\t\t\t(<ScatterBase>this.w5).aae = this.xh;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMarkerSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:x7:xw', [ (<any>Brush).$ ], 'ActualMarkerOutline:x8:xx', [ (<any>Brush).$ ], 'ActualMarkerTemplate:xu:xy', [ (<any>DataTemplate).$, null ], 'MarkerBrush:x9:xz', [ (<any>Brush).$ ], 'MarkerFillMode:xd:x0', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:xe:x1', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:ya:x2', [ (<any>Brush).$ ], 'MarkerTemplate:xv:x3', [ (<any>DataTemplate).$, null ], 'MarkerThickness:xg:x4', [ 1, DeviceUtils.g(2) ], 'MarkerType:xf:x5', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, Defaults.e) ], 'MaximumMarkers:xh:x6', [ 1, 400 ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from \"igniteui-charts/ShapeItemSearchMode\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ShapefileConverter } from \"igniteui-core/ShapefileConverter\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Base, IEnumerable, IEnumerable_$type, Type, String_$type, typeCast, Boolean_$type, enumGetBox, EnumUtil, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markType, markDep } from \"igniteui-core/type\";\r\nimport { AssigningShapeStyleEventArgs } from \"igniteui-charts/AssigningShapeStyleEventArgs\";\r\nimport { AssigningShapeMarkerStyleEventArgs } from \"igniteui-charts/AssigningShapeMarkerStyleEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { AsyncCompletedEventArgs } from \"igniteui-core/AsyncCompletedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicShapeSeriesBase extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBase, 'GeographicShapeSeriesBase', (<any>GeographicMapSeriesHost).$);\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesBaseView(this);\r\n\t}\r\n\txh: GeographicShapeSeriesBaseView;\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.xh = <GeographicShapeSeriesBaseView>a;\r\n\t}\r\n\tx4: string;\r\n\tprotected get_ff(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected get_ef(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\txp: boolean;\r\n\txo: boolean;\r\n\tprotected xm: boolean = false;\r\n\tprotected xl: boolean = false;\r\n\txg: ShapeItemSearchMode;\r\n\txs: number;\r\n\txt: string;\r\n\txf: BrushScale;\r\n\txn: boolean;\r\n\txr: number;\r\n\tassigningShapeStyle: (sender: any, args: AssigningShapeStyleEventArgs) => void = null;\r\n\tassigningShapeMarkerStyle: (sender: any, args: AssigningShapeMarkerStyleEventArgs) => void = null;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.xh.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapeMemberPath\":\r\n\t\t\tthis.xh.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[8]:\r\n\t\t\tthis.xh.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[4]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).yd = this.xp;\r\n\t\t\tthis.xm = this.xp;\r\n\t\t\tif (this.xp) {\r\n\t\t\t\tlet e = (<ShapeSeriesBase>this.w5);\r\n\t\t\t\te.assigningShapeStyle = delegateCombine(e.assigningShapeStyle, runOn(this, this.x7));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ShapeSeriesBase>this.w5);\r\n\t\t\t\tf.assigningShapeStyle = delegateRemove(f.assigningShapeStyle, runOn(this, this.x7));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[3]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).yc = this.xo;\r\n\t\t\tthis.xl = this.xo;\r\n\t\t\tif (this.xp) {\r\n\t\t\t\tlet g = (<ShapeSeriesBase>this.w5);\r\n\t\t\t\tg.assigningShapeMarkerStyle = delegateCombine(g.assigningShapeMarkerStyle, runOn(this, this.x6));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ShapeSeriesBase>this.w5);\r\n\t\t\t\th.assigningShapeMarkerStyle = delegateRemove(h.assigningShapeMarkerStyle, runOn(this, this.x6));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[5]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).xp = this.xg;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[6]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).yu = this.xr;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[7]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).yv = this.xs;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[0]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).yz = this.xt;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[1]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).xf = this.xf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeriesBase.$$p[2]:\r\n\t\t\t(<ShapeSeriesBase>this.w5).x8 = this.xn;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ShapefileDataSource\":\r\n\t\t\tif (c != null) {\r\n\t\t\t\tlet i = <ShapefileConverter>c;\r\n\t\t\t\tif (this.xk) {\r\n\t\t\t\t\ti.importCompleted = delegateRemove(i.importCompleted, runOn(this, this.x8));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (d != null) {\r\n\t\t\t\tlet j = <ShapefileConverter>d;\r\n\t\t\t\tif (j.count > 0) {\r\n\t\t\t\t\tthis.x9();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tthis.xk = true;\r\n\t\t\t\tj.importCompleted = delegateCombine(j.importCompleted, runOn(this, this.x8));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate x7(a: any, b: AssigningShapeStyleEventArgs): void {\r\n\t\tif (this.assigningShapeStyle != null) {\r\n\t\t\tthis.assigningShapeStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate x6(a: any, b: AssigningShapeMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningShapeMarkerStyle != null) {\r\n\t\t\tthis.assigningShapeMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate x8(a: any, b: AsyncCompletedEventArgs): void {\r\n\t\tthis.x9();\r\n\t}\r\n\tprivate x9(): void {\r\n\t\tlet sds_ = this.xj;\r\n\t\tlet ext_ = (sds_ as any).externalObject;\r\n\t\tthis.itemsSource = <IEnumerable><any><any>(ext_.getPointData());\r\n\t}\r\n\tprivate xi: ShapefileConverter = null;\r\n\tprivate xk: boolean = false;\r\n\tget xj(): ShapefileConverter {\r\n\t\treturn this.xi;\r\n\t}\r\n\tset xj(a: ShapefileConverter) {\r\n\t\tlet b = this.xi;\r\n\t\tthis.xi = a;\r\n\t\tif (b != this.xi) {\r\n\t\t\tthis.raisePropertyChanged(\"ShapefileDataSource\", b, this.xi);\r\n\t\t}\r\n\t}\r\n\txq: number;\r\n\tprotected get_g8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g8(a: boolean): void {\r\n\t\tsuper.set_g8(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeriesBase, 'raisePropertyChanged', [ 'FillMemberPath:xt:ya', [ 2 ], 'FillScale:xf:yb', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:xn:yc', [ 0, false ], 'IsCustomShapeMarkerStyleAllowed:xo:yd', [ 0, false ], 'IsCustomShapeStyleAllowed:xp:ye', [ 0, false ], 'ItemSearchMode:xg:yf', [ ShapeItemSearchMode_$type, enumGetBox<ShapeItemSearchMode>(ShapeItemSearchMode_$type, 0) ], 'ItemSearchPointsThreshold:xr:yg', [ 1, 10000 ], 'ItemSearchThreshold:xs:yh', [ 1, 10000 ], 'ShapeFilterResolution:xq:yi', [ 1, 2 ], 'ShapeMemberPath:x4:yj', [ 2, \"points\" ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesBaseView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesBaseView, 'GeographicShapeSeriesBaseView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicShapeSeriesBase) {\r\n\t\tsuper(a);\r\n\t\tthis.cu = a;\r\n\t}\r\n\tprivate cu: GeographicShapeSeriesBase = null;\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\t(<ShapeSeriesBase>this.cu.w5).zc = this.cu.x4;\r\n\t}\r\n\tcv(): void {\r\n\t\tlet a: ShapeSeriesBase = <ShapeSeriesBase>this.cu.w5;\r\n\t\tif (this.cu.dc == null) {\r\n\t\t\ta.xj = null;\r\n\t\t\ta.xl = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xj = (<XamGeographicMap>this.cu.dc).xj;\r\n\t\ta.xl = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<ShapeSeriesBase>this.cu.w5).zc = this.cu.x4;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<ShapeSeriesBase>this.cu.w5).yr = this.cu.xq;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImageTilesReadyEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImageTilesReadyEventArgs, 'ImageTilesReadyEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { EventArgs, Base, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ImagesChangedEventArgs extends EventArgs {\r\n\tstatic $t: Type = markType(ImagesChangedEventArgs, 'ImagesChangedEventArgs', (<any>EventArgs).$);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapBackgroundTilingMode {\r\n\t/**\r\n\t * Indicates that the map should decide the desired tiling mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will not wrap tiles around the origin.\r\n\t */\r\n\tNonWrapped = 1,\r\n\t/**\r\n\t * Map will wrap tiles around the origin.\r\n\t */\r\n\tWrapped = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapBackgroundTilingMode_$type = markEnum('MapBackgroundTilingMode', 'Auto,0|NonWrapped,1|Wrapped,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Indicates the desired behavior for the map on resizing.\r\n */\r\nexport enum MapResizeBehavior {\r\n\t/**\r\n\t * Indicates that the map should decide the desired resize mode automatically.\r\n\t */\r\n\tAuto = 0,\r\n\t/**\r\n\t * Map will attempt to keep the top left position static during resize.\r\n\t */\r\n\tMaintainTopLeftPosition = 1,\r\n\t/**\r\n\t * Map will attempt to keep the center position static during resize.\r\n\t */\r\n\tMaintainCenterPosition = 2\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let MapResizeBehavior_$type = markEnum('MapResizeBehavior', 'Auto,0|MaintainTopLeftPosition,1|MaintainCenterPosition,2');\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, PropertyChangedEventArgs, EventArgs, runOn, delegateRemove, delegateCombine, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { DomRenderer, DomRenderer_$type, DomWrapper, DomWrapper_$type } from \"igniteui-core/dom\";\r\nimport { RenderSurface } from \"igniteui-charts/RenderSurface\";\r\nimport { Dictionary$2 } from \"igniteui-core/Dictionary$2\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { ShapeSeriesViewBase } from \"igniteui-charts/ShapeSeriesViewBase\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { GeometryGroup } from \"igniteui-core/GeometryGroup\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { PathGeometry } from \"igniteui-core/PathGeometry\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { PathFigure } from \"igniteui-core/PathFigure\";\r\nimport { Geometry } from \"igniteui-core/Geometry\";\r\nimport { PointCollection } from \"igniteui-core/PointCollection\";\r\nimport { CanvasViewRenderer } from \"igniteui-core/CanvasViewRenderer\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { truncate } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeries extends ShapeSeriesBase implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(TileSeries, 'TileSeries', (<any>ShapeSeriesBase).$, [IMapRenderDeferralHandler_$type]);\r\n\tprotected bk(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\tprotected get_f4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>TileSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new TileSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.aac = <TileSeriesView>a;\r\n\t}\r\n\tprotected get_yf(): boolean {\r\n\t\treturn false;\r\n\t}\r\n\tprotected aac: TileSeriesView;\r\n\tget aag(): GeographicMapImagery {\r\n\t\treturn this.aae;\r\n\t}\r\n\tset aag(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.aag;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.aag;\r\n\t\t\tthis.aae = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate aae: GeographicMapImagery = null;\r\n\tprivate aad: GeographicMapImagery = null;\r\n\tprotected get aaf(): GeographicMapImagery {\r\n\t\treturn this.aad;\r\n\t}\r\n\tprotected set aaf(a: GeographicMapImagery) {\r\n\t\tlet b = this.aad;\r\n\t\tthis.aad = a;\r\n\t\tthis.raisePropertyChanged(\"ActualTileImagery\", b, this.aad);\r\n\t}\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tlet e: GeographicMapImagery;\r\n\t\tlet f: GeographicMapImagery;\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.propertyChanged = delegateRemove(e.propertyChanged, runOn(this, this.aal));\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.propertyChanged = delegateCombine(f.propertyChanged, runOn(this, this.aal));\r\n\t\t\t}\r\n\t\t\tthis.aac.dv(e, f);\r\n\t\t\tthis.ru(false);\r\n\t\t\tthis.qn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTileImagery\":\r\n\t\t\te = <GeographicMapImagery>c;\r\n\t\t\tf = <GeographicMapImagery>d;\r\n\t\t\tif (e != null) {\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.aam));\r\n\t\t\t\te.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tif (f != null) {\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.aam));\r\n\t\t\t\tf.deferralHandler = this;\r\n\t\t\t}\r\n\t\t\tthis.aac.du(e, f);\r\n\t\t\tif (f != null && typeCast<XamGeographicMap>((<any>XamGeographicMap).$, this.dc) !== null) {\r\n\t\t\t\tf.geographicMap = <XamGeographicMap>this.dc;\r\n\t\t\t\tthis.aao(this.cw);\r\n\t\t\t\tthis.aac.dr(this.dc.wt);\r\n\t\t\t}\r\n\t\t\tthis.qn();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.aac.dr(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WorldRect\":\r\n\t\t\tthis.aac.dy(<Rect>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tlet g = <SeriesViewer>c;\r\n\t\t\tlet h = <SeriesViewer>d;\r\n\t\t\tif (g != null && this.aaf != null) {\r\n\t\t\t\tthis.aaf.be(null);\r\n\t\t\t}\r\n\t\t\tif (h != null && this.aaf != null) {\r\n\t\t\t\tthis.aaf.be(this.cw.ae);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBrush\":\r\n\r\n\t\t\tcase \"ActualOutline\":\r\n\r\n\t\t\tcase \"ActualThickness\":\r\n\t\t\tthis.qp();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate aal(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tif (b.propertyName == \"MultiScaleImage\") {\r\n\t\t\tthis.aao(this.cw);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: EventArgs) => void = null;\r\n\tprivate aam(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new EventArgs());\r\n\t\t}\r\n\t\tif (!this.aai) {\r\n\t\t\tthis.aac.dw();\r\n\t\t}\r\n\t}\r\n\tprivate aah: (arg1: boolean) => void = null;\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.aah = b;\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.aah = null;\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.ru(false);\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.j0 != null) {\r\n\t\t\tthis.j0.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tprotected su(a: Rect, b: Rect): void {\r\n\t\tthis.aac.dx();\r\n\t\tsuper.su(a, b);\r\n\t}\r\n\tprivate aai: boolean = false;\r\n\trv(a: boolean): void {\r\n\t\tsuper.rv(a);\r\n\t\tthis.aan(a, this.cw);\r\n\t}\r\n\tprotected aan(a: boolean, b: SeriesView): void {\r\n\t\tlet c: Rect;\r\n\t\tlet d: Rect;\r\n\t\tlet e = <TileSeriesView>b;\r\n\t\tlet f = b.getViewInfo(c, d);\r\n\t\tc = f.p0;\r\n\t\td = f.p1;\r\n\t\tthis.aao(b);\r\n\t\tif (this.aah != null) {\r\n\t\t\tthis.aai = true;\r\n\t\t\tthis.aah(a);\r\n\t\t\tthis.aai = false;\r\n\t\t}\r\n\t\te.dw();\r\n\t}\r\n\trt(a: Rect, b: Rect, c: RenderSurface, d: string, e: number): void {\r\n\t\tsuper.rt(a, b, c, d, e);\r\n\t\tlet f = this.ho.item(d);\r\n\t\tf.bd(c);\r\n\t\tif (this.d7(f)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.zs(f);\r\n\t}\r\n\tprivate aao(a: SeriesView): void {\r\n\t\tlet b: Rect;\r\n\t\tlet c: Rect;\r\n\t\tlet d = a.getViewInfo(b, c);\r\n\t\tb = d.p0;\r\n\t\tc = d.p1;\r\n\t\tif (this.aag != null && this.aag.ao != null) {\r\n\t\t\tif (this.aag != this.aaf) {\r\n\t\t\t\tthis.aaf = this.aag;\r\n\t\t\t}\r\n\t\t\tif (this.aaf != null && !b.isEmpty) {\r\n\t\t\t\tif (this.aaf.width != b.width) {\r\n\t\t\t\t\tthis.aaf.width = b.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (this.aaf.height != b.height) {\r\n\t\t\t\t\tthis.aaf.height = b.height;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\to7(a: boolean, b: SeriesView): void {\r\n\t\tsuper.o7(a, b);\r\n\t\t(<TileSeriesView>b).ds();\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileSeriesView extends ShapeSeriesViewBase {\r\n\tstatic $t: Type = markType(TileSeriesView, 'TileSeriesView', (<any>ShapeSeriesViewBase).$);\r\n\tconstructor(a: TileSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.dn = a;\r\n\t}\r\n\tprotected dn: TileSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t\tthis.dn.v0 = Defaults.tileSeries_Outline;\r\n\t\t\tthis.dn.vk = Defaults.tileSeries_Brush;\r\n\t\t}\r\n\t}\r\n\tprotected cx(a: FrameworkElement, b: PathGeometry): void {\r\n\t\tif (b.c.count > 0) {\r\n\t\t\tthis.dz.d.add(b);\r\n\t\t}\r\n\t}\r\n\tprotected di(a: number, b: List$1<PointCollection>): PathGeometry {\r\n\t\treturn this.dj(a, b, true);\r\n\t}\r\n\tprotected dh(a: number, b: any): FrameworkElement {\r\n\t\treturn null;\r\n\t}\r\n\tprotected c1(a: FrameworkElement, b: boolean): void {\r\n\t}\r\n\tcz(a: FrameworkElement, b: any, c: boolean): void {\r\n\t}\r\n\tprivate dz: GeometryGroup = new GeometryGroup();\r\n\tc7(): void {\r\n\t\tsuper.c7();\r\n\t\tthis.dz.d.clear();\r\n\t}\r\n\tc6(): void {\r\n\t\tsuper.c6();\r\n\t\tthis.a2();\r\n\t}\r\n\tdr(a: Rect): void {\r\n\t\tif (this.dn.aag != null) {\r\n\t\t\tthis.dn.aag.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tprivate dq: DomWrapper = null;\r\n\tprivate dp: RenderingContext = null;\r\n\tdu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.dq == null) {\r\n\t\t\tthis.dq = this.f.j0.createElement(\"canvas\");\r\n\t\t\tlet c = this.f.j0.get2DCanvasContext(this.dq);\r\n\t\t\tthis.dp = new RenderingContext(new CanvasViewRenderer(), c);\r\n\t\t\tthis.dq.setAttribute(\"width\", this.b9.width.toString());\r\n\t\t\tthis.dq.setAttribute(\"height\", this.b9.height.toString());\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t\ta.imagesChanged = delegateRemove(a.imagesChanged, runOn(this, this.dt));\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tif (this.ae != null) {\r\n\t\t\t\tb.be(this.ae);\r\n\t\t\t}\r\n\t\t\tb.bd(this.dp);\r\n\t\t\tb.bf(this.b9);\r\n\t\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.dt));\r\n\t\t}\r\n\t}\r\n\tprivate dt(a: any, b: EventArgs): void {\r\n\t\tthis.a2();\r\n\t}\r\n\tdv(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t}\r\n\tdx(): void {\r\n\t\tif (this.dq != null) {\r\n\t\t\tthis.dq.setAttribute(\"width\", this.b9.width.toString());\r\n\t\t\tthis.dq.setAttribute(\"height\", this.b9.height.toString());\r\n\t\t}\r\n\t\tif (this.dn.aag != null) {\r\n\t\t\tthis.dn.aag.bf(this.b9);\r\n\t\t}\r\n\t}\r\n\tprotected bj(a: RenderingContext, b: boolean): void {\r\n\t\tsuper.bj(a, b);\r\n\t\tif (b) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (this.dq == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c: boolean = false;\r\n\t\tif (this.dz.d.count > 0) {\r\n\t\t\tc = true;\r\n\t\t\tthis.m.aa();\r\n\t\t\tthis.m.r(this.dz);\r\n\t\t\tlet d = <CanvasRenderingContext2D>this.m.h();\r\n\t\t\td.clip();\r\n\t\t}\r\n\t\tlet e: number = <number>truncate(Math.round(this.b9.left));\r\n\t\tlet f: number = <number>truncate(Math.round(this.b9.top));\r\n\t\tlet g: number = <number>truncate(Math.round(this.b9.width));\r\n\t\tlet h: number = <number>truncate(Math.round(this.b9.height));\r\n\t\tthis.m.o(this.dq.getNativeElement(), 1, e, f, g, h, e, f, g, h);\r\n\t\tif (c) {\r\n\t\t\tthis.m.z();\r\n\t\t}\r\n\t}\r\n\tdw(): void {\r\n\t\tthis.a2();\r\n\t}\r\n\tds(): void {\r\n\t}\r\n\tdy(a: Rect): void {\r\n\t\tif (this.dn.aag != null) {\r\n\t\t\tthis.dn.aag.a6();\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { VerticalLinearScaler } from \"igniteui-charts/VerticalLinearScaler\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorVerticalScaler extends VerticalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorVerticalScaler, 'SphericalMercatorVerticalScaler', (<any>VerticalLinearScaler).$);\r\n\tprivate au: Rect = null;\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.height + b.e.top * b.d.height;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.au, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.au, b.c, b.a);\r\n\t\t\tc = (c - (b.e.top * b.d.height)) / b.e.height;\r\n\t\t\treturn c;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.top;\r\n\t\tlet n: number = h.height;\r\n\t\tlet o: number = f.top;\r\n\t\tlet p: number = f.height;\r\n\t\tlet q: number = g.top;\r\n\t\tlet r: number = g.height;\r\n\t\tlet s: number = this.au.top;\r\n\t\tlet t: number = this.au.height;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: number = 0.017453292519943295;\r\n\t\tlet w: number;\r\n\t\tlet x: number;\r\n\t\tlet y: number;\r\n\t\tlet z: number;\r\n\t\tlet aa: number;\r\n\t\tlet ab: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tab = true;\r\n\t\t}\r\n\t\tfor (let ac: number = b; ac < c; ac++) {\r\n\t\t\tif (ab) {\r\n\t\t\t\te = u[ac];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(ac);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * n / this.aj;\r\n\t\t\t\tz = m + z;\r\n\t\t\t\taa = (z - s * n) / t;\r\n\t\t\t\tz = (aa - (o * r)) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (e < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ah;\r\n\t\t\t\t}\r\n\t\t\t\tif (e > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\t\t\te = SphericalMercatorVerticalScaler.ag;\r\n\t\t\t\t}\r\n\t\t\t\tw = e * (v);\r\n\t\t\t\tx = Math.sin(w);\r\n\t\t\t\ty = 0.5 * Math.log((1 + x) / (1 - x));\r\n\t\t\t\tz = (this.ai - y) * r / this.aj;\r\n\t\t\t\tz = q + z;\r\n\t\t\t\tz = (z - o * r) / p;\r\n\t\t\t\tif (ab) {\r\n\t\t\t\t\tu[ac] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(ac, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = this.ak(a.mc);\r\n\t\te = this.ak(a.mb);\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprotected w(a: string, b: any, c: any): void {\r\n\t\tsuper.w(a, b, c);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"ActualMinimumValue\":\r\n\r\n\t\t\tcase \"ActualMaximumValue\":\r\n\t\t\tthis.ai = SphericalMercatorVerticalScaler.am(this.n);\r\n\t\t\tthis.aj = SphericalMercatorVerticalScaler.am(this.n) - SphericalMercatorVerticalScaler.am(this.o);\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate static ag: number = 85.05112878;\r\n\tprivate static ah: number = -85.05112878;\r\n\tprivate ai: number = 0;\r\n\tprivate aj: number = 0;\r\n\tstatic get as(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t}\r\n\tstatic get at(): number {\r\n\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.au = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = (a - c.top) * b.width + b.top * c.height;\r\n\t\te = SphericalMercatorVerticalScaler.am(this.n) - e / (c.height / this.aj);\r\n\t\treturn SphericalMercatorVerticalScaler.aq(e);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e = c.top + this.getMercatorScaledValue3(a, c.height);\r\n\t\treturn (e - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f = this.getMercatorScaledValue3(a, d.height);\r\n\t\treturn (f - b.top * c.height) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue3(a: number, b: number): number {\r\n\t\ta = a > SphericalMercatorVerticalScaler.ah ? (a < SphericalMercatorVerticalScaler.ag ? a : SphericalMercatorVerticalScaler.ag) : SphericalMercatorVerticalScaler.ah;\r\n\t\tlet c = SphericalMercatorVerticalScaler.am(a);\r\n\t\tlet d = (this.ai - c) * b / this.aj;\r\n\t\treturn (d);\r\n\t}\r\n\tstatic am(a: number): number {\r\n\t\tlet b: number = a * (0.017453292519943295);\r\n\t\tlet c: number = Math.sin(b);\r\n\t\tlet d: number = 0.5 * Math.log((1 + c) / (1 - c));\r\n\t\treturn d;\r\n\t}\r\n\tstatic aq(a: number): number {\r\n\t\ta = Math.exp(2 * a);\r\n\t\treturn Math.asin((a - 1) / (a + 1)) / 0.017453292519943295;\r\n\t}\r\n\tprivate ak(a: number): number {\r\n\t\tif (a < SphericalMercatorVerticalScaler.ah) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ah;\r\n\t\t}\r\n\t\tif (a > SphericalMercatorVerticalScaler.ag) {\r\n\t\t\treturn SphericalMercatorVerticalScaler.ag;\r\n\t\t}\r\n\t\treturn a;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HorizontalLinearScaler } from \"igniteui-charts/HorizontalLinearScaler\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { IList$1, IList$1_$type, Base, Type, markType } from \"igniteui-core/type\";\r\nimport { NumericScaler } from \"igniteui-charts/NumericScaler\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SphericalMercatorHorizontalScaler extends HorizontalLinearScaler {\r\n\tstatic $t: Type = markType(SphericalMercatorHorizontalScaler, 'SphericalMercatorHorizontalScaler', (<any>HorizontalLinearScaler).$);\r\n\tprivate aj: Rect = null;\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.aj = new Rect(0, 0, 0, 1, 1);\r\n\t}\r\n\tq(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = a * b.e.width + b.e.left * b.d.width;\r\n\t\t\tlet d: number = this.getMercatorUnscaledValue(c, this.aj, b.c, b.a);\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorUnscaledValue(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tp(a: number, b: ScalerParams): number {\r\n\t\tif (!b.c.isEmpty) {\r\n\t\t\tlet c: number = this.getMercatorScaledValue1(a, this.aj, b.c, b.a);\r\n\t\t\tlet d: number = (c - (b.e.left * b.d.width)) / b.e.width;\r\n\t\t\treturn d;\r\n\t\t} else {\r\n\t\t\treturn this.getMercatorScaledValue1(a, b.e, b.d, b.a);\r\n\t\t}\r\n\t}\r\n\tprivate af(values_: IList$1<number>): number[] {\r\n\t\tlet a = <any[]>(Array.isArray(values_) ? values_ : null);\r\n\t\treturn <number[]>a;\r\n\t\treturn null;\r\n\t}\r\n\tv(a: IList$1<number>, b: number, c: number, d: ScalerParams): void {\r\n\t\tlet e: number;\r\n\t\tlet f: Rect = d.e;\r\n\t\tlet g: Rect = d.d;\r\n\t\tlet h: Rect = d.c;\r\n\t\tlet i: boolean = d.a;\r\n\t\tlet j: boolean = !h.isEmpty;\r\n\t\tlet k: number = this.m;\r\n\t\tlet l: number = this.o;\r\n\t\tlet m: number = h.left;\r\n\t\tlet n: number = h.width;\r\n\t\tlet o: number = f.left;\r\n\t\tlet p: number = f.width;\r\n\t\tlet q: number = g.left;\r\n\t\tlet r: number = g.width;\r\n\t\tlet s: number = this.aj.left;\r\n\t\tlet t: number = this.aj.width;\r\n\t\tlet u: number[] = this.af(a);\r\n\t\tlet v: boolean = false;\r\n\t\tif (u != null) {\r\n\t\t\tv = true;\r\n\t\t}\r\n\t\tfor (let w: number = b; w < c; w++) {\r\n\t\t\tif (v) {\r\n\t\t\t\te = u[w];\r\n\t\t\t} else {\r\n\t\t\t\te = a.item(w);\r\n\t\t\t}\r\n\t\t\tif (j) {\r\n\t\t\t\tlet x: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tx = 1 - x;\r\n\t\t\t\t}\r\n\t\t\t\tx = m + n * (x - s) / t;\r\n\t\t\t\tlet y: number = (x - (o * r)) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = y;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, y);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tlet z: number = (e - l) / (k);\r\n\t\t\t\tif (i) {\r\n\t\t\t\t\tz = 1 - z;\r\n\t\t\t\t}\r\n\t\t\t\tz = q + r * (z - o) / p;\r\n\t\t\t\tif (v) {\r\n\t\t\t\t\tu[w] = z;\r\n\t\t\t\t} else {\r\n\t\t\t\t\ta.item(w, z);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tt(a: NumericAxisBase, b: number, c: number, d: number, e: number): { p3: number; p4: number; } {\r\n\t\td = a.mc;\r\n\t\te = a.mb;\r\n\t\treturn {\r\n\t\t\tp3: d,\r\n\t\t\tp4: e\r\n\r\n\t\t};\r\n\t}\r\n\tprivate getMercatorUnscaledValue(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = b.left + b.width * (a - c.left) / c.width;\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn this.o + e * (this.m);\r\n\t}\r\n\tprivate getMercatorScaledValue1(a: number, b: Rect, c: Rect, d: boolean): number {\r\n\t\tlet e: number = (a - this.o) / (this.m);\r\n\t\tif (d) {\r\n\t\t\te = 1 - e;\r\n\t\t}\r\n\t\treturn c.left + c.width * (e - b.left) / b.width;\r\n\t}\r\n\tprivate getMercatorScaledValue2(a: number, b: Rect, c: Rect, d: Rect, e: boolean): number {\r\n\t\tlet f: number = (a - this.o) / (this.m);\r\n\t\tif (e) {\r\n\t\t\tf = 1 - f;\r\n\t\t}\r\n\t\treturn c.left + c.width * (f - b.left) / b.width;\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { SeriesViewer } from \"igniteui-charts/SeriesViewer\";\r\nimport { IMapRenderDeferralHandler, IMapRenderDeferralHandler_$type } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from \"./MapResizeBehavior\";\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from \"./MapBackgroundTilingMode\";\r\nimport { Rect } from \"igniteui-core/Rect\";\r\nimport { Base, Point, Type, IEnumerator$1, IEnumerator$1_$type, IEnumerator, IEnumerator_$type, IDisposable, IDisposable_$type, EventArgs, Boolean_$type, typeCast, enumGetBox, EnumUtil, Point_$type, fromEnum, Number_$type, runOn, delegateRemove, delegateCombine, markType, markDep, PointUtil, INotifyPropertyChanged, INotifyPropertyChanged_$type, PropertyChangedEventArgs, String_$type, IEnumerable, IEnumerable_$type } from \"igniteui-core/type\";\r\nimport { NumericXAxis } from \"igniteui-charts/NumericXAxis\";\r\nimport { NumericYAxis } from \"igniteui-charts/NumericYAxis\";\r\nimport { SphericalMercatorVerticalScaler } from \"./SphericalMercatorVerticalScaler\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { Axis } from \"igniteui-charts/Axis\";\r\nimport { SphericalMercatorHorizontalScaler } from \"./SphericalMercatorHorizontalScaler\";\r\nimport { StraightNumericAxisBase } from \"igniteui-charts/StraightNumericAxisBase\";\r\nimport { DomRenderer, DomRenderer_$type } from \"igniteui-core/dom\";\r\nimport { ScalerParams } from \"igniteui-charts/ScalerParams\";\r\nimport { NumericAxisBase } from \"igniteui-charts/NumericAxisBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { SeriesViewerView } from \"igniteui-charts/SeriesViewerView\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { Tuple$2 } from \"igniteui-core/Tuple$2\";\r\nimport { MathUtil } from \"igniteui-core/MathUtil\";\r\nimport { ZoomCoercionMode } from \"igniteui-charts/ZoomCoercionMode\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\nimport { FontInfo } from \"igniteui-core/FontInfo\";\r\nimport { ItfConverter } from \"igniteui-core/ItfConverter\";\r\nimport { TriangulationSource } from \"igniteui-core/TriangulationSource\";\r\nimport { ChartVisualData } from \"igniteui-charts/ChartVisualData\";\r\nimport { AxisVisualData } from \"igniteui-charts/AxisVisualData\";\r\nimport { SeriesVisualData } from \"igniteui-charts/SeriesVisualData\";\r\nimport { FrameworkElement } from \"igniteui-core/FrameworkElement\";\r\nimport { RectData } from \"igniteui-core/RectData\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { truncate, intDivide, isNaN_, isInfinity } from \"igniteui-core/number\";\r\nimport { XamMultiScaleImage } from \"igniteui-core/XamMultiScaleImage\";\r\nimport { XamMultiScaleTileSource } from \"igniteui-core/XamMultiScaleTileSource\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { Size } from \"igniteui-core/Size\";\r\nimport { RenderingContext } from \"igniteui-core/RenderingContext\";\r\nimport { ImagesChangedEventArgs } from \"./ImagesChangedEventArgs\";\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterAreaSeries } from \"igniteui-charts/ScatterAreaSeries\";\r\nimport { InteractionState } from \"igniteui-core/InteractionState\";\r\nimport { SeriesViewerViewManager } from \"igniteui-charts/SeriesViewerViewManager\";\r\nimport { BrushCollection } from \"igniteui-core/BrushCollection\";\r\nimport { DefaultPaletteInfo } from \"igniteui-charts/DefaultPaletteInfo\";\r\nimport { CanvasRenderScheduler } from \"igniteui-core/CanvasRenderScheduler\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Shape } from \"igniteui-core/Shape\";\r\nimport { ModifierKeys } from \"igniteui-core/ModifierKeys\";\r\nimport { OpenStreetMapTileSource } from \"igniteui-core/OpenStreetMapTileSource\";\r\nimport { ColorScale } from \"igniteui-charts/ColorScale\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMap extends SeriesViewer implements IMapRenderDeferralHandler {\r\n\tstatic $t: Type = markType(XamGeographicMap, 'XamGeographicMap', (<any>SeriesViewer).$, [IMapRenderDeferralHandler_$type]);\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.x4 = SphericalMercatorVerticalScaler.am(XamGeographicMap.zg.bottom) - SphericalMercatorVerticalScaler.am(XamGeographicMap.zg.top);\r\n\t\tthis.ab = (<any>XamGeographicMap).$;\r\n\t\tthis.backgroundContent = new OpenStreetMapImagery();\r\n\t\tlet a = ((() => {\r\n\t\t\tlet $ret = new NumericXAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\ta.cf = true;\r\n\t\tthis.xj = a;\r\n\t\tthis.xj.n4 = new SphericalMercatorHorizontalScaler();\r\n\t\tlet b = ((() => {\r\n\t\t\tlet $ret = new NumericYAxis();\r\n\t\t\t$ret.bi = this;\r\n\t\t\treturn $ret;\r\n\t\t})());\r\n\t\tb.cf = true;\r\n\t\tthis.xl = b;\r\n\t\tthis.xl.n4 = new SphericalMercatorVerticalScaler();\r\n\t\tthis.yq();\r\n\t\tthis.yx();\r\n\t\tthis.oi();\r\n\t}\r\n\tprivate x8: DomRenderer = null;\r\n\tprovideContainer(a: any): void {\r\n\t\tsuper.provideContainer(a);\r\n\t\tthis.xj.provideRenderer(<DomRenderer><any>a);\r\n\t\tthis.xl.provideRenderer(<DomRenderer><any>a);\r\n\t}\r\n\toi(): void {\r\n\t\tsuper.oi();\r\n\t\tthis.xv.fv(this.hp);\r\n\t}\r\n\tfp(): boolean {\r\n\t\treturn this.x1;\r\n\t}\r\n\tfq(): boolean {\r\n\t\treturn this.x1;\r\n\t}\r\n\tx1: boolean;\r\n\tstatic xt: MapResizeBehavior = 0;\r\n\txu: MapResizeBehavior;\r\n\txx: boolean = false;\r\n\txy: boolean;\r\n\tprotected xs(): MapBackgroundTilingMode {\r\n\t\tif (this.xq == 0) {\r\n\t\t\tif (this.xx) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn 1;\r\n\t}\r\n\tprivate xp: MapBackgroundTilingMode = 1;\r\n\tget xr(): MapBackgroundTilingMode {\r\n\t\treturn this.xp;\r\n\t}\r\n\tset xr(a: MapBackgroundTilingMode) {\r\n\t\tthis.xp = a;\r\n\t}\r\n\txq: MapBackgroundTilingMode;\r\n\tstatic zg: Rect = new Rect(2, <Point>{ $type: Point_$type, x: -180, y: -85.05112878 }, <Point>{ $type: Point_$type, x: 180, y: 85.05112878 });\r\n\tx4: number = 0;\r\n\tx0: boolean;\r\n\txz: boolean;\r\n\tzw: Rect;\r\n\tprivate zf: Rect = null;\r\n\tget zk(): Rect {\r\n\t\treturn this.zf;\r\n\t}\r\n\tset zk(a: Rect) {\r\n\t\tlet b: boolean = Rect.l_op_Inequality(this.zf, a);\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.zf;\r\n\t\t\tthis.zf = a;\r\n\t\t\tthis.q5(\"ActualWorldRect\", c, a);\r\n\t\t}\r\n\t}\r\n\tzo(): Rect {\r\n\t\treturn this.zk;\r\n\t}\r\n\tprivate yq(): void {\r\n\t\tif (this.zw.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.zk = this.zu(this.zw, this.cs == 1);\r\n\t}\r\n\tprivate zu(a: Rect, b: boolean): Rect {\r\n\t\tlet c = a.top;\r\n\t\tlet d = a.left;\r\n\t\tlet e = a.width;\r\n\t\tlet f = a.height;\r\n\t\tlet g = SphericalMercatorVerticalScaler.am(a.bottom);\r\n\t\tlet h = SphericalMercatorVerticalScaler.am(a.top);\r\n\t\tlet i = g - h;\r\n\t\tlet j = a.width / XamGeographicMap.zg.width;\r\n\t\tlet k = SphericalMercatorVerticalScaler.am(XamGeographicMap.zg.top);\r\n\t\tlet l = i / j;\r\n\t\tif (i / j > this.x4) {\r\n\t\t\tlet m = i / this.x4;\r\n\t\t\tlet n = m - j;\r\n\t\t\td = d - (n / 2) * XamGeographicMap.zg.width;\r\n\t\t\te = m * XamGeographicMap.zg.width;\r\n\t\t\tif (b) {\r\n\t\t\t\tif (d < XamGeographicMap.zg.left) {\r\n\t\t\t\t\td += (XamGeographicMap.zg.left - d);\r\n\t\t\t\t} else if ((d + e) > XamGeographicMap.zg.right) {\r\n\t\t\t\t\td -= ((d + e) - XamGeographicMap.zg.right);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (i / j < this.x4) {\r\n\t\t\tlet o = this.x4 * j;\r\n\t\t\tlet p = o - i;\r\n\t\t\tlet q = h - (p / 2);\r\n\t\t\tlet r = g + (p / 2);\r\n\t\t\tif (b) {\r\n\t\t\t\tif (q < k) {\r\n\t\t\t\t\tq += (k - q);\r\n\t\t\t\t\tr += (k - q);\r\n\t\t\t\t} else if (r > (k + this.x4)) {\r\n\t\t\t\t\tq -= ((r) - (k + this.x4));\r\n\t\t\t\t\tr -= ((r) - (k + this.x4));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tc = SphericalMercatorVerticalScaler.aq(q);\r\n\t\t\tf = SphericalMercatorVerticalScaler.aq(r) - c;\r\n\t\t}\r\n\t\tlet s = new Rect(0, d, c, e, f);\r\n\t\treturn s;\r\n\t}\r\n\tget backgroundContent(): GeographicMapImagery {\r\n\t\treturn this.xm;\r\n\t}\r\n\tset backgroundContent(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.backgroundContent;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.backgroundContent;\r\n\t\t\tthis.xm = a;\r\n\t\t\tthis.q5(\"BackgroundContent\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate xm: GeographicMapImagery = null;\r\n\tget xj(): NumericXAxis {\r\n\t\treturn this.xi;\r\n\t}\r\n\tset xj(a: NumericXAxis) {\r\n\t\tlet b: boolean = a != this.xj;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.xj;\r\n\t\t\tthis.xi = a;\r\n\t\t\tthis.q5(\"XAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate xi: NumericXAxis = null;\r\n\tget xl(): NumericYAxis {\r\n\t\treturn this.xk;\r\n\t}\r\n\tset xl(a: NumericYAxis) {\r\n\t\tlet b: boolean = a != this.xl;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.xl;\r\n\t\t\tthis.xk = a;\r\n\t\t\tthis.q5(\"YAxis\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate xk: NumericYAxis = null;\r\n\txo: GeographicMapImagery = null;\r\n\tprivate static zj: Rect = new Rect(0, 0, 0, 1, 1);\r\n\tgetZoomRectFromGeoRect(a: Rect): Rect {\r\n\t\treturn this.getZoomFromGeographicRect(a);\r\n\t}\r\n\ty0(a: Rect): void {\r\n\t\tthis.xc = a;\r\n\t}\r\n\tyz(a: Rect): void {\r\n\t\tthis.zw = a;\r\n\t}\r\n\tgetZoomFromGeographicRect(a: Rect): Rect {\r\n\t\treturn this.zm(a, true, 0);\r\n\t}\r\n\tzl(a: Rect, b: number): Rect {\r\n\t\treturn this.zm(a, false, b);\r\n\t}\r\n\tprivate zm(a: Rect, b: boolean, c: number): Rect {\r\n\t\tlet d = a;\r\n\t\tif (b) {\r\n\t\t\td = this.zu(a, false);\r\n\t\t}\r\n\t\tlet e = this.xj;\r\n\t\tlet f = this.xl;\r\n\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, e.ch);\r\n\t\tg.c = this.wx;\r\n\t\tlet h: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, f.ch);\r\n\t\th.c = this.wx;\r\n\t\tlet i = this.xj.el(d.left, g);\r\n\t\tlet j = this.xj.el(d.right, g);\r\n\t\tlet k = this.xl.el(d.top, h);\r\n\t\tlet l = this.xl.el(d.bottom, h);\r\n\t\tlet m = (i - c) / this.xb.width;\r\n\t\tlet n = (l - c) / this.xb.height;\r\n\t\tlet o = (j - i + (c * 2)) / this.xb.width;\r\n\t\tlet p = (k - l + (c * 2)) / this.xb.height;\r\n\t\tlet q: Rect = new Rect(0, m, n, o, p);\r\n\t\tq.intersect(XamGeographicMap.zj);\r\n\t\tif (q.isEmpty) {\r\n\t\t\tq = XamGeographicMap.zj;\r\n\t\t}\r\n\t\treturn q;\r\n\t}\r\n\tgetZoomFromGeographicPoints(a: Point, b: Point): Rect {\r\n\t\tlet c = a.x;\r\n\t\tlet d = b.y;\r\n\t\tlet e = b.x - a.x;\r\n\t\tlet f = a.y - b.y;\r\n\t\tif (e < 0 || f < 0) {\r\n\t\t\treturn XamGeographicMap.zj;\r\n\t\t} else {\r\n\t\t\tlet g: Rect = new Rect(0, c, d, e, f);\r\n\t\t\treturn this.getZoomFromGeographicRect(g);\r\n\t\t}\r\n\t}\r\n\tzq(a: Rect): Rect {\r\n\t\tlet b = this.xj;\r\n\t\tlet c = this.xl;\r\n\t\tlet d: ScalerParams = new ScalerParams(1, a, this.xb, b.ch);\r\n\t\td.c = this.wx;\r\n\t\tlet e: ScalerParams = new ScalerParams(1, a, this.xb, c.ch);\r\n\t\te.c = this.wx;\r\n\t\tlet f = this.ww;\r\n\t\tlet g = b.eo(f.left, d);\r\n\t\tlet h = c.eo(f.top, e);\r\n\t\tlet i = b.eo(f.right, d);\r\n\t\tlet j = c.eo(f.bottom, e);\r\n\t\tlet k = i - g;\r\n\t\tlet l = h - j;\r\n\t\tlet m: Rect = new Rect(0, g, j, k, l);\r\n\t\tif (this.cs == 1) {\r\n\t\t\tm.intersect(XamGeographicMap.zg);\r\n\t\t\tif (m.isEmpty) {\r\n\t\t\t\tm = XamGeographicMap.zg;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn m;\r\n\t}\r\n\tzc(a: Point): Point {\r\n\t\tlet b = this.xj.mf(a.x);\r\n\t\tlet c = this.xl.mf(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tzd(a: Point): Point {\r\n\t\tlet b = this.xj.e6(a.x);\r\n\t\tlet c = this.xl.e6(a.y);\r\n\t\treturn <Point>{ $type: Point_$type, x: b, y: c };\r\n\t}\r\n\tze(a: Point): Point {\r\n\t\treturn this.zd(a);\r\n\t}\r\n\tyn(): void {\r\n\t\tlet a = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\tif (a != null) {\r\n\t\t\ta.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tyt(a: Brush): void {\r\n\t}\r\n\tgk(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tyv(): void {\r\n\t\tthis.xv.ee();\r\n\t\tfor (let a of fromEnum<Series>(this.series)) {\r\n\t\t\ta.sg();\r\n\t\t}\r\n\t}\r\n\tprotected zb: Point = <Point>{ $type: Point_$type, x: NaN, y: NaN };\r\n\tprotected yy(): void {\r\n\t\tif (this.xu == 2) {\r\n\t\t\tif (!this.xb.isEmpty && this.xb.width > 0 && this.xb.height > 0) {\r\n\t\t\t\tlet a: number = this.xj.mf(this.xb.left + (this.xb.width / 2));\r\n\t\t\t\tlet b: number = this.xl.mf(this.xb.top + (this.xb.height / 2));\r\n\t\t\t\tthis.zb = <Point>{ $type: Point_$type, x: a, y: b };\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (!this.xb.isEmpty && this.xb.width > 0 && this.xb.height > 0) {\r\n\t\t\t\tlet c: number = this.xj.mf(this.xb.left);\r\n\t\t\t\tlet d: number = this.xl.mf(this.xb.top);\r\n\t\t\t\tthis.zb = <Point>{ $type: Point_$type, x: c, y: d };\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprotected yu(): void {\r\n\t\tif (isNaN_(this.zb.x) || isNaN_(this.zb.y)) {\r\n\t\t\tthis.yy();\r\n\t\t}\r\n\t\tlet a: number = this.zb.x;\r\n\t\tlet b: number = this.zb.y;\r\n\t\tif (!isNaN_(a) && !isNaN_(b)) {\r\n\t\t\tlet c: number = this.wt.left;\r\n\t\t\tlet d: number = this.wt.top;\r\n\t\t\tlet e: number = this.wt.width;\r\n\t\t\tlet f: number = this.wt.height;\r\n\t\t\tif (e > this.zi.width) {\r\n\t\t\t} else {\r\n\t\t\t\tlet g: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, this.xj.ch);\r\n\t\t\t\tg.c = this.wx;\r\n\t\t\t\tlet h: number = this.xj.el(a, g);\r\n\t\t\t\tif (this.xu == 2) {\r\n\t\t\t\t\tlet i = h / this.xb.width;\r\n\t\t\t\t\tc = i - (e / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tc = h / this.xb.width;\r\n\t\t\t\t}\r\n\t\t\t\tif (c + e > this.zi.right) {\r\n\t\t\t\t\tc = this.zi.right - e;\r\n\t\t\t\t} else if (c < this.zi.left) {\r\n\t\t\t\t\tc = this.zi.left;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (f > this.zi.height) {\r\n\t\t\t} else {\r\n\t\t\t\tlet j: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, this.xl.ch);\r\n\t\t\t\tj.c = this.wx;\r\n\t\t\t\tlet k: number = this.xl.el(b, j);\r\n\t\t\t\tif (this.xu == 2) {\r\n\t\t\t\t\tlet l = k / this.xb.height;\r\n\t\t\t\t\td = l - (f / 2);\r\n\t\t\t\t} else {\r\n\t\t\t\t\td = k / this.xb.height;\r\n\t\t\t\t}\r\n\t\t\t\tif (d + f > this.zi.bottom) {\r\n\t\t\t\t\td = this.zi.bottom - f;\r\n\t\t\t\t} else if (d < this.zi.top) {\r\n\t\t\t\t\td = this.zi.top;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.sh(new Rect(0, c, d, e, f), false);\r\n\t\t}\r\n\t}\r\n\tprotected get_fh(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected zi: Rect = null;\r\n\tprotected wu(): Rect {\r\n\t\tlet a: Rect = super.wu();\r\n\t\tif (this.xj == null || this.xl == null) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tthis.w5();\r\n\t\tlet b: number = a.left;\r\n\t\tlet c: number = a.top;\r\n\t\tif (this.cs == 1) {\r\n\t\t\tif (this.xc.width > this.zi.width) {\r\n\t\t\t\tb = 0.5 - (this.xc.width / 2);\r\n\t\t\t} else if (b + a.width > this.zi.right) {\r\n\t\t\t\tb = this.zi.right - this.xc.width;\r\n\t\t\t} else if (b < this.zi.left) {\r\n\t\t\t\tb = this.zi.left;\r\n\t\t\t}\r\n\t\t\tif (this.xc.height > this.zi.height) {\r\n\t\t\t\tc = 0.5 - (this.xc.height / 2);\r\n\t\t\t} else if (c + this.xc.height > this.zi.bottom) {\r\n\t\t\t\tc = this.zi.bottom - this.xc.height;\r\n\t\t\t} else if (c < this.zi.top) {\r\n\t\t\t\tc = this.zi.top;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet d: boolean = false;\r\n\t\tif (!this.x0 && this.cs == 2 && this.xx) {\r\n\t\t\tif (b > 1) {\r\n\t\t\t\tb = (b - Math.floor(b)) + 1;\r\n\t\t\t}\r\n\t\t\tif (b < 0) {\r\n\t\t\t\tb = 0 - (Math.ceil(b) - b);\r\n\t\t\t}\r\n\t\t\tif ((a.right - this.zi.right) > 0 && ((a.right - this.zi.right) / a.width) > 0.8) {\r\n\t\t\t\tb = this.zi.left - (a.width - (a.right - this.zi.right));\r\n\t\t\t\td = true;\r\n\t\t\t} else if (a.left < this.zi.left && (Math.abs(a.left - this.zi.left) / a.width) > 0.8) {\r\n\t\t\t\tb = this.zi.right - (Math.abs(a.left - this.zi.left));\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet e = new Rect(0, b, c, a.width, a.height);\r\n\t\tif (this.x0) {\r\n\t\t\tlet f = this.zl(this.zw, 1);\r\n\t\t\tf = this.zn(f);\r\n\t\t\tlet g = e.left + e.width / 2;\r\n\t\t\tlet h = e.top + e.height / 2;\r\n\t\t\tif (e.width > f.width) {\r\n\t\t\t\tlet i = e.height / e.width;\r\n\t\t\t\tlet j = f.width;\r\n\t\t\t\tlet k = i * j;\r\n\t\t\t\te = new Rect(0, g - j / 2, h - k / 2, j, k);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.height > f.height) {\r\n\t\t\t\tlet l = e.width / e.height;\r\n\t\t\t\tlet m = f.height;\r\n\t\t\t\tlet n = l * m;\r\n\t\t\t\te = new Rect(0, g - n / 2, h - m / 2, n, m);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.left < f.left) {\r\n\t\t\t\te = new Rect(0, f.left, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.top < f.top) {\r\n\t\t\t\te = new Rect(0, e.left, f.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.right > f.right) {\r\n\t\t\t\te = new Rect(0, f.right - e.width, e.top, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t\tif (e.bottom > f.bottom) {\r\n\t\t\t\te = new Rect(0, e.left, f.bottom - e.height, e.width, e.height);\r\n\t\t\t\td = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d) {\r\n\t\t\tthis.e3 = true;\r\n\t\t\tthis.xc = e;\r\n\t\t\tthis.e3 = false;\r\n\t\t}\r\n\t\treturn e;\r\n\t}\r\n\tnm(a: Rect, b: ScalerParams): Tuple$2<boolean, number> {\r\n\t\tlet c: boolean = true;\r\n\t\tlet d: boolean = true;\r\n\t\tlet e: number = 0;\r\n\t\tlet f = this.w5();\r\n\t\tlet g: number = 0;\r\n\t\tlet h: number = 0;\r\n\t\tif ((a.right - f.right) > 0) {\r\n\t\t\tg = ((a.right - f.right) / a.width);\r\n\t\t}\r\n\t\tif (a.left < f.left) {\r\n\t\t\th = (Math.abs(a.left - f.left) / a.width);\r\n\t\t}\r\n\t\tif (h == 0 && g == 0) {\r\n\t\t\tc = false;\r\n\t\t}\r\n\t\tif (h > g) {\r\n\t\t\td = false;\r\n\t\t}\r\n\t\tif (c) {\r\n\t\t\tif (d) {\r\n\t\t\t\tlet i = this.xi.el(-180, b);\r\n\t\t\t\tlet j = this.xi.el(180, b);\r\n\t\t\t\te = j - i;\r\n\t\t\t} else {\r\n\t\t\t\tlet k = this.xi.el(-180, b);\r\n\t\t\t\tlet l = this.xi.el(180, b);\r\n\t\t\t\te = k - l;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn new Tuple$2<boolean, number>(Boolean_$type, Number_$type, c, e);\r\n\t}\r\n\tw5(): Rect {\r\n\t\tlet a: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, this.xj.ch);\r\n\t\ta.c = this.wx;\r\n\t\tlet b: ScalerParams = new ScalerParams(1, XamGeographicMap.zj, this.xb, this.xl.ch);\r\n\t\tb.c = this.wx;\r\n\t\tlet c: number = this.xj.el(XamGeographicMap.zg.left, a);\r\n\t\tlet d: number = this.xj.el(XamGeographicMap.zg.right, a);\r\n\t\tlet e: number = this.xl.el(XamGeographicMap.zg.top, b);\r\n\t\tlet f: number = this.xl.el(XamGeographicMap.zg.bottom, b);\r\n\t\tthis.zi = new Rect(0, c / this.xb.width, f / this.xb.height, (d - c) / this.xb.width, (e - f) / this.xb.height);\r\n\t\treturn this.zi;\r\n\t}\r\n\tprivate zn(a: Rect): Rect {\r\n\t\tlet b: number = this.ht;\r\n\t\tlet c: number = 0.5 * (a.left + a.right);\r\n\t\tlet d: number = 0.5 * (a.top + a.bottom);\r\n\t\tlet e: number = a.width;\r\n\t\tlet f: number = a.height;\r\n\t\tlet g: number = MathUtil.d(a.width, b, 1);\r\n\t\tlet h: number = MathUtil.d(a.height, b, 1);\r\n\t\tlet i: Rect = this.xb;\r\n\t\tlet j: number = i.width / i.height;\r\n\t\tlet k: number = g * i.width;\r\n\t\tlet l: number = h * i.height;\r\n\t\tlet m: number = k / l;\r\n\t\tif (m != j) {\r\n\t\t\tif (l * j > k) {\r\n\t\t\t\tk = l * j;\r\n\t\t\t\tg = k / i.width;\r\n\t\t\t} else {\r\n\t\t\t\tl = k / j;\r\n\t\t\t\th = l / i.height;\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet n: boolean = g != e;\r\n\t\tlet o: boolean = h != f;\r\n\t\tlet p: number = n ? c - 0.5 * g : a.left;\r\n\t\tlet q: number = o ? d - 0.5 * h : a.top;\r\n\t\tlet r: number = n ? c + 0.5 * g : a.right;\r\n\t\tlet s: number = o ? d + 0.5 * h : a.bottom;\r\n\t\tif (p < 0) {\r\n\t\t\tp = 0;\r\n\t\t\tr = p + g;\r\n\t\t}\r\n\t\tif (r > 1) {\r\n\t\t\tr = 1;\r\n\t\t\tp = r - g;\r\n\t\t}\r\n\t\tif (q < 0) {\r\n\t\t\tq = 0;\r\n\t\t\ts = q + h;\r\n\t\t}\r\n\t\tif (s > 1) {\r\n\t\t\ts = 1;\r\n\t\t\tq = s - h;\r\n\t\t}\r\n\t\treturn new Rect(0, p, q, r - p, s - q);\r\n\t}\r\n\tprotected wv(a: Rect): Rect {\r\n\t\tsuper.wv(this.xb);\r\n\t\tif (a.isEmpty) {\r\n\t\t\treturn Rect.empty;\r\n\t\t}\r\n\t\tlet b: Rect;\r\n\t\tif (a.width > a.height) {\r\n\t\t\tlet c: number = intDivide(<number>truncate((a.width - a.height)), 2);\r\n\t\t\tb = new Rect(0, a.left + c, a.top, a.height, a.height);\r\n\t\t} else {\r\n\t\t\tlet d: number = intDivide(<number>truncate((a.height - a.width)), 2);\r\n\t\t\tb = new Rect(0, a.left, a.top + d, a.width, a.width);\r\n\t\t}\r\n\t\treturn b;\r\n\t}\r\n\tzp(a: Rect): Rect {\r\n\t\treturn this.wv(a);\r\n\t}\r\n\tprotected db(): SeriesViewerView {\r\n\t\treturn new XamGeographicMapView(this);\r\n\t}\r\n\tprivate yp(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = this;\r\n\t\t}\r\n\t}\r\n\tprotected qo(a: SeriesViewerView): void {\r\n\t\tsuper.qo(a);\r\n\t\tthis.xv = <XamGeographicMapView>a;\r\n\t}\r\n\tqz(a: Rect, b: Rect): void {\r\n\t\tsuper.qz(a, b);\r\n\t\tthis.r5(this.xj);\r\n\t\tthis.r5(this.xl);\r\n\t\tif (Rect.l_op_Inequality(a, b)) {\r\n\t\t\tthis.yu();\r\n\t\t}\r\n\t\tif (this.x0) {\r\n\t\t\tthis.wt = this.wu();\r\n\t\t}\r\n\t\tthis.y1();\r\n\t}\r\n\tx6: number;\r\n\tprivate x3: number = 1;\r\n\tget x5(): number {\r\n\t\treturn this.x3;\r\n\t}\r\n\tset x5(a: number) {\r\n\t\tlet b = this.x3;\r\n\t\tthis.x3 = a;\r\n\t\tthis.q5(\"ActualWindowScale\", b, this.x3);\r\n\t}\r\n\thz(): number {\r\n\t\treturn this.x5;\r\n\t}\r\n\th0(): number {\r\n\t\treturn this.x5;\r\n\t}\r\n\tprotected r4(): void {\r\n\t\tsuper.r4();\r\n\t\tlet a = Math.min(this.wt.width, this.wt.height);\r\n\t\tthis.x5 = a;\r\n\t}\r\n\tf8(): boolean {\r\n\t\treturn this.xx;\r\n\t}\r\n\tct(): ZoomCoercionMode {\r\n\t\tif (this.cu == 0) {\r\n\t\t\tif (this.xy) {\r\n\t\t\t\treturn 2;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn this.cu;\r\n\t}\r\n\tprotected q0(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.q0(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"ZoomCoercionMode\":\r\n\t\t\tthis.yq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRect\":\r\n\t\t\tthis.yy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[0]:\r\n\t\t\tthis.xr = this.xs();\r\n\t\t\tif (this.xo != null) {\r\n\t\t\t\tthis.xo.isHorizontalWrappingEnabled = this.xr == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[1]:\r\n\t\t\tthis.xx = this.xy;\r\n\t\t\tthis.xr = this.xs();\r\n\t\t\tthis.cs = this.ct();\r\n\t\t\tif (this.xo != null) {\r\n\t\t\t\tthis.xo.isHorizontalWrappingEnabled = this.xr == 2;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[4]:\r\n\t\t\tthis.wt = this.wu();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BackgroundContent\":\r\n\t\t\tif (this.xo != null) {\r\n\t\t\t\tlet e = this.xo;\r\n\t\t\t\te.imageTilesReady = delegateRemove(e.imageTilesReady, runOn(this, this.yr));\r\n\t\t\t\tthis.xo.deferralHandler = null;\r\n\t\t\t}\r\n\t\t\tthis.xo = typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, this.backgroundContent);\r\n\t\t\tif (this.xo != null) {\r\n\t\t\t\tlet f = this.xo;\r\n\t\t\t\tf.imageTilesReady = delegateCombine(f.imageTilesReady, runOn(this, this.yr));\r\n\t\t\t\tthis.xo.deferralHandler = this;\r\n\t\t\t\tthis.xo.isHorizontalWrappingEnabled = this.xr == 2;\r\n\t\t\t}\r\n\t\t\tthis.xv.fu(typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, c), typeCast<GeographicMapImagery>((<any>GeographicMapImagery).$, d));\r\n\t\t\tif (this.xo != null) {\r\n\t\t\t\tthis.xo.geographicMap = this;\r\n\t\t\t\tthis.xv.fr(this.wt);\r\n\t\t\t\tthis.xv.fv(this.hp);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.yw(<Axis>c);\r\n\t\t\tthis.yp(<Axis>d);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[6]:\r\n\t\t\tif (!this.xz) {\r\n\t\t\t\tthis.xc = XamGeographicMap.zj;\r\n\t\t\t}\r\n\t\t\tthis.yq();\r\n\t\t\tthis.yx();\r\n\t\t\tthis.yy();\r\n\t\t\tthis.wt = this.wu();\r\n\t\t\tthis.xv.fs();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowRect\":\r\n\t\t\tthis.xv.fr(this.wt);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWorldRect\":\r\n\t\t\tfor (let g of fromEnum<Series>(this.series)) {\r\n\t\t\t\tg.ru(false);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[5]:\r\n\t\t\tthis.x5 = this.x6;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualWindowScale\":\r\n\t\t\tif (!this.gg) {\r\n\t\t\t\tthis.sf(this.hz(), this.h0());\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualPixelScalingRatio\":\r\n\t\t\tthis.xv.fv(this.hp);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"WindowRectMinWidth\":\r\n\r\n\t\t\tcase \"WindowRectMinHeight\":\r\n\t\t\tlet h = <number>d;\r\n\t\t\tif (isNaN_(h) || isInfinity(h)) {\r\n\t\t\t\tthis.ht = 5E-06;\r\n\t\t\t\tthis.hs = 5E-06;\r\n\t\t\t} else {\r\n\t\t\t\tthis.ht = h;\r\n\t\t\t\tthis.hs = h;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase XamGeographicMap.$$p[7]:\r\n\t\t\tthis.sb();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MarkerAutomaticBehavior\":\r\n\t\t\tfor (let i of fromEnum<Series>(this.series)) {\r\n\t\t\t\ti.qi();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate yr(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\tprivate yw(a: Axis): void {\r\n\t\tif (a != null) {\r\n\t\t\ta.bi = null;\r\n\t\t}\r\n\t}\r\n\tprivate yx(): void {\r\n\t\tif (this.xj != null) {\r\n\t\t\tthis.xj.mc = this.zk.left;\r\n\t\t\tthis.xj.mb = this.zk.right;\r\n\t\t}\r\n\t\tif (this.xl != null) {\r\n\t\t\tthis.xl.mc = this.zk.top;\r\n\t\t\tthis.xl.mb = this.zk.bottom;\r\n\t\t}\r\n\t\tthis.xj.c2(true);\r\n\t\tthis.xl.c2(true);\r\n\t}\r\n\txv: XamGeographicMapView;\r\n\tprivate xw: FontInfo = null;\r\n\tgetFontInfo(): FontInfo {\r\n\t\tthis.xw = this.xv.fo;\r\n\t\treturn this.xw;\r\n\t}\r\n\tvx(): Brush {\r\n\t\treturn this.xv.fw;\r\n\t}\r\n\tgetFontBrush(): Brush {\r\n\t\treturn this.xv.fx;\r\n\t}\r\n\tprotected rx(a: Series, b: any): void {\r\n\t\tif (typeCast<ItfConverter>((<any>ItfConverter).$, b) !== null) {\r\n\t\t\tlet c = (<ItfConverter>b);\r\n\t\t\tlet d = (<GeographicScatterAreaSeries>a);\r\n\t\t\td.itemsSource = c.triangulationSource.points;\r\n\t\t\td.xe = c.triangulationSource.triangles;\r\n\t\t} else {\r\n\t\t\tsuper.rx(a, b);\r\n\t\t}\r\n\t}\r\n\tregister(a: DependencyObject, b: (arg1: boolean) => void): void {\r\n\t\tthis.rk(a, b);\r\n\t}\r\n\tunRegister(a: DependencyObject): void {\r\n\t\tthis.r3(a);\r\n\t}\r\n\tdeferredRefresh(): void {\r\n\t\tthis.n0();\r\n\t}\r\n\tdeferAction(a: () => void): void {\r\n\t\tif (this.x8 != null) {\r\n\t\t\tthis.x8.setTimeout(<() => void>a, 0);\r\n\t\t} else {\r\n\t\t\twindow.setTimeout(<() => void>a, 0);\r\n\t\t}\r\n\t}\r\n\tyo(a: boolean): void {\r\n\t\tthis.sa(a);\r\n\t}\r\n\tx9(): any {\r\n\t\tlet a = new ChartVisualData();\r\n\t\tlet b = this.xj.fy();\r\n\t\tlet c = this.xl.fy();\r\n\t\ta.axes.add1(b);\r\n\t\ta.axes.add1(c);\r\n\t\tfor (let d = 0; d < this.series.count; d++) {\r\n\t\t\tlet e = this.series._inner[d].kn();\r\n\t\t\ta.series.add1(e);\r\n\t\t}\r\n\t\ta.name = this.name;\r\n\t\ta.contentArea = RectData.b(this.xb);\r\n\t\ta.centralArea = RectData.b(this.xb);\r\n\t\ta.plotArea = RectData.b(this.xb);\r\n\t\treturn a;\r\n\t}\r\n\tw1(a: Rect, b: Rect, c: Rect): Rect {\r\n\t\treturn a;\r\n\t}\r\n\tys(): void {\r\n\t}\r\n\tprivate zh: Rect = Rect.empty;\r\n\tprotected get zv(): Rect {\r\n\t\treturn this.zh;\r\n\t}\r\n\tprotected set zv(a: Rect) {\r\n\t\tthis.zh = a;\r\n\t}\r\n\ty2(a: Rect): void {\r\n\t\tthis.zv = a;\r\n\t\tthis.y1();\r\n\t}\r\n\tprivate y1(): void {\r\n\t\tif (this.x2 && !this.zv.isEmpty) {\r\n\t\t\tlet a = this.getZoomFromGeographicRect(this.zv);\r\n\t\t\tthis.zv = Rect.empty;\r\n\t\t\tthis.sh(a, false);\r\n\t\t}\r\n\t}\r\n\tget x2(): boolean {\r\n\t\treturn !this.xb.isEmpty && !this.wx.isEmpty;\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, XamGeographicMap, 'q5', [ 'BackgroundTilingMode:xq:y3', [ MapBackgroundTilingMode_$type, enumGetBox<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, 0) ], 'IsHorizontalWrappingEnabled:xy:y4', [ 0, false ], 'ResizeBehavior:xu:y5', [ MapResizeBehavior_$type, enumGetBox<MapResizeBehavior>(MapResizeBehavior_$type, XamGeographicMap.xt) ], 'SuppressZoomResetOnWorldRectChange:xz:y6', [ 0, false ], 'UseWorldRectForZoomBounds:x0:y7', [ 0, false ], 'WindowScale:x6:y8', [ 1, NaN ], 'WorldRect:zw:y9', [ (<any>Rect).$, XamGeographicMap.zg ], 'Zoomable:x1:za', [ 0, true ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicMapImagery extends Control implements INotifyPropertyChanged {\r\n\tstatic $t: Type = markType(GeographicMapImagery, 'GeographicMapImagery', (<any>Control).$, [INotifyPropertyChanged_$type]);\r\n\tconstructor(a: XamMultiScaleTileSource) {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicMapImagery).$;\r\n\t\tthis.ap = a;\r\n\t\tthis.aj = this.ai();\r\n\t\tthis.bb(this.aj);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new GeographicMapImageryView(this);\r\n\t}\r\n\tprotected aj: GeographicMapImageryView;\r\n\tprivate ak: IMapRenderDeferralHandler = null;\r\n\tget deferralHandler(): IMapRenderDeferralHandler {\r\n\t\treturn this.ak;\r\n\t}\r\n\tset deferralHandler(a: IMapRenderDeferralHandler) {\r\n\t\tthis.ak = a;\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.al = a;\r\n\t\t}\r\n\t}\r\n\tprivate a5(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n\ta9(): void {\r\n\t\tlet a = this.ao;\r\n\t\ta.imageTilesReady = delegateCombine(a.imageTilesReady, runOn(this, this.a5));\r\n\t\tthis.ao.al = this.deferralHandler;\r\n\t\tlet b = this.ao;\r\n\t\tb.imagesChanged = delegateCombine(b.imagesChanged, runOn(this, this.a4));\r\n\t\tlet c = this.ao;\r\n\t\tc.downloadingImage = delegateCombine(c.downloadingImage, runOn(this, this.a3));\r\n\t\tlet d = this.ao;\r\n\t\td.cancellingImage = delegateCombine(d.cancellingImage, runOn(this, this.a2));\r\n\t\tthis.ao.bf = this.referer;\r\n\t\tthis.ao.bj = this.userAgent;\r\n\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t}\r\n\tprivate a3(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tif (this.downloadingImage != null) {\r\n\t\t\tthis.downloadingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate a2(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tif (this.cancellingImage != null) {\r\n\t\t\tthis.cancellingImage(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate bg(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.aj.e();\r\n\t\t}\r\n\t}\r\n\tprotected ba(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase GeographicMapImagery.$$p[3]:\r\n\t\t\tthis.bg();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"GeographicMap\":\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[1]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bf = this.referer;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[2]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.bj = this.userAgent;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicMapImagery.$$p[0]:\r\n\t\t\tif (this.ao != null) {\r\n\t\t\t\tthis.ao.av = this.isHorizontalWrappingEnabled;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(a));\r\n\t\t}\r\n\t}\r\n\twindowRect: Rect;\r\n\tget geographicMap(): XamGeographicMap {\r\n\t\treturn <XamGeographicMap>this.c(GeographicMapImagery.geographicMapProperty);\r\n\t}\r\n\tset geographicMap(a: XamGeographicMap) {\r\n\t\tthis.h(GeographicMapImagery.geographicMapProperty, a);\r\n\t}\r\n\tstatic readonly geographicMapProperty: DependencyProperty = DependencyProperty.i(\"GeographicMap\", (<any>XamGeographicMap).$, (<any>GeographicMapImagery).$, new PropertyMetadata(2, null, GeographicMapImagery.a8));\r\n\tprivate static a8(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<GeographicMapImagery>a).a7(<XamGeographicMap>b.oldValue, <XamGeographicMap>b.newValue);\r\n\t}\r\n\tprivate a7(a: XamGeographicMap, b: XamGeographicMap): void {\r\n\t\tthis.ba(\"GeographicMap\", a, b);\r\n\t}\r\n\tclearTileCache(): void {\r\n\t\tif (this.ao != null) {\r\n\t\t\tthis.ao.bs(0, 0, 0, 0);\r\n\t\t}\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate an: XamMultiScaleImage = null;\r\n\tget ao(): XamMultiScaleImage {\r\n\t\treturn this.an;\r\n\t}\r\n\tset ao(a: XamMultiScaleImage) {\r\n\t\tthis.an = a;\r\n\t\tif (this.propertyChanged != null) {\r\n\t\t\tthis.propertyChanged(this, new PropertyChangedEventArgs(\"MultiScaleImage\"));\r\n\t\t}\r\n\t}\r\n\tap: XamMultiScaleTileSource = null;\r\n\tpropertyChanged: (sender: any, e: PropertyChangedEventArgs) => void = null;\r\n\tbn(a: Size): Size {\r\n\t\tif (this.geographicMap == null || a.width < 1 || a.height < 1) {\r\n\t\t\treturn a;\r\n\t\t}\r\n\t\tlet b = new Rect(0, 0, 0, a.width, a.height);\r\n\t\tlet c = this.geographicMap.zp(b);\r\n\t\tlet d: Rect = XamGeographicMap.zg;\r\n\t\tlet e: Rect = this.geographicMap.zk;\r\n\t\tlet f: number = Math.min(this.windowRect.height, this.windowRect.width);\r\n\t\tlet g: number = e.width / d.width;\r\n\t\tthis.ao.a5 = (b.width / c.width) * f * g;\r\n\t\tlet h: NumericXAxis = this.geographicMap.xj;\r\n\t\tlet i: NumericYAxis = this.geographicMap.xl;\r\n\t\tlet j: ScalerParams = new ScalerParams(1, this.windowRect, b, h.ch);\r\n\t\tj.c = c;\r\n\t\tlet k: ScalerParams = new ScalerParams(1, this.windowRect, b, i.ch);\r\n\t\tk.c = c;\r\n\t\tlet l: number = h.el(d.left, j);\r\n\t\tlet m: number = i.el(d.bottom, k);\r\n\t\tlet n: number = (-l / b.width) * this.ao.a5;\r\n\t\tlet o: number = (-m / b.height) * this.ao.a5 * (b.height / b.width);\r\n\t\tthis.ao.cm = <Point>{ $type: Point_$type, x: n, y: o };\r\n\t\treturn a;\r\n\t}\r\n\tbd(a: RenderingContext): void {\r\n\t\tthis.aj.f(a);\r\n\t}\r\n\tbf(a: Rect): void {\r\n\t\tthis.aj.h(a);\r\n\t}\r\n\tbe(a: DomRenderer): void {\r\n\t\tthis.aj.g(a);\r\n\t}\r\n\timagesChanged: (sender: any, e: ImagesChangedEventArgs) => void = null;\r\n\tprivate a4(a: any, b: EventArgs): void {\r\n\t\tif (this.imagesChanged != null) {\r\n\t\t\tthis.imagesChanged(this, new ImagesChangedEventArgs());\r\n\t\t}\r\n\t}\r\n\ta6(): void {\r\n\t\tthis.aj.e();\r\n\t}\r\n\tbc(a: number): void {\r\n\t\tthis.aj.i(a);\r\n\t}\r\n\tprotected v(): void {\r\n\t\tsuper.v();\r\n\t\tthis.ap.o = this._opacity;\r\n\t}\r\n\tcancellingImage: (sender: any, args: CancellingMultiScaleImageEventArgs) => void = null;\r\n\tdownloadingImage: (sender: any, args: DownloadingMultiScaleImageEventArgs) => void = null;\r\n\treferer: string;\r\n\tisHorizontalWrappingEnabled: boolean;\r\n\tuserAgent: string;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicMapImagery, 'ba', [ 'IsHorizontalWrappingEnabled', [ 0, false ], 'Referer', [ 2, null ], 'UserAgent', [ 2, null ], 'WindowRect', [ (<any>Rect).$, Rect.empty ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicMapImageryView extends Base {\r\n\tstatic $t: Type = markType(GeographicMapImageryView, 'GeographicMapImageryView');\r\n\tconstructor(a: GeographicMapImagery) {\r\n\t\tsuper();\r\n\t\tthis.j = Rect.empty;\r\n\t\tthis.a = a;\r\n\t\tthis.a.ao = new XamMultiScaleImage();\r\n\t\tthis.a.ao.ao = this.a.ap;\r\n\t\tthis.a.a9();\r\n\t}\r\n\tprotected a: GeographicMapImagery = null;\r\n\te(): void {\r\n\t\tif (this.j.isEmpty) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.a.bn(new Size(1, this.j.width, this.j.height));\r\n\t}\r\n\tprotected j: Rect = null;\r\n\tf(a: RenderingContext): void {\r\n\t\tthis.a.ao.b1(a);\r\n\t}\r\n\tprivate d: DomRenderer = null;\r\n\tg(a: DomRenderer): void {\r\n\t\tthis.d = a;\r\n\t\tthis.a.ao.b2(a);\r\n\t}\r\n\th(a: Rect): void {\r\n\t\tthis.j = a;\r\n\t\tthis.a.ao.b3(a);\r\n\t\tthis.a.a6();\r\n\t}\r\n\tprivate b: number = 1;\r\n\tget c(): number {\r\n\t\treturn this.b;\r\n\t}\r\n\ti(a: number): void {\r\n\t\tthis.b = a;\r\n\t\tthis.a.ao.bz(a);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicXYTriangulatingSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeriesView, 'GeographicXYTriangulatingSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicXYTriangulatingSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cu = a;\r\n\t}\r\n\tprotected cu: GeographicXYTriangulatingSeries = null;\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\tlet a = <ScatterTriangulationSeries>this.cu.w5;\r\n\t\ta.x5 = this.cu.xh;\r\n\t\ta.yd = this.cu.xf;\r\n\t\ta.trianglesSource = this.cu.xe;\r\n\t\ta.xt = this.cu.xk;\r\n\t\ta.xv = this.cu.xm;\r\n\t\ta.xx = this.cu.xo;\r\n\t}\r\n\tcx(): void {\r\n\t\tlet a = <ScatterTriangulationSeries>this.cu.w5;\r\n\t\tif (this.cu.dc == null) {\r\n\t\t\ta.w3 = null;\r\n\t\t\ta.w4 = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.w3 = (<XamGeographicMap>this.cu.dc).xj;\r\n\t\ta.w4 = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).x5 = this.cu.xh;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).yd = this.cu.xf;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).trianglesSource = this.cu.xe;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).xt = this.cu.xk;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).xv = this.cu.xm;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<ScatterTriangulationSeries>this.cu.w5).xx = this.cu.xo;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeriesView, 'GeographicScatterAreaSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicScatterAreaSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c2 = a;\r\n\t}\r\n\tprivate c2: GeographicScatterAreaSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\tif (this.c2.xz != null) {\r\n\t\t\tthis.c2.xz.zc = this.c2.x3;\r\n\t\t\tthis.c2.xz.y0 = this.c2.xy;\r\n\t\t}\r\n\t}\r\n\tc3(): void {\r\n\t\tif (this.c2.xz != null) {\r\n\t\t\tthis.c2.xz.zc = this.c2.x3;\r\n\t\t}\r\n\t}\r\n\tc4(): void {\r\n\t\tif (this.c2.xz != null) {\r\n\t\t\tthis.c2.xz.y0 = this.c2.xy;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class XamGeographicMapView extends SeriesViewerView {\r\n\tstatic $t: Type = markType(XamGeographicMapView, 'XamGeographicMapView', (<any>SeriesViewerView).$);\r\n\tconstructor(a: XamGeographicMap) {\r\n\t\tsuper(a);\r\n\t\tthis.fz = Rect.empty;\r\n\t\tthis.fn = a;\r\n\t\tthis.fn.vq = 2;\r\n\t\tthis.fn.i2 = 5E-06;\r\n\t}\r\n\tm(a: boolean): InteractionState {\r\n\t\treturn 2;\r\n\t}\r\n\tbk(a: boolean): void {\r\n\t\tthis.j.bw(a);\r\n\t\tthis.fn.yo(a);\r\n\t\tthis.el();\r\n\t}\r\n\tprotected fn: XamGeographicMap = null;\r\n\tprotected get_ap(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\td4(): void {\r\n\t\tlet a: BrushCollection;\r\n\t\tlet b: BrushCollection;\r\n\t\tlet c: Brush;\r\n\t\tlet d: FontInfo;\r\n\t\tlet e: Brush;\r\n\t\tlet f = this.j.a8(a, b, c, d, e);\r\n\t\ta = f.p0;\r\n\t\tb = f.p1;\r\n\t\tc = f.p2;\r\n\t\td = f.p3;\r\n\t\te = f.p4;\r\n\t\tthis.fx = c;\r\n\t\tthis.fo = d;\r\n\t\tthis.fw = e;\r\n\t\tlet g = this.j.e();\r\n\t\tthis.fn.ag = g.a;\r\n\t\tthis.fn.aj = g.f;\r\n\t\tthis.fn.ah = g.b != null ? g.b : new BrushCollection();\r\n\t\tthis.fn.ai = g.c != null ? g.c : new BrushCollection();\r\n\t\tif (this.fn.ah.count == 0) {\r\n\t\t\tfor (let h = 0; h < g.a.count; h++) {\r\n\t\t\t\tthis.fn.ah.add(g.a.item(h));\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (g.c.count == 0) {\r\n\t\t\tfor (let i = 0; i < g.f.count; i++) {\r\n\t\t\t\tthis.fn.ai.add(g.f.item(i));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tdu(a: RenderingContext): void {\r\n\t\tsuper.du(a);\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.be(this.j.ae);\r\n\t\t\tb.bd(a);\r\n\t\t}\r\n\t}\r\n\tprotected fz: Rect = null;\r\n\tprotected dv(a: Rect): void {\r\n\t\tsuper.dv(a);\r\n\t\tthis.fz = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet b: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\tb.bf(this.fz);\r\n\t\t}\r\n\t}\r\n\tfy(): Rect {\r\n\t\treturn new Rect(0, 0, 0, this.fz.width, this.fz.height);\r\n\t}\r\n\tfs(): void {\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\tlet a: GeographicMapImagery = <GeographicMapImagery>this.fn.backgroundContent;\r\n\t\t\ta.a6();\r\n\t\t}\r\n\t}\r\n\tfx: Brush = null;\r\n\tfw: Brush = null;\r\n\tfo: FontInfo = null;\r\n\tfr(a: Rect): void {\r\n\t\tif (this.fn.xo != null) {\r\n\t\t\tthis.fn.xo.windowRect = a;\r\n\t\t}\r\n\t}\r\n\tfu(a: GeographicMapImagery, b: GeographicMapImagery): void {\r\n\t\tif (this.fn.xo != null) {\r\n\t\t\tthis.fn.xo.windowRect = this.fn.wt;\r\n\t\t}\r\n\t\tif (a != null) {\r\n\t\t\tlet c = a.ao;\r\n\t\t\tif (c != null) {\r\n\t\t\t\tthis.fn.al.h.remove(c.ag);\r\n\t\t\t}\r\n\t\t\ta.bd(null);\r\n\t\t\ta.be(null);\r\n\t\t}\r\n\t\tif (b != null) {\r\n\t\t\tlet d = b.ao;\r\n\t\t\tif (d != null) {\r\n\t\t\t\tthis.fn.al.h.add(d.ag);\r\n\t\t\t}\r\n\t\t\tif (!this.fz.isEmpty) {\r\n\t\t\t\tthis.dv(this.fz);\r\n\t\t\t}\r\n\t\t\tif (this.w != null) {\r\n\t\t\t\tthis.du(this.w);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.ft(this.w);\r\n\t\t}\r\n\t}\r\n\tprivate ft(a: RenderingContext): void {\r\n\t\tlet b = this.fn.hp;\r\n\t\tif (b != 1) {\r\n\t\t\ta.aa();\r\n\t\t\ta.ab(b, b);\r\n\t\t}\r\n\t\ta.l(this.fz.left, this.fz.top, this.fz.width, this.fz.height);\r\n\t\tif (b != 1) {\r\n\t\t\ta.z();\r\n\t\t}\r\n\t}\r\n\tprotected d1(): void {\r\n\t\tthis.fd.ad = Defaults.crosshairLineThickness;\r\n\t\tthis.fe.ad = Defaults.crosshairLineThickness;\r\n\t\tthis.fd._stroke = Defaults.crosshairLineBrush;\r\n\t\tthis.fe._stroke = Defaults.crosshairLineBrush;\r\n\t\tsuper.d1();\r\n\t}\r\n\tfv(a: number): void {\r\n\t\tthis.fp = a;\r\n\t\tif (this.fn.backgroundContent != null) {\r\n\t\t\t(<GeographicMapImagery>this.fn.backgroundContent).bc(a);\r\n\t\t}\r\n\t}\r\n\tprivate fp: number = NaN;\r\n\tget fq(): number {\r\n\t\treturn this.fp;\r\n\t}\r\n\tset fq(a: number) {\r\n\t\tthis.fp = a;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class OpenStreetMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(OpenStreetMapImagery, 'OpenStreetMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new OpenStreetMapTileSource());\r\n\t}\r\n\tget tilePath(): string {\r\n\t\treturn <string>this.c(OpenStreetMapImagery.tilePathProperty);\r\n\t}\r\n\tset tilePath(a: string) {\r\n\t\tthis.h(OpenStreetMapImagery.tilePathProperty, a);\r\n\t}\r\n\tstatic readonly tilePathProperty: DependencyProperty = DependencyProperty.i(\"TilePath\", String_$type, (<any>OpenStreetMapImagery).$, new PropertyMetadata(2, null, OpenStreetMapImagery.br));\r\n\tprivate static br(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<OpenStreetMapImagery>a).bq(\"TilePath\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bq(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase \"TilePath\":\r\n\t\t\t(<OpenStreetMapTileSource>this.ap).setTilePathUrl(c == null ? null : <string>c);\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport abstract class GeographicXYTriangulatingSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicXYTriangulatingSeries, 'GeographicXYTriangulatingSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicXYTriangulatingSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.xd = <GeographicXYTriangulatingSeriesView>a;\r\n\t}\r\n\txd: GeographicXYTriangulatingSeriesView;\r\n\txh: string;\r\n\txf: string;\r\n\txe: IEnumerable;\r\n\txk: string;\r\n\txm: string;\r\n\txo: string;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.xd.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[1]:\r\n\t\t\tthis.xd.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[0]:\r\n\t\t\tthis.xd.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[5]:\r\n\t\t\tthis.xd.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[2]:\r\n\t\t\tthis.xd.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[3]:\r\n\t\t\tthis.xd.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicXYTriangulatingSeries.$$p[4]:\r\n\t\t\tthis.xd.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicXYTriangulatingSeries, 'raisePropertyChanged', [ 'LatitudeMemberPath:xf:xq', [ 2, \"pointY\" ], 'LongitudeMemberPath:xh:xr', [ 2, \"pointX\" ], 'TriangleVertexMemberPath1:xk:xt', [ 2, \"v1\" ], 'TriangleVertexMemberPath2:xm:xu', [ 2, \"v2\" ], 'TriangleVertexMemberPath3:xo:xv', [ 2, \"v3\" ], 'TrianglesSource:xe:xs', [ IEnumerable_$type, null ] ]);\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicScatterAreaSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicScatterAreaSeries, 'GeographicScatterAreaSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicScatterAreaSeries();\r\n\t}\r\n\tprotected get_ew(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicScatterAreaSeries).$;\r\n\t}\r\n\tx3: string;\r\n\tprivate xw: ColorScale = null;\r\n\tget xy(): ColorScale {\r\n\t\treturn this.xw;\r\n\t}\r\n\tset xy(a: ColorScale) {\r\n\t\tlet b: boolean = this.xw != a;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.xw;\r\n\t\t\tif (this.xw != null) {\r\n\t\t\t\tlet d = this.xw;\r\n\t\t\t\td.propertyChanged = delegateRemove(d.propertyChanged, runOn(this, this.x6));\r\n\t\t\t}\r\n\t\t\tthis.xw = a;\r\n\t\t\tif (this.xw != null) {\r\n\t\t\t\tlet e = this.xw;\r\n\t\t\t\te.propertyChanged = delegateCombine(e.propertyChanged, runOn(this, this.x6));\r\n\t\t\t}\r\n\t\t\tthis.raisePropertyChanged(\"ColorScale\", c, this.xw);\r\n\t\t\tif (this.xz != null) {\r\n\t\t\t\tthis.xz.y0 = a;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprivate x6(a: any, b: PropertyChangedEventArgs): void {\r\n\t\tthis.x1.c4();\r\n\t\tthis.x8();\r\n\t\tthis.ru(false);\r\n\t}\r\n\tx8(): void {\r\n\t\tif (this.xz != null) {\r\n\t\t\tthis.xx = this.xz.yz;\r\n\t\t}\r\n\t}\r\n\txx: ColorScale;\r\n\tprotected sl(): void {\r\n\t\tsuper.sl();\r\n\t\tthis.x8();\r\n\t}\r\n\txz: ScatterAreaSeries;\r\n\tprotected w4(): Series {\r\n\t\tthis.xz = new ScatterAreaSeries();\r\n\t\tlet a = this.xz;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.x7));\r\n\t\treturn this.xz;\r\n\t}\r\n\tprivate x7(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicScatterAreaSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.x1 = <GeographicScatterAreaSeriesView>a;\r\n\t}\r\n\tx1: GeographicScatterAreaSeriesView;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicScatterAreaSeries.$$p[1]:\r\n\t\t\tthis.x1.c3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ColorScale\":\r\n\t\t\tthis.x1.c4();\r\n\t\t\tthis.x8();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tprotected get_g8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g8(a: boolean): void {\r\n\t\tsuper.set_g8(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicScatterAreaSeries, 'raisePropertyChanged', [ 'ActualColorScale:xx:x9', [ (<any>ColorScale).$, null ], 'ColorMemberPath:x3:ya', [ 2, \"value\" ] ]);\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { Enum, ValueType, markEnum, Type } from \"igniteui-core/type\";\r\n\r\n/**\r\n * Describes available map styles for the Bing Maps imagery.\r\n */\r\nexport enum BingMapsImageryStyle {\r\n\t/**\r\n\t * Specifies the Aerial map style without road or labels overlay.\r\n\t */\r\n\tAerial = 0,\r\n\t/**\r\n\t * Specifies the Aerial map style with road and labels overlay.\r\n\t */\r\n\tAerialWithLabels = 1,\r\n\t/**\r\n\t * Specifies the Roads map style without aerial overlay.\r\n\t */\r\n\tRoad = 2,\r\n\t/**\r\n\t * Specifies a dark version of the Roads maps.\r\n\t */\r\n\tCanvasDark = 3,\r\n\t/**\r\n\t * Specifies a lighter version of the Roads maps.\r\n\t */\r\n\tCanvasLight = 4,\r\n\t/**\r\n\t * Specifies a grayscale version of the Roads maps.\r\n\t */\r\n\tCanvasGray = 5\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport let BingMapsImageryStyle_$type = markEnum('BingMapsImageryStyle', 'Aerial,0|AerialWithLabels,1|Road,2|CanvasDark,3|CanvasLight,4|CanvasGray,5');\r\n\r\n\r\n","import { IgCollection } from 'igniteui-core/IgCollection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { SyncableObservableCollection$1 } from 'igniteui-core/SyncableObservableCollection$1';\r\nimport { markType } from 'igniteui-core/type';\r\n\r\n\r\nimport { String_$type } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcSubDomainsCollection extends IgCollection<string, string> {\r\n    constructor(list?: string[]) {\r\n        super();\r\n        \r\n   \r\n        if (list) {\r\n            for (let i = 0; i < list.length; i++) {\r\n                this.add(list[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    \r\n    protected _createInnerColl(): SyncableObservableCollection$2<string, string> {\r\n        \r\n \r\n        let coll = new SyncableObservableCollection$2<string, string>(String_$type, String_$type, 0);\r\n        coll.compare = (ext, int) => { \r\n            let comp: any = ext;\r\n            if (comp.equals) {\r\n                return comp.equals(int);\r\n            }\r\n            return comp === int;\r\n        };\r\n        coll.createTo = (ext) => {\r\n            return ext;\r\n        }\r\n        coll.createFrom = (int) => {\r\n            return int;\r\n        }\r\n        return coll;\r\n    } \r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { IEnumerable$1, IEnumerable$1_$type, Base, String_$type, Type, markType } from \"igniteui-core/type\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class SubDomainsCollection extends ObservableCollection$1<string> {\r\n\tstatic $t: Type = markType(SubDomainsCollection, 'SubDomainsCollection', (<any>ObservableCollection$1).$.specialize(String_$type));\r\n\tconstructor(a: number);\r\n\tconstructor(a: number, b: IEnumerable$1<string>);\r\n\tconstructor(a: number, ..._rest: any[]);\r\n\tconstructor(a: number, ..._rest: any[]) {\r\n\t\ta = (a == void 0) ? 0 : a;\r\n\t\tswitch (a) {\r\n\t\t\tcase 0:\r\n\t\t\t{\r\n\t\t\t\tsuper(String_$type, 0);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase 1:\r\n\t\t\t{\r\n\t\t\t\tlet c: IEnumerable$1<string> = <IEnumerable$1<string>>_rest[0];\r\n\t\t\t\tsuper(String_$type, 1, c);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImageryView } from \"./GeographicMapImageryView\";\r\nimport { SubDomainsCollection } from \"./SubDomainsCollection\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { BingMapsTileSource } from \"igniteui-core/BingMapsTileSource\";\r\nimport { Base, Type, markType, Boolean_$type, typeCast, String_$type, enumGetBox, EnumUtil, runOn, delegateRemove, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { List$1 } from \"igniteui-core/List$1\";\r\nimport { NotifyCollectionChangedEventArgs } from \"igniteui-core/NotifyCollectionChangedEventArgs\";\r\nimport { ObservableCollection$1 } from \"igniteui-core/ObservableCollection$1\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { stringEmpty, stringIsNullOrEmpty } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImageryView extends GeographicMapImageryView {\r\n\tstatic $t: Type = markType(BingMapsMapImageryView, 'BingMapsMapImageryView', (<any>GeographicMapImageryView).$);\r\n\tconstructor(a: BingMapsMapImagery) {\r\n\t\tsuper(a);\r\n\t\tthis.k = a;\r\n\t}\r\n\tprotected k: BingMapsMapImagery;\r\n\tm(): void {\r\n\t\tif (this.k.subDomains == null) {\r\n\t\t\tthis.k.subDomains = new SubDomainsCollection(0);\r\n\t\t}\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\to(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).tilePath = this.k.actualTilePath;\r\n\t}\r\n\tl(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).cultureName = this.k.cultureName;\r\n\t}\r\n\tn(): void {\r\n\t\t(<BingMapsTileSource>this.k.ap).subDomains = this.k.actualSubDomains;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class BingMapsMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(BingMapsMapImagery, 'BingMapsMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate _pendingBingRequest_: any = null;\r\n\tprivate static readonly cc: string = \"http://dev.virtualearth.net/REST/v1/Imagery/Metadata/\";\r\n\tconstructor() {\r\n\t\tsuper(new BingMapsTileSource(0));\r\n\t\tthis.getResponseCompleted = this.getResponseCompleted.bind(this);\r\n\t\tthis.bp.m();\r\n\t\tthis.actualBingImageryRestUri = BingMapsMapImagery.cc;\r\n\t}\r\n\tprotected ai(): GeographicMapImageryView {\r\n\t\treturn new BingMapsMapImageryView(this);\r\n\t}\r\n\tprotected bb(a: GeographicMapImageryView): void {\r\n\t\tsuper.bb(a);\r\n\t\tthis.bp = <BingMapsMapImageryView>a;\r\n\t}\r\n\tbp: BingMapsMapImageryView;\r\n\tprivate _isInitialized: boolean = false;\r\n\tget isInitialized(): boolean {\r\n\t\treturn this._isInitialized;\r\n\t}\r\n\tset isInitialized(a: boolean) {\r\n\t\tthis._isInitialized = a;\r\n\t}\r\n\tisDeferredLoad: boolean;\r\n\ttilePath: string;\r\n\tprivate bz: string = null;\r\n\tget actualTilePath(): string {\r\n\t\treturn this.bz;\r\n\t}\r\n\tset actualTilePath(a: string) {\r\n\t\tlet b = this.bz;\r\n\t\tthis.bz = a;\r\n\t\tthis.cm(\"ActualTilePath\", b, this.bz);\r\n\t}\r\n\tsubDomains: SubDomainsCollection;\r\n\tprivate bq: SubDomainsCollection = null;\r\n\tget actualSubDomains(): SubDomainsCollection {\r\n\t\treturn this.bq;\r\n\t}\r\n\tset actualSubDomains(a: SubDomainsCollection) {\r\n\t\tlet b = this.bq;\r\n\t\tthis.bq = a;\r\n\t\tthis.cm(\"ActualSubDomains\", b, this.bq);\r\n\t}\r\n\tprivate b0: string = null;\r\n\tget bingImageryRestUri(): string {\r\n\t\treturn this.b0;\r\n\t}\r\n\tset bingImageryRestUri(a: string) {\r\n\t\tlet b = this.b0;\r\n\t\tthis.b0 = a;\r\n\t\tthis.cm(\"BingImageryRestUri\", b, this.b0);\r\n\t}\r\n\tprivate by: string = null;\r\n\tget actualBingImageryRestUri(): string {\r\n\t\treturn this.by;\r\n\t}\r\n\tset actualBingImageryRestUri(a: string) {\r\n\t\tlet b = this.by;\r\n\t\tthis.by = a;\r\n\t\tthis.ba(\"ActualBingImageryRestUri\", b, this.by);\r\n\t}\r\n\tcultureName: string;\r\n\tapiKey: string;\r\n\timageryStyle: BingMapsImageryStyle;\r\n\trequestMapSettings(): void {\r\n\t\tthis.co(true);\r\n\t}\r\n\tprivate co(a: boolean): void {\r\n\t\tthis.cl(a);\r\n\t}\r\n\tprivate bw(): boolean {\r\n\t\tif ((this.tilePath == null) && (this.subDomains == null)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tprivate cq(): void {\r\n\t\tthis.isInitialized = false;\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.isDeferredLoad) {\r\n\t\t\tthis.co(false);\r\n\t\t}\r\n\t}\r\n\tprivate bv(): boolean {\r\n\t\tif (stringIsNullOrEmpty(this.apiKey) || this.apiKey.length < 20) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\tprivate cj(): void {\r\n\t}\r\n\tprivate cp(a: string, b: List$1<string>): void {\r\n\t\tif (a != this.actualTilePath) {\r\n\t\t\tthis.actualTilePath = a;\r\n\t\t}\r\n\t\tlet c = b == null ? null : new SubDomainsCollection(1, b);\r\n\t\tif (this.actualSubDomains != c) {\r\n\t\t\tthis.actualSubDomains = c;\r\n\t\t}\r\n\t\tthis.bp.m();\r\n\t}\r\n\tprivate cl(a: boolean): void {\r\n\t\tif ((!a) && (this.isDeferredLoad)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (!this.bv()) {\r\n\t\t\tthis.isInitialized = false;\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.isInitialized = true;\r\n\t\tlet b: string = null;\r\n\t\tif (this.bingImageryRestUri != null) {\r\n\t\t\tif (Uri.isWellFormedUriString(this.bingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.bingImageryRestUri;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (Uri.isWellFormedUriString(this.actualBingImageryRestUri, 1)) {\r\n\t\t\t\tb = this.actualBingImageryRestUri;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (b == null) {\r\n\t\t\tthis.cp(\"\", null);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.imageryStyle;\r\n\t\tb += enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, c);\r\n\t\tlet d = \"key=\" + this.apiKey + \"&include=ImageryProviders\";\r\n\t\tlet url_ = b + \"?\" + d;\r\n\t\tthis._pendingBingRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted, null );\r\n\t}\r\n\tprivate getResponseCompleted(a: any, b: any): void {\r\n\t\tif (b != this._pendingBingRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingBingRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet resourceSets_ =  (<any>JSON.parse(data_)).resourceSets;\r\n\t\tif (resourceSets_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet resources_ = resourceSets_.length > 0 ? resourceSets_[0].resources : null;\r\n\t\tif (resources_ == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (resources_.length == 0) { return; };\r\n\t\tlet imageUrl_: string = <string>(resources_[0].imageUrl);\r\n\t\tlet subDomains_: List$1<string> = new List$1<string>(String_$type, 0);\r\n\t\tfor (var i = 0; i < resources_[0].imageUrlSubdomains.length; i++) { subDomains_.add(resources_[0].imageUrlSubdomains[i]); };\r\n\t\tthis.cp(imageUrl_, subDomains_);\r\n\t}\r\n\tprivate ci(a: any, b: NotifyCollectionChangedEventArgs): void {\r\n\t\tthis.aj.e();\r\n\t\tthis.cq();\r\n\t\tthis.cm(BingMapsMapImagery.$$p[4], this.actualSubDomains, this.actualSubDomains);\r\n\t}\r\n\tprivate cm(a: string, b: any, c: any): void {\r\n\t\tswitch (a) {\r\n\t\t\tcase BingMapsMapImagery.$$p[0]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[3]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[5]:\r\n\t\t\tthis.cj();\r\n\t\t\tthis.actualTilePath = <string>c;\r\n\t\t\tthis.bp.o();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[1]:\r\n\t\t\tthis.bp.l();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[2]:\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase BingMapsMapImagery.$$p[4]:\r\n\t\t\tthis.cj();\r\n\t\t\tlet d = <SubDomainsCollection>b;\r\n\t\t\tlet e = <SubDomainsCollection>c;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\tlet f = this.actualSubDomains;\r\n\t\t\t\tf.collectionChanged = delegateRemove(f.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.actualSubDomains = e;\r\n\t\t\tif (this.actualSubDomains != null) {\r\n\t\t\t\te.collectionChanged = delegateCombine(e.collectionChanged, runOn(this, this.ci));\r\n\t\t\t}\r\n\t\t\tthis.bp.n();\r\n\t\t\tthis.aj.e();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualTilePath\":\r\n\t\t\tlet g = <string>c;\r\n\t\t\tif (stringIsNullOrEmpty(g)) {\r\n\t\t\t\tthis.cq();\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"BingImageryRestUri\":\r\n\t\t\tthis.actualBingImageryRestUri = <string>c;\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"ActualBingImageryRestUri\":\r\n\t\t\tthis.cj();\r\n\t\t\tthis.cq();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, BingMapsMapImagery, 'cm', [ 'ApiKey', [ 2, stringEmpty() ], 'CultureName', [ 2, \"en-US\" ], 'ImageryStyle', [ BingMapsImageryStyle_$type, enumGetBox<BingMapsImageryStyle>(BingMapsImageryStyle_$type, 1) ], 'IsDeferredLoad', [ 0, false ], 'SubDomains', [ (<any>SubDomainsCollection).$, null ], 'TilePath', [ 2, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSubDomainsCollection } from \"./igc-sub-domains-collection\";\r\nimport { BingMapsImageryStyle, BingMapsImageryStyle_$type } from \"./BingMapsImageryStyle\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { BingMapsMapImagery as BingMapsMapImagery_internal } from \"./BingMapsMapImagery\";\r\nimport { ensureBool, ensureEnum } from \"igniteui-core/componentUtil\";\r\nimport { SubDomainsCollection as SubDomainsCollection_internal } from \"./SubDomainsCollection\";\r\nimport { String_$type } from \"igniteui-core/type\";\r\nimport { SyncableObservableCollection$1 } from \"igniteui-core/SyncableObservableCollection$1\";\r\n\r\n/**\r\n * UI element class used to display BingMapsMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcBingMapsMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : BingMapsMapImagery_internal\r\n{\r\n\treturn new BingMapsMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : BingMapsMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets a status whether the Bing Maps service is initialized.\r\n\t*/\r\n\tget isInitialized() : boolean {\r\n\t\treturn (this.i.isInitialized as boolean);\r\n\t}\r\n\tset isInitialized(v: boolean) {\r\n\t\tthis.i.isInitialized = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the Bing Maps service should be auto-initialized upon valid property values.\r\n\t*/\r\n\tget isDeferredLoad() : boolean {\r\n\t\treturn (this.i.isDeferredLoad as boolean);\r\n\t}\r\n\tset isDeferredLoad(v: boolean) {\r\n\t\tthis.i.isDeferredLoad = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile image uri.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the actual map tile image uri.\r\n\t*/\r\n\tget actualTilePath() : string {\r\n\t\treturn (this.i.actualTilePath as string);\r\n\t}\r\n\tset actualTilePath(v: string) {\r\n\t\tthis.i.actualTilePath = v;\r\n\t}\r\n\tprivate _subDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the collection of image uri subdomains.\r\n\t*/\r\n\tget subDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._subDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.subDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._subDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.subDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._subDomains;\r\n\t}\r\n\tset subDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._subDomains !== null) {\r\n\t                                            (this._subDomains as any)._setSyncTarget(null);\r\n\t                                            this._subDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._subDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.subDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._subDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.subDomains = innerColl;\r\n\t\r\n\t}\r\n\tprivate _actualSubDomains: IgcSubDomainsCollection = null;\r\n\t                                \r\n\t/**\r\n\t * Gets or sets the actual collection of image uri subdomains.\r\n\t*/\r\n\tget actualSubDomains() : IgcSubDomainsCollection {\r\n\t                                        if (this._actualSubDomains === null) {\r\n\t                                            let coll = new IgcSubDomainsCollection();\r\n\t                                            let innerColl = this.i.actualSubDomains;\r\n\t\t\tif (!innerColl) {\r\n\t                                            \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t\t}\r\n\t                                            this._actualSubDomains = (coll as any)._fromInner(innerColl);\r\n\t                                            this.i.actualSubDomains = innerColl;\r\n\t\r\n\t                                        }\r\n\t\treturn this._actualSubDomains;\r\n\t}\r\n\tset actualSubDomains(v: IgcSubDomainsCollection) {\r\n\t                                        if (this._actualSubDomains !== null) {\r\n\t                                            (this._actualSubDomains as any)._setSyncTarget(null);\r\n\t                                            this._actualSubDomains = null;\r\n\t                                        }\r\n\t                                        let coll = new IgcSubDomainsCollection();\r\n\t                                        this._actualSubDomains = (coll as any)._fromOuter(v);\r\n\t                                        let syncColl = new SyncableObservableCollection$1<String>(String_$type);\r\n\t                                        let innerColl = this.i.actualSubDomains;\r\n\t\tif (!innerColl) {\r\n\t                                        \tinnerColl = new SubDomainsCollection_internal(0);\r\n\t\t}\r\n\t                                        (syncColl as any)._inner = innerColl;\r\n\t                                        syncColl.clear();\r\n\t                                        (this._actualSubDomains as any)._setSyncTarget(syncColl);\r\n\t                                        this.i.actualSubDomains = innerColl;\r\n\t\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Bing Imagery Rest Uri.\r\n\t*/\r\n\tget bingImageryRestUri() : string {\r\n\t\treturn (this.i.bingImageryRestUri as string);\r\n\t}\r\n\tset bingImageryRestUri(v: string) {\r\n\t\tthis.i.bingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Actual Bing Imagery Rest Uri.\r\n\t*/\r\n\tget actualBingImageryRestUri() : string {\r\n\t\treturn (this.i.actualBingImageryRestUri as string);\r\n\t}\r\n\tset actualBingImageryRestUri(v: string) {\r\n\t\tthis.i.actualBingImageryRestUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget cultureName() : string {\r\n\t\treturn (this.i.cultureName as string);\r\n\t}\r\n\tset cultureName(v: string) {\r\n\t\tthis.i.cultureName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets an API key required by the Bing Maps imagery service.\r\n\t * This key must be obtained from the http://www.bingmapsportal.com website.\r\n\t*/\r\n\tget apiKey() : string {\r\n\t\treturn (this.i.apiKey as string);\r\n\t}\r\n\tset apiKey(v: string) {\r\n\t\tthis.i.apiKey = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets a map style of the Bing Maps imagery tiles. \r\n\t * For example: Aerial, AerialWithLabels, or Road map style.\r\n\t*/\r\n\tget imageryStyle() : BingMapsImageryStyle {\r\n\t\treturn this.i.imageryStyle;\r\n\t}\r\n\tset imageryStyle(v: BingMapsImageryStyle) {\r\n\t\tthis.i.imageryStyle = ensureEnum<BingMapsImageryStyle>(BingMapsImageryStyle_$type, v);\r\n\t}\r\n\t/**\r\n\t * Will Connect to the Bing Rest API and retrieve the required TilePath and Subdomains from the service.  This requires a valid API key to already be set.\r\n\t\r\n\t*/\r\n\tpublic requestMapSettings() {\r\n\t\tthis.i.requestMapSettings();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcBingMapsMapImagery } from './igc-bing-maps-map-imagery';\r\nimport { BingMapsMapImagery } from './BingMapsMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcBingMapsMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcBingMapsMapImagery\", IgcBingMapsMapImagery);\r\n        TypeRegistrar.register(\"BingMapsMapImagery\", (<any>BingMapsMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGetTileImageUriArgs } from \"igniteui-core/igc-get-tile-image-uri-args\";\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { CustomMapImagery as CustomMapImagery_internal } from \"./CustomMapImagery\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcCustomMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : CustomMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t\r\n\t    private _getTileImageUri: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void = null;\r\n\t    private _getTileImageUri_wrapped: any = null;\r\n\t/**\r\n\t * Raised when URI for tiles should be provided\r\n\t*/\r\n\t\r\n\tpublic get getTileImageUri(): (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void {\r\n\treturn this._getTileImageUri;\r\n\t}\r\n\t    public set getTileImageUri(ev: (s: IgcCustomMapImagery, e: IgcGetTileImageUriArgs) => void) {\r\n\t        if (this._getTileImageUri_wrapped !== null) {\r\n\t            this.i.getTileImageUri = delegateRemove(this.i.getTileImageUri, this._getTileImageUri_wrapped);\r\n\t            this._getTileImageUri_wrapped = null;\r\n\t            this._getTileImageUri = null;\r\n\t        }\r\n\t\r\n\t        this._getTileImageUri = ev;\r\n\t        this._getTileImageUri_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcGetTileImageUriArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeGetTileImageUri) {\r\n\t                        (this as any).beforeGetTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._getTileImageUri) {\r\n\t    this._getTileImageUri(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.getTileImageUri = delegateCombine(this.i.getTileImageUri, this._getTileImageUri_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { CustomMapTileSource } from \"igniteui-core/CustomMapTileSource\";\r\nimport { Base, runOn, delegateCombine, Type, markType } from \"igniteui-core/type\";\r\nimport { GetTileImageUriArgs } from \"igniteui-core/GetTileImageUriArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class CustomMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(CustomMapImagery, 'CustomMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor(a: CustomMapTileSource) {\r\n\t\tsuper(a);\r\n\t\ta.getTileImageUri = delegateCombine(a.getTileImageUri, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: GetTileImageUriArgs): void {\r\n\t\tthis.bp(b);\r\n\t}\r\n\tprotected bp(a: GetTileImageUriArgs): void {\r\n\t\tif (this.getTileImageUri != null) {\r\n\t\t\tthis.getTileImageUri(this, a);\r\n\t\t}\r\n\t}\r\n\tgetTileImageUri: (sender: any, e: GetTileImageUriArgs) => void = null;\r\n}\r\n\r\n\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcCustomMapImagery } from './igc-custom-map-imagery';\r\nimport { CustomMapImagery } from './CustomMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcCustomMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcCustomMapImagery\", IgcCustomMapImagery);\r\n        TypeRegistrar.register(\"CustomMapImagery\", (<any>CustomMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicXYTriangulatingSeriesView } from \"./GeographicXYTriangulatingSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterContourSeries } from \"igniteui-charts/ScatterContourSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, String_$type, markDep } from \"igniteui-core/type\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ValueBrushScale } from \"igniteui-charts/ValueBrushScale\";\r\nimport { ContourValueResolver } from \"igniteui-charts/ContourValueResolver\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { TriangulationStatusEventArgs } from \"igniteui-core/TriangulationStatusEventArgs\";\r\nimport { ScatterTriangulationSeries } from \"igniteui-charts/ScatterTriangulationSeries\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeriesView extends GeographicXYTriangulatingSeriesView {\r\n\tstatic $t: Type = markType(GeographicContourLineSeriesView, 'GeographicContourLineSeriesView', (<any>GeographicXYTriangulatingSeriesView).$);\r\n\tconstructor(a: GeographicContourLineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.c2 = a;\r\n\t}\r\n\tprivate c2: GeographicContourLineSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t\tthis.c2.jq = Defaults.z;\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\tif (this.c2.w5 != null) {\r\n\t\t\tthis.c2.xx.y0 = this.c2.x0;\r\n\t\t\tthis.c2.xx.za = this.c2.x4;\r\n\t\t}\r\n\t}\r\n\tc3(): void {\r\n\t\tif (this.c2.xx != null) {\r\n\t\t\tthis.c2.xx.y0 = this.c2.x0;\r\n\t\t}\r\n\t}\r\n\tc4(): void {\r\n\t\tif (this.c2.xx != null) {\r\n\t\t\tthis.c2.xx.za = this.c2.x4;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicContourLineSeries extends GeographicXYTriangulatingSeries {\r\n\tstatic $t: Type = markType(GeographicContourLineSeries, 'GeographicContourLineSeries', (<any>GeographicXYTriangulatingSeries).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicContourLineSeries();\r\n\t}\r\n\tprotected get_fk(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicContourLineSeries).$;\r\n\t}\r\n\tprotected xa(a: any, b: any): void {\r\n\t\tsuper.xa(a, b);\r\n\t}\r\n\txx: ScatterContourSeries;\r\n\tprotected w4(): Series {\r\n\t\tthis.xx = new ScatterContourSeries();\r\n\t\tlet a = this.xx;\r\n\t\ta.triangulationStatusChanged = delegateCombine(a.triangulationStatusChanged, runOn(this, this.x7));\r\n\t\tlet b = this.xx;\r\n\t\tb.propertyUpdated = delegateCombine(b.propertyUpdated, runOn(this, this.x8));\r\n\t\treturn this.xx;\r\n\t}\r\n\tprivate x7(a: any, b: TriangulationStatusEventArgs): void {\r\n\t\tif (this.triangulationStatusChanged != null) {\r\n\t\t\tthis.triangulationStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate x8(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterContourSeries>((<any>ScatterContourSeries).$, this.w5);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.propertyName == \"ActualFillScale\") {\r\n\t\t\tthis.xz = c.yz;\r\n\t\t}\r\n\t}\r\n\tx4: string;\r\n\tx0: ValueBrushScale;\r\n\txz: ValueBrushScale;\r\n\tprotected sl(): void {\r\n\t\tsuper.sl();\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicContourLineSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.x1 = <GeographicContourLineSeriesView>a;\r\n\t}\r\n\tx1: GeographicContourLineSeriesView;\r\n\txw: ContourValueResolver;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicContourLineSeries.$$p[1]:\r\n\t\t\tthis.x1.c3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[2]:\r\n\t\t\tthis.x1.c4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicContourLineSeries.$$p[3]:\r\n\t\t\tthis.xx.yx = this.xw;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashArray\":\r\n\t\t\tthis.xx.v7 = this.v7;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"DashCap\":\r\n\t\t\tthis.xx.v8 = this.v8;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"MiterLimit\":\r\n\t\t\tthis.xx.ji = this.ji;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"LineJoin\":\r\n\t\t\tthis.xx.wa = this.wa;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\ttriangulationStatusChanged: (sender: any, args: TriangulationStatusEventArgs) => void = null;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicContourLineSeries, 'raisePropertyChanged', [ 'ActualFillScale:xz:x9', [ (<any>ValueBrushScale).$, null ], 'FillScale:x0:ya', [ (<any>ValueBrushScale).$, null ], 'ValueMemberPath:x4:yb', [ 2, \"value\" ], 'ValueResolver:xw:yc', [ (<any>ContourValueResolver).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcValueBrushScaleComponent } from \"igniteui-charts/igc-value-brush-scale-component\";\r\nimport { IgcContourValueResolverComponent } from \"igniteui-charts/igc-contour-value-resolver-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicContourLineSeries } from \"./GeographicContourLineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a class for Geographic Contour Series displayed on a map.\r\n*/\r\nexport class IgcGeographicContourLineSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicContourLineSeries\r\n{\r\n\treturn new GeographicContourLineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicContourLineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicContourLineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicContourLineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicContourLineSeriesComponent._observedAttributesIgcGeographicContourLineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-contour-line-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicContourLineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicContourLineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicContourLineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicContourLineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a line contour shape.\r\n\t*/\r\n\tget isLineContour() : boolean {\r\n\t\treturn (this.i.fk as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to retrieve the numeric values from the ItemsSource items.\r\n\t*/\r\n\tget valueMemberPath() : string {\r\n\t\treturn (this.i.x4 as string);\r\n\t}\r\n\tset valueMemberPath(v: string) {\r\n\t\tthis.i.x4 = v;\r\n\t}\r\n\t/**\r\n\t * The ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\r\n\t*/\r\n\tget fillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.x0;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.x0 = null : this.i.x0 = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual fill scale that is set on the FillScale property or default FillScale\r\n\t*/\r\n\tget actualFillScale() : IgcValueBrushScaleComponent {\r\n\t                                        const r = this.i.xz;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcValueBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualFillScale(v: IgcValueBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xz = null : this.i.xz = v.i;\r\n\t}\r\n\t/**\r\n\t * The ContourValueResolver used to determine the numeric values of contours.\r\n\t*/\r\n\tget valueResolver() : IgcContourValueResolverComponent {\r\n\t                                        const r = this.i.xw;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcContourValueResolverComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset valueResolver(v: IgcContourValueResolverComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xw = null : this.i.xw = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.actualFillScale && (this.actualFillScale as any).name && (this.actualFillScale as any).name == name) { return this.actualFillScale; }\r\n\tif (this.valueResolver && (this.valueResolver as any).name && (this.valueResolver as any).name == name) { return this.valueResolver; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualFillScale && (this.actualFillScale as any)._styling) {\r\n\t    (this.actualFillScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.valueResolver && (this.valueResolver as any)._styling) {\r\n\t    (this.valueResolver as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicContourLineSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterContourSeriesModule } from 'igniteui-charts/igc-scatter-contour-series-module';\r\n\r\nimport { IgcGeographicContourLineSeriesComponent } from './igc-geographic-contour-line-series-component';\r\nimport { GeographicContourLineSeries } from './GeographicContourLineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicContourLineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterContourSeriesModule.register();\r\n        IgcGeographicContourLineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicContourLineSeriesComponent\", IgcGeographicContourLineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicContourLineSeries\", (<any>GeographicContourLineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { HighDensityScatterSeries } from \"igniteui-charts/HighDensityScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Color } from \"igniteui-core/Color\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Base, typeCast, Type, markType, String_$type, Boolean_$type, Number_$type, typeGetValue, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { ProgressiveLoadStatusEventArgs } from \"igniteui-charts/ProgressiveLoadStatusEventArgs\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { isNaN_ } from \"igniteui-core/number\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeriesView, 'GeographicHighDensityScatterSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicHighDensityScatterSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cu = a;\r\n\t}\r\n\tprivate cu: GeographicHighDensityScatterSeries = null;\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.cu.w5);\r\n\t\ta.ze = this.cu.xu;\r\n\t\ta.zm = this.cu.xs;\r\n\t\ta.xr = this.cu.xh;\r\n\t\ta.xq = this.cu.xg;\r\n\t\ta.f9 = this.cu.xf;\r\n\t\ta.ym = this.cu.xj;\r\n\t\ta.yl = this.cu.xi;\r\n\t\ta.aak = this.cu.yd;\r\n\t\ta.aaj = this.cu.yc;\r\n\t\ta.yy = this.cu.xm;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).ze = this.cu.xu;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).zm = this.cu.xs;\r\n\t}\r\n\tc5(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).xr = this.cu.xh;\r\n\t}\r\n\tc3(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).xq = this.cu.xg;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).f9 = this.cu.xf;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).ym = this.cu.xj;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).yl = this.cu.xi;\r\n\t}\r\n\tc4(): void {\r\n\t\tlet a: HighDensityScatterSeries = typeCast<HighDensityScatterSeries>((<any>HighDensityScatterSeries).$, this.cu.w5);\r\n\t\tif (this.cu.dc == null) {\r\n\t\t\ta.xa = null;\r\n\t\t\ta.xc = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xa = (<XamGeographicMap>this.cu.dc).xj;\r\n\t\ta.xc = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tc6(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).xa = (<XamGeographicMap>this.cu.dc).xj;\r\n\t}\r\n\tc7(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).xc = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).aak = this.cu.yd;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).aaj = this.cu.yc;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<HighDensityScatterSeries>this.cu.w5).yy = this.cu.xm;\r\n\t}\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t\tthis.cu.yd = Defaults.bf;\r\n\t\t\tthis.cu.yc = Defaults.be;\r\n\t\t\tthis.cu.vk = Defaults.ba;\r\n\t\t\tthis.cu.v0 = Defaults.a9;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicHighDensityScatterSeries extends GeographicMapSeriesHost {\r\n\tstatic $t: Type = markType(GeographicHighDensityScatterSeries, 'GeographicHighDensityScatterSeries', (<any>GeographicMapSeriesHost).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicHighDensityScatterSeries();\r\n\t}\r\n\tprotected jl(): number {\r\n\t\tif (!isNaN_(this.jk)) {\r\n\t\t\treturn super.jl();\r\n\t\t}\r\n\t\treturn Defaults.ad;\r\n\t}\r\n\tprotected get_fp(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicHighDensityScatterSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicHighDensityScatterSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.xe = <GeographicHighDensityScatterSeriesView>a;\r\n\t}\r\n\txe: GeographicHighDensityScatterSeriesView;\r\n\tprotected w4(): Series {\r\n\t\tthis.xd = new HighDensityScatterSeries();\r\n\t\treturn this.xd;\r\n\t}\r\n\tprivate xd: HighDensityScatterSeries = null;\r\n\txs: string;\r\n\txu: string;\r\n\txh: boolean;\r\n\txg: boolean;\r\n\txf: boolean;\r\n\txj: number;\r\n\txi: number;\r\n\tyd: Color;\r\n\tyc: Color;\r\n\txm: number;\r\n\tprogressiveLoadStatusChanged: (sender: any, e: ProgressiveLoadStatusEventArgs) => void = null;\r\n\tprivate xl: number = 0;\r\n\tget xn(): number {\r\n\t\treturn this.xl;\r\n\t}\r\n\tset xn(a: number) {\r\n\t\tlet b = this.xl;\r\n\t\tthis.xl = a;\r\n\t\tthis.raisePropertyChanged(\"ProgressiveStatus\", b, this.xl);\r\n\t}\r\n\tprotected xa(a: any, b: any): void {\r\n\t\tsuper.xa(a, b);\r\n\t\tlet c = (<HighDensityScatterSeries>this.w5);\r\n\t\tc.progressiveLoadStatusChanged = delegateCombine(c.progressiveLoadStatusChanged, runOn(this, this.x1));\r\n\t\tlet d = (<HighDensityScatterSeries>this.w5);\r\n\t\td.propertyUpdated = delegateCombine(d.propertyUpdated, runOn(this, this.x0));\r\n\t}\r\n\tprivate x1(a: any, b: ProgressiveLoadStatusEventArgs): void {\r\n\t\tthis.xn = b.currentStatus;\r\n\t\tif (this.progressiveLoadStatusChanged != null) {\r\n\t\t\tthis.progressiveLoadStatusChanged(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate x0(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tif (this.xd == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.xe.c4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[5]:\r\n\t\t\tthis.xe.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[4]:\r\n\t\t\tthis.xe.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[9]:\r\n\t\t\tthis.xe.c5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[8]:\r\n\t\t\tthis.xe.c3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[6]:\r\n\t\t\tthis.xe.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.xe.c6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.xe.c7();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[3]:\r\n\t\t\tthis.xe.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[1]:\r\n\t\t\tthis.xe.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[2]:\r\n\t\t\tthis.xe.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[0]:\r\n\t\t\tthis.xe.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicHighDensityScatterSeries.$$p[7]:\r\n\t\t\tthis.xe.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected get_g8(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tprotected set_g8(a: boolean): void {\r\n\t\tsuper.set_g8(a);\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicHighDensityScatterSeries, 'raisePropertyChanged', [ 'HeatMaximumColor:yc:x2', [ (<any>Color).$, Defaults.be ], 'HeatMaximum:xi:x3', [ 1, 50 ], 'HeatMinimumColor:yd:x4', [ (<any>Color).$, Defaults.bf ], 'HeatMinimum:xj:x5', [ 1, 0 ], 'LatitudeMemberPath:xs:x6', [ 2, null ], 'LongitudeMemberPath:xu:x7', [ 2, null ], 'MouseOverEnabled:xf:x8', [ 0, false ], 'PointExtent:xm:x9', [ 1, 1 ], 'ProgressiveLoad:xg:ya', [ 0, true ], 'UseBruteForce:xh:yb', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcProgressiveLoadStatusEventArgs } from \"igniteui-charts/igc-progressive-load-status-event-args\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicHighDensityScatterSeries } from \"./GeographicHighDensityScatterSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, colorToString, stringToColor } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a HighDensityScatterSeries.\r\n*/\r\nexport class IgcGeographicHighDensityScatterSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicHighDensityScatterSeries\r\n{\r\n\treturn new GeographicHighDensityScatterSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicHighDensityScatterSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicHighDensityScatterSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicHighDensityScatterSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicHighDensityScatterSeriesComponent._observedAttributesIgcGeographicHighDensityScatterSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-high-density-scatter-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicHighDensityScatterSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicHighDensityScatterSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows pixels.\r\n\t*/\r\n\tget isPixel() : boolean {\r\n\t\treturn (this.i.fp as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.xs as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.xs = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.xu as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.xu = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to use use brute force mode.\r\n\t*/\r\n\tget useBruteForce() : boolean {\r\n\t\treturn (this.i.xh as boolean);\r\n\t}\r\n\tset useBruteForce(v: boolean) {\r\n\t\tthis.i.xh = ensureBool(v);\r\n\t                                        this._a(\"useBruteForce\", this.i.xh);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether to progressively load the data into the chart.\r\n\t*/\r\n\tget progressiveLoad() : boolean {\r\n\t\treturn (this.i.xg as boolean);\r\n\t}\r\n\tset progressiveLoad(v: boolean) {\r\n\t\tthis.i.xg = ensureBool(v);\r\n\t                                        this._a(\"progressiveLoad\", this.i.xg);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether the chart reacts to mouse move events.\r\n\t*/\r\n\tget mouseOverEnabled() : boolean {\r\n\t\treturn (this.i.xf as boolean);\r\n\t}\r\n\tset mouseOverEnabled(v: boolean) {\r\n\t\tthis.i.xf = ensureBool(v);\r\n\t                                        this._a(\"mouseOverEnabled\", this.i.xf);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the density value that maps to the minimum heat color.\r\n\t*/\r\n\tget heatMinimum() : number {\r\n\t\treturn (this.i.xj as number);\r\n\t}\r\n\tset heatMinimum(v: number) {\r\n\t\tthis.i.xj = +v;\r\n\t                                        this._a(\"heatMinimum\", this.i.xj);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the value that maps to the maximum heat color.\r\n\t*/\r\n\tget heatMaximum() : number {\r\n\t\treturn (this.i.xi as number);\r\n\t}\r\n\tset heatMaximum(v: number) {\r\n\t\tthis.i.xi = +v;\r\n\t                                        this._a(\"heatMaximum\", this.i.xi);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the minimum end of the scale.\r\n\t*/\r\n\tget heatMinimumColor() : string {\r\n\t\treturn colorToString(this.i.yd);\r\n\t}\r\n\tset heatMinimumColor(v: string) {\r\n\t\tthis.i.yd = stringToColor(v);\r\n\t                                        this._a(\"heatMinimumColor\", colorToString(this.i.yd));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the color to use for the maximum end of the scale.\r\n\t*/\r\n\tget heatMaximumColor() : string {\r\n\t\treturn colorToString(this.i.yc);\r\n\t}\r\n\tset heatMaximumColor(v: string) {\r\n\t\tthis.i.yc = stringToColor(v);\r\n\t                                        this._a(\"heatMaximumColor\", colorToString(this.i.yc));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the the pixel extent of the square data points that are rendered.\r\n\t*/\r\n\tget pointExtent() : number {\r\n\t\treturn (this.i.xm as number);\r\n\t}\r\n\tset pointExtent(v: number) {\r\n\t\tthis.i.xm = +v;\r\n\t                                        this._a(\"pointExtent\", this.i.xm);\r\n\t}\r\n\t/**\r\n\t * Represents the current status of the progressive load of the series. It will range from 0 to 100, where 100 is fully loaded.\r\n\t*/\r\n\tget progressiveStatus() : number {\r\n\t\treturn (this.i.xn as number);\r\n\t}\r\n\tset progressiveStatus(v: number) {\r\n\t\tthis.i.xn = +v;\r\n\t                                        this._a(\"progressiveStatus\", this.i.xn);\r\n\t}\r\n\t\r\n\t    private _progressiveLoadStatusChanged: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void = null;\r\n\t    private _progressiveLoadStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the progressive loading state of the series has changed.\r\n\t*/\r\n\t\r\n\tpublic get progressiveLoadStatusChanged(): (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void {\r\n\treturn this._progressiveLoadStatusChanged;\r\n\t}\r\n\t    public set progressiveLoadStatusChanged(ev: (s: IgcGeographicHighDensityScatterSeriesComponent, e: IgcProgressiveLoadStatusEventArgs) => void) {\r\n\t        if (this._progressiveLoadStatusChanged_wrapped !== null) {\r\n\t            this.i.progressiveLoadStatusChanged = delegateRemove(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);\r\n\t            this._progressiveLoadStatusChanged_wrapped = null;\r\n\t            this._progressiveLoadStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._progressiveLoadStatusChanged = ev;\r\n\t        this._progressiveLoadStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcProgressiveLoadStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeProgressiveLoadStatusChanged) {\r\n\t                        (this as any).beforeProgressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._progressiveLoadStatusChanged) {\r\n\t    this._progressiveLoadStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.progressiveLoadStatusChanged = delegateCombine(this.i.progressiveLoadStatusChanged, this._progressiveLoadStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcHighDensityScatterSeriesModule } from 'igniteui-charts/igc-high-density-scatter-series-module';\r\n\r\nimport { IgcGeographicHighDensityScatterSeriesComponent } from './igc-geographic-high-density-scatter-series-component';\r\nimport { GeographicHighDensityScatterSeries } from './GeographicHighDensityScatterSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicHighDensityScatterSeriesModule {\r\n    public static register(): void {\r\nIgcHighDensityScatterSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicHighDensityScatterSeriesComponent\", IgcGeographicHighDensityScatterSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicHighDensityScatterSeries\", (<any>GeographicHighDensityScatterSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { ArcGISOnlineTileSource } from \"igniteui-core/ArcGISOnlineTileSource\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { Base, Type, String_$type, Boolean_$type, typeCast, markType } from \"igniteui-core/type\";\r\nimport { Uri } from \"igniteui-core/Uri\";\r\nimport { TokenResponseModel } from \"./TokenResponseModel\";\r\nimport { MapServerResponseModel } from \"./MapServerResponseModel\";\r\nimport { TileInfoResponseModel } from \"./TileInfoResponseModel\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { UriKind } from \"igniteui-core/UriKind\";\r\nimport { HttpRequestUtil } from \"igniteui-core/httpRequestUtil\";\r\nimport { stringIsNullOrEmpty, stringRemove } from \"igniteui-core/string\";\r\nimport { stringFormat1, stringFormat } from \"igniteui-core/stringExtended\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class ArcGISOnlineMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(ArcGISOnlineMapImagery, 'ArcGISOnlineMapImagery', (<any>GeographicMapImagery).$);\r\n\tprivate static readonly bv: string = \"generateToken?username={0}&password={1}&client=referer&referer={2}&expiration={3}&f=pjson\";\r\n\tconstructor() {\r\n\t\tsuper(new ArcGISOnlineTileSource());\r\n\t\tthis.bt = \"localhost\";\r\n\t\tthis.bu = \"https://www.arcgis.com/sharing/\";\r\n\t\tthis.bp = 60;\r\n\t\tthis.userToken = null;\r\n\t\tthis.getResponseCompleted_MapServerResponse = this.getResponseCompleted_MapServerResponse.bind(this);\r\n\t\tthis.getResponseCompleted_TokenResponse = this.getResponseCompleted_TokenResponse.bind(this);\r\n\t}\r\n\tstatic readonly mapServerUriProperty: DependencyProperty = DependencyProperty.i(\"MapServerUri\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cd));\r\n\tget mapServerUri(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.mapServerUriProperty);\r\n\t}\r\n\tset mapServerUri(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.mapServerUriProperty, a);\r\n\t}\r\n\tprivate static cd(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"MapServerUri\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userNameProperty: DependencyProperty = DependencyProperty.i(\"UserName\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.cg));\r\n\tget userName(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userNameProperty);\r\n\t}\r\n\tset userName(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userNameProperty, a);\r\n\t}\r\n\tprivate static cg(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserName\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly passwordProperty: DependencyProperty = DependencyProperty.i(\"Password\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ce));\r\n\tget password(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.passwordProperty);\r\n\t}\r\n\tset password(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.passwordProperty, a);\r\n\t}\r\n\tprivate static ce(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"Password\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly userTokenProperty: DependencyProperty = DependencyProperty.i(\"UserToken\", String_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, null, ArcGISOnlineMapImagery.ch));\r\n\tget userToken(): string {\r\n\t\treturn <string>this.c(ArcGISOnlineMapImagery.userTokenProperty);\r\n\t}\r\n\tset userToken(a: string) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.userTokenProperty, a);\r\n\t}\r\n\tprivate static ch(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"UserToken\", b.oldValue, b.newValue);\r\n\t}\r\n\tstatic readonly isMapPublicProperty: DependencyProperty = DependencyProperty.i(\"IsMapPublic\", Boolean_$type, (<any>ArcGISOnlineMapImagery).$, new PropertyMetadata(2, true, ArcGISOnlineMapImagery.cc));\r\n\tget isMapPublic(): boolean {\r\n\t\treturn <boolean>this.c(ArcGISOnlineMapImagery.isMapPublicProperty);\r\n\t}\r\n\tset isMapPublic(a: boolean) {\r\n\t\tthis.h(ArcGISOnlineMapImagery.isMapPublicProperty, a);\r\n\t}\r\n\tprivate static cc(a: DependencyObject, b: DependencyPropertyChangedEventArgs): void {\r\n\t\t(<ArcGISOnlineMapImagery>a).cf(\"IsMapPublic\", b.oldValue, b.newValue);\r\n\t}\r\n\tprivate bp: number = 0;\r\n\tget defaultTokenTimeout(): number {\r\n\t\treturn this.bp;\r\n\t}\r\n\tset defaultTokenTimeout(a: number) {\r\n\t\tthis.bp = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bu: string = null;\r\n\tget tokenGenerationEndPoint(): string {\r\n\t\treturn this.bu;\r\n\t}\r\n\tset tokenGenerationEndPoint(a: string) {\r\n\t\tthis.bu = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate bt: string = null;\r\n\tget refererUri(): string {\r\n\t\treturn this.bt;\r\n\t}\r\n\tset refererUri(a: string) {\r\n\t\tthis.bt = a;\r\n\t\tthis.b8(true);\r\n\t}\r\n\tacquireNewToken(): void {\r\n\t\tthis.b8(true);\r\n\t}\r\n\tprivate b9(a: () => void): void {\r\n\t\ta();\r\n\t}\r\n\tprivate b8(a: boolean): void {\r\n\t\tif (stringIsNullOrEmpty(this.userToken) && a == false) {\r\n\t\t\tthis.ci();\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet b = this.tokenGenerationEndPoint;\r\n\t\tif (stringIsNullOrEmpty(b)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (b.substr(b.length - 1, 1) != \"/\") {\r\n\t\t\tb += \"/\";\r\n\t\t}\r\n\t\tif (stringIsNullOrEmpty(this.refererUri)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet c = this.defaultTokenTimeout;\r\n\t\tif (c < 1) {\r\n\t\t\tc = 1;\r\n\t\t}\r\n\t\tb += stringFormat1(ArcGISOnlineMapImagery.bv, this.userName, this.password, this.refererUri, c);\r\n\t\tif (!Uri.isWellFormedUriString(b, 1)) {\r\n\t\t\tthis.userToken = \"\";\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = b;\r\n\t\tthis._pendingTokenRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_TokenResponse, null );\r\n\t}\r\n\tprivate ci(): void {\r\n\t\tif (stringIsNullOrEmpty(this.mapServerUri)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet a = this.mapServerUri;\r\n\t\tif (a.substr(a.length - 1, 1) == \"/\") {\r\n\t\t\tstringRemove(a, a.length - 1, 1);\r\n\t\t}\r\n\t\tif (!this.isMapPublic) {\r\n\t\t\tif (stringIsNullOrEmpty(this.userToken)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\ta = stringFormat(\"{0}?f=json&token={1}\", a, this.userToken);\r\n\t\t} else {\r\n\t\t\ta = stringFormat(\"{0}?f=json\", a);\r\n\t\t}\r\n\t\tif (!Uri.isWellFormedUriString(a, 1)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet url_ = a;\r\n\t\tthis._pendingMapServerRequest_ = HttpRequestUtil.submit(url_, this.getResponseCompleted_MapServerResponse, null );\r\n\t}\r\n\tprivate _pendingTokenRequest_: any = null;\r\n\tprivate _pendingMapServerRequest_: any = null;\r\n\tprivate getResponseCompleted_TokenResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingTokenRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingTokenRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: TokenResponseModel = <TokenResponseModel>( JSON.parse(data_));\r\n\t\tif (c != null) {\r\n\t\t\tlet d: string = \"\";\r\n\t\t\tif (c.token != null) {\r\n\t\t\t\td = c.token;\r\n\t\t\t}\r\n\t\t\tthis.userToken = d;\r\n\t\t}\r\n\t}\r\n\tprivate getResponseCompleted_MapServerResponse(a: any, b: any): void {\r\n\t\tif (b != this._pendingMapServerRequest_) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._pendingMapServerRequest_ = null;\r\n\t\tlet data_ = a;\r\n\t\tlet c: MapServerResponseModel = <MapServerResponseModel>( JSON.parse(data_));\r\n\t\tif ((c != null) && (c.tileInfo != null)) {\r\n\t\t\t(<ArcGISOnlineTileSource>this.ap).levelOfDetail = c.tileInfo.lods.length;\r\n\t\t}\r\n\t}\r\n\tprivate cf(a: string, b: any, c: any): void {\r\n\t\tlet d = typeCast<ArcGISOnlineTileSource>((<any>ArcGISOnlineTileSource).$, this.ap);\r\n\t\tswitch (a) {\r\n\t\t\tcase \"MapServerUri\":\r\n\t\t\tif (d != null) {\r\n\t\t\t\td.mapServerUri = typeCast<string>(String_$type, c);\r\n\t\t\t}\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserName\":\r\n\r\n\t\t\tcase \"Password\":\r\n\t\t\tif (stringIsNullOrEmpty(this.userName) || stringIsNullOrEmpty(this.password)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.b8(true);\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"UserToken\":\r\n\t\t\tthis.b9(() => d.userToken = this.userToken);\r\n\t\t\tthis.ci();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"IsMapPublic\":\r\n\t\t\td.isMapPublic = this.isMapPublic;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tsuper.ba(a, b, c);\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { ArcGISOnlineMapImagery as ArcGISOnlineMapImagery_internal } from \"./ArcGISOnlineMapImagery\";\r\nimport { ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * UI element class used to display ArcGIS Online Map imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcArcGISOnlineMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : ArcGISOnlineMapImagery_internal\r\n{\r\n\treturn new ArcGISOnlineMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : ArcGISOnlineMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the map tile server uri.\r\n\t*/\r\n\tget mapServerUri() : string {\r\n\t\treturn (this.i.mapServerUri as string);\r\n\t}\r\n\tset mapServerUri(v: string) {\r\n\t\tthis.i.mapServerUri = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserName.\r\n\t*/\r\n\tget userName() : string {\r\n\t\treturn (this.i.userName as string);\r\n\t}\r\n\tset userName(v: string) {\r\n\t\tthis.i.userName = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Password.\r\n\t*/\r\n\tget password() : string {\r\n\t\treturn (this.i.password as string);\r\n\t}\r\n\tset password(v: string) {\r\n\t\tthis.i.password = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserToken.\r\n\t*/\r\n\tget userToken() : string {\r\n\t\treturn (this.i.userToken as string);\r\n\t}\r\n\tset userToken(v: string) {\r\n\t\tthis.i.userToken = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the IsMapPublic variable.  A value of false requires authentication parameters.\r\n\t*/\r\n\tget isMapPublic() : boolean {\r\n\t\treturn (this.i.isMapPublic as boolean);\r\n\t}\r\n\tset isMapPublic(v: boolean) {\r\n\t\tthis.i.isMapPublic = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the Default Token Timeout before the Token Expires, this value is in Minutes\r\n\t*/\r\n\tget defaultTokenTimeout() : number {\r\n\t\treturn (this.i.defaultTokenTimeout as number);\r\n\t}\r\n\tset defaultTokenTimeout(v: number) {\r\n\t\tthis.i.defaultTokenTimeout = +v;\r\n\t}\r\n\t/**\r\n\t * Gets or Sets the current endpoint to retrieve the token.\r\n\t*/\r\n\tget tokenGenerationEndPoint() : string {\r\n\t\treturn (this.i.tokenGenerationEndPoint as string);\r\n\t}\r\n\tset tokenGenerationEndPoint(v: string) {\r\n\t\tthis.i.tokenGenerationEndPoint = v;\r\n\t}\r\n\t/**\r\n\t * Contains the User Supplied Referer Uri to be used in Token Generation.\r\n\t*/\r\n\tget refererUri() : string {\r\n\t\treturn (this.i.refererUri as string);\r\n\t}\r\n\tset refererUri(v: string) {\r\n\t\tthis.i.refererUri = v;\r\n\t}\r\n\t/**\r\n\t * Retreives a new token based on the preconfigured parameters and updates the UserToken field, Normal this is called automatically.\r\n\t * The is provided to the end-user to allow them to reteive tokens on their onw.\r\n\t\r\n\t*/\r\n\tpublic acquireNewToken() {\r\n\t\tthis.i.acquireNewToken();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcArcGISOnlineMapImagery } from './igc-arc-gis-online-map-imagery';\r\nimport { ArcGISOnlineMapImagery } from './ArcGISOnlineMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcArcGISOnlineMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcArcGISOnlineMapImagery\", IgcArcGISOnlineMapImagery);\r\n        TypeRegistrar.register(\"ArcGISOnlineMapImagery\", (<any>ArcGISOnlineMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcSeriesComponent } from 'igniteui-charts/igc-series-component';\r\nimport { GridMode, GridMode_$type } from 'igniteui-charts/GridMode';\r\nimport { IgcSeriesViewerComponent } from 'igniteui-charts/igc-series-viewer-component';\r\nimport { WebComponentRenderer, WebComponentWrapper } from 'igniteui-core/web-component-renderer';\r\nimport { Visibility, Visibility_$type } from 'igniteui-core/Visibility';\r\nimport { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { PointUtil, IEnumerable, TypeRegistrar, delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { Brush } from 'igniteui-core/Brush';\r\nimport { Color } from 'igniteui-core/Color';\r\nimport { Series } from 'igniteui-charts/Series';\r\nimport { Rect } from 'igniteui-core/Rect';\r\nimport { DataTemplate } from 'igniteui-core/DataTemplate';\r\nimport { BrushCollection } from 'igniteui-core/BrushCollection';\r\nimport { XamGeographicMap } from './XamGeographicMap';\r\nimport { CollectionAdapter, brushToString, stringToBrush, toPoint, fromPoint, toRect, fromRect, fromBrushCollection, toBrushCollection, ensureBool, ensureEnum, initializePropertiesFromCss, NamePatcher, enumToString, brushCollectionToString, rectToString, toSpinal } from \"igniteui-core/componentUtil\";\r\nimport { DataChartStylingDefaults } from 'igniteui-charts/DataChartStylingDefaults';\r\nimport { IgcDataContext } from 'igniteui-core/igc-data-context';\r\nimport { IgcSeriesCollection } from 'igniteui-charts/igc-series-collection';\r\nimport { SyncableObservableCollection$2 } from 'igniteui-core/SyncableObservableCollection$2';\r\nimport { NotifyCollectionChangedAction } from 'igniteui-core/NotifyCollectionChangedAction';\r\nimport { getAllPropertyNames, fromSpinal } from \"igniteui-core/componentUtil\";\r\nimport { IgEvent } from 'igniteui-core/IgEvent';\r\n\r\nimport { IgcNumericXAxisComponent } from 'igniteui-charts/igc-numeric-x-axis-component';\r\nimport { IgcNumericYAxisComponent } from 'igniteui-charts/igc-numeric-y-axis-component';\r\nimport { IgcImageTilesReadyEventArgs } from './igc-image-tiles-ready-event-args';\r\nimport { IgcGeographicMapImagery } from './igc-geographic-map-imagery';\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\nimport { MapResizeBehavior, MapResizeBehavior_$type } from './MapResizeBehavior';\r\nimport { MapBackgroundTilingMode, MapBackgroundTilingMode_$type } from './MapBackgroundTilingMode';\r\n\r\nexport class IgcGeographicMapComponent extends IgcSeriesViewerComponent {\r\n\r\n    contentSeries: IgcSeriesComponent[] = [];\r\n\r\n\tprivate _height: string;\r\n    private _width: string;\r\n\r\n    set height(value: string) {\r\n        this._height = value;\r\n        this.style.height = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get height(): string {\r\n        return this._height;\r\n    }\r\n\r\n    set width(value: string) {\r\n        this._width = value;\r\n        this.style.width = value;\r\n        this.notifyContainerResized();\r\n    }\r\n    get width(): string {\r\n        return this._width;\r\n    }\r\n\r\n    public notifyContainerResized() {\r\n        this._chart.notifyContainerResized();\r\n    }\r\n\r\n    /**\r\n\t * Gets or sets the legend used for the current chart.\r\n\t*/\r\n    get legend(): any {\r\n        if (this.i.legend != null)\r\n            return (<any>this.i.legend).externalObject;\r\n    }\r\n    set legend(v: any) {\r\n        if (v != undefined && v != null)\r\n            this.i.legend = v.i;\r\n    }\r\n\r\n\t/**\r\n\t * The series actually present in the chart. Do not directly modify this array.\r\n\t * This array's contents can be modified by causing Angular to reproject the child content.\r\n\t * Or adding and removing series from the manual series collection on the series property.\r\n\t */\r\n\tactualSeries: IgcSeriesComponent[] = [];\r\n\t\r\n\tprivate _container: any;\r\n\r\n\tprivate _series: IgcSeriesCollection = null;\r\n\t/**\r\n\t * A collection or manually added series for the chart.\r\n\t*/\r\n    get series(): IgcSeriesCollection {\r\n        if (this._series === null) {\r\n            let coll = new IgcSeriesCollection();\r\n            let inner: SyncableObservableCollection$2<IgcSeriesComponent, Series> = (<any>coll)._innerColl;\r\n            inner.addListener((sender, e) => {\r\n                if (!this._seriesAdapter) {\r\n                    return;\r\n                }\r\n                switch (e.action) {\r\n                    case NotifyCollectionChangedAction.Add:\r\n                        this._seriesAdapter.addManualItem(e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Remove:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Replace:\r\n                        this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\r\n                        this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\r\n                        break;\r\n                    case NotifyCollectionChangedAction.Reset:\r\n                        this._seriesAdapter.clearManualItems();\r\n                        break;\r\n                }\r\n            });\r\n            this._series = coll;\r\n        }\r\n        return this._series;\r\n    }\r\n\r\n    private _renderer: WebComponentRenderer;\r\n\r\n    constructor() {\r\n\r\n        super();\r\n\r\n        if ((this as any)._styling) {\r\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(this));\r\n        }\r\n        this._renderer = new WebComponentRenderer(this,\r\n            document,\r\n            true, DataChartStylingDefaults);\r\n\r\n        //this._implementation = this.createImplementation();\r\n        this._container = this._renderer.createElement(\"div\");\r\n        this._renderer.updateRoot(this._container);\r\n        //this._renderer.rootWrapper.append(this._container);\r\n        this._container.setStyleProperty(\"display\", \"block\");\r\n        this._container.setStyleProperty(\"width\", \"100%\");\r\n        this._container.setStyleProperty(\"height\", \"100%\");\r\n\r\n        var root: any;\r\n        root = this._container;\r\n        if (this._container.nativeElement != null) {\r\n            root = this._container.nativeElement;\r\n        }\r\n\r\n        this._wrapper = this._renderer;\r\n        var chart = this.i;\r\n        this._chart = chart;\r\n\r\n        this._seriesAdapter = new CollectionAdapter<IgcSeriesComponent, Series>(\r\n            this.contentSeries,\r\n            this.i.series,\r\n            this.actualSeries,\r\n            (c) => c.i,\r\n            (i) => {\r\n                (<any>i).owner = this;\r\n                (<any>i)._provideRenderer(this._dataSource);\r\n                i.provideData(this._dataSource);\r\n                if (this.parentElement) {\r\n                    (i as any)._styling(this, this, this);\r\n                }\r\n                //i.bindAxes(this.axes);\r\n                this._ensureDefaultTooltip(i);\r\n                this._ensureTooltipCreated(i);\r\n            },\r\n            (i) => { (<any>i)._provideRenderer(null); i.provideData(null); }\r\n        );\r\n\r\n        chart.provideContainer(this._renderer);\r\n\r\n        let mut = new MutationObserver((list) => {\r\n            for (var mutation of list) {\r\n                if (mutation.type == 'childList') {\r\n                    this.updateContentChildren();\r\n                }\r\n            }\r\n        });\r\n        mut.observe(this, {\r\n            childList: true\r\n        });\r\n\r\n        this._renderer.addSizeWatcher(() => {\r\n            this.notifyContainerResized();\r\n        });\r\n    }\r\n\r\n    destroy() {\r\n        this._chart.destroy();\r\n        this._wrapper.destroy();\r\n    }\r\n\r\n\tprivate _wrapper: WebComponentRenderer;\r\n\r\n\tprotected createImplementation() {\r\n\t\treturn new XamGeographicMap();\r\n\t}\r\n\r\n\tprivate _chart: any;\r\n\r\n    private _dataSource: any = null;\r\n    set dataSource(value: any) {\r\n\t\tthis._dataSource = value;\r\n\t\tthis.bindData();\r\n\t}\r\n\tget dataSource(): any {\r\n\t\treturn this._dataSource;\r\n\t}\r\n\r\n\tbindData() {\r\n\t\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tcurrSeries[i].provideData(this._dataSource);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n\r\n    private updateContentChildren() {\r\n        this.contentSeries.length = 0;\r\n        for (var i = 0; i < this.children.length; i++) {\r\n            if (this.children[i] instanceof IgcSeriesComponent) {\r\n                this.contentSeries.push(<IgcSeriesComponent>this.children[i]);\r\n            }\r\n        }\r\n        \r\n        if (this._seriesAdapter != null) {\r\n            this._seriesAdapter.notifyContentChanged();\r\n        }\r\n    }\r\n\r\n    private _seriesAdapter: CollectionAdapter<IgcSeriesComponent, Series> = null;\r\n\r\n    private _disconnected = false;\r\n    disconnectedCallback() {\r\n        this._disconnected = true;\r\n        if (this.i) {\r\n            this.i.onDetachedFromUI();\r\n        }\r\n    }\r\n\r\n    connectedCallback() {\r\n        if (this._disconnected) {\r\n            this._disconnected = false;\r\n            if (this.i) {\r\n                this.i.onAttachedToUI();\r\n            }\r\n            return;\r\n        }\r\n        this.classList.add(\"igc-geographic-map\");\r\n        this.classList.add(\"ig-geographic-map\");\r\n\r\n        this.appendChild(this._renderer.rootWrapper.getNativeElement());\r\n        this._attached = true;\r\n        this.style.display = \"block\";\r\n        this.style.height = this._height;\r\n        this.style.width = this._width;\r\n        this._flushQueuedAttributes();\r\n        // supports themes or custom properties set in CSS \r\n        this._styling(this, this);\r\n        for (let i = 0; i < this.actualSeries.length; i++) {\r\n            let s = this.actualSeries[i];\r\n            (s as any)._styling(this, this, this);\r\n        }\r\n\r\n        this.updateContentChildren();\r\n        this.afterContentInit();\r\n    }\r\n\r\n\tafterContentInit() {\r\n\t\tif (TypeRegistrar.isRegistered(\"IgcDataChartDefaultTooltipsComponent\")) {\r\n\t\t\tlet cr = TypeRegistrar.create(\"IgcDataChartDefaultTooltipsComponent\");\r\n\t\t\t//let cr = cf.create(this._injector);\r\n            this._defaultTooltips = cr;\r\n\t\t\t(<any>cr).onContentReady = () => {\r\n\t\t\t\tthis._onDefaultTooltipsReady(cr);\r\n\t\t\t};\r\n\t\t\t//this._container.appendChild(cr.location.nativeElement);\r\n\t\t}\r\n\r\n\t\t\t\r\n\t\t\r\n\t\tthis.i.notifyContainerResized();\r\n\t}\r\n\r\n    private _ensureTooltipCreated(series: any) {\r\n        (<any>series)._ensureTooltipCreated(\r\n\t\t\t() => this.createTooltip(),\r\n\t\t\t(ele) => {\r\n\t\t\t\tlet wrapper = new WebComponentWrapper(\r\n\t\t\t\t\tele,\r\n\t\t\t\t\tthis._renderer\r\n\t\t\t\t);\r\n\t\t\t\t(<any>wrapper).updateToolTip = (<any>ele).updateToolTip;\r\n\t\t\t\t(<any>wrapper).hideToolTip = (<any>ele).hideToolTip;\r\n\t\t\t\treturn wrapper;\r\n\t\t\t});\r\n    }\r\n\r\n    private _defaultTooltips: any = null;\r\n\tprivate _ensureDefaultTooltip(series: IgcSeriesComponent) {\r\n        if (this._defaultTooltips == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\r\n\t}\r\n\r\n\tprivate _onDefaultTooltipsReady(cr: any) {\r\n\t\tif (this.actualSeries && this.actualSeries.length > 0) {\r\n\t\t\tvar currSeries = this.actualSeries;\r\n\t\t\tfor (var i = 0; i < currSeries.length; i++) {\r\n\t\t\t\tif (currSeries[i].showDefaultTooltip) {\r\n\t\t\t\t\tthis._ensureDefaultTooltip(currSeries[i])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n    private createTooltip(): Element {\r\n\t\tif (!TypeRegistrar.isRegistered(\"IgcTooltipContainerComponent\")) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\tlet cr = TypeRegistrar.create(\"IgcTooltipContainerComponent\");\r\n\t\tlet ele: Element = cr;\r\n\t\tlet self = this;\r\n\r\n\t\t(<any>ele).updateToolTip = function (c, isSubContent?: boolean) {\r\n            if (c.externalObject) {\r\n                c = c.externalObject;\r\n            } else {\r\n                let ext = new IgcDataContext();\r\n                (<any>ext)._implementation = c;\r\n                c = ext;\r\n            }\r\n\r\n            if (!isSubContent) {\r\n                if (ele.parentElement != self._container.getNativeElement()) {\r\n                    if (ele.parentElement != null) {\r\n                        ele.parentElement.removeChild(ele);\r\n                    }\r\n\r\n                    self._container.getNativeElement().appendChild(ele);\r\n                }\r\n            } else {\r\n                c.isSubContent = true;\r\n            }\r\n\t\t\t(<any>cr).context = c;\r\n\t\t\t(<any>ele).style.display = \"block\";\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t(<any>ele).hideToolTip = function () {\r\n\t\t\t(<any>ele).style.display = \"none\"\r\n\t\t};\r\n\t\t(<any>ele).style.display = \"none\"\r\n\r\n\t\treturn cr;\r\n    }\r\n\r\n    /**\r\n\t * An imagery to display behind all series, inside the viewport of the IgxGeographicMapComponent control.\r\n\t*/\r\n    get backgroundContent(): IgcGeographicMapImagery {\r\n        if (this.i.backgroundContent != null) {\r\n            return (<any>this.i.backgroundContent).externalObject;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n    set backgroundContent(v: IgcGeographicMapImagery) {\r\n        if (typeof (v) == \"string\" && v == \"empty\") {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n            return;\r\n        }\r\n        if (v != undefined && v != null) {\r\n            this.i.backgroundContent = v.i;\r\n        } else {\r\n            this.i.backgroundContent = null;\r\n            this._a(\"backgroundContent\", \"empty\");\r\n        }\r\n    }\r\n\r\n    \t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : XamGeographicMap {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n    \r\n\r\n    \t\r\n\t                private static _observedAttributesIgcGeographicMapComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapComponent._observedAttributesIgcGeographicMapComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    \t\r\n\t                public static htmlTagName: string = \"igc-geographic-map\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicMapComponent._isElementRegistered) {\r\n\t                        IgcGeographicMapComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicMapComponent.htmlTagName,\r\n\t                            IgcGeographicMapComponent);\r\n\t                    }\r\n\t            }\r\n\r\n\t\t/**\r\n\t * Gets or sets zoomability of the current control\r\n\t*/\r\n\tget zoomable() : boolean {\r\n\t\treturn (this.i.x1 as boolean);\r\n\t}\r\n\tset zoomable(v: boolean) {\r\n\t\tthis.i.x1 = ensureBool(v);\r\n\t                                        this._a(\"zoomable\", this.i.x1);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the behavior to use during resize.\r\n\t*/\r\n\tget resizeBehavior() : MapResizeBehavior {\r\n\t\treturn this.i.xu;\r\n\t}\r\n\tset resizeBehavior(v: MapResizeBehavior) {\r\n\t\tthis.i.xu = ensureEnum<MapResizeBehavior>(MapResizeBehavior_$type, v);\r\n\t                                        this._a(\"resizeBehavior\", enumToString<MapResizeBehavior>(MapResizeBehavior_$type, this.i.xu));\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.xy as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.xy = ensureBool(v);\r\n\t                                        this._a(\"isHorizontalWrappingEnabled\", this.i.xy);\r\n\t}\r\n\t/**\r\n\t * Gets or sets if the map should horizontally wrap.\r\n\t*/\r\n\tget backgroundTilingMode() : MapBackgroundTilingMode {\r\n\t\treturn this.i.xq;\r\n\t}\r\n\tset backgroundTilingMode(v: MapBackgroundTilingMode) {\r\n\t\tthis.i.xq = ensureEnum<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, v);\r\n\t                                        this._a(\"backgroundTilingMode\", enumToString<MapBackgroundTilingMode>(MapBackgroundTilingMode_$type, this.i.xq));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether to use the uncoerced world rect to constrain the zoom bounds.\r\n\t*/\r\n\tget useWorldRectForZoomBounds() : boolean {\r\n\t\treturn (this.i.x0 as boolean);\r\n\t}\r\n\tset useWorldRectForZoomBounds(v: boolean) {\r\n\t\tthis.i.x0 = ensureBool(v);\r\n\t                                        this._a(\"useWorldRectForZoomBounds\", this.i.x0);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether skip resetting the zoom when the world rect changes.\r\n\t*/\r\n\tget suppressZoomResetOnWorldRectChange() : boolean {\r\n\t\treturn (this.i.xz as boolean);\r\n\t}\r\n\tset suppressZoomResetOnWorldRectChange(v: boolean) {\r\n\t\tthis.i.xz = ensureBool(v);\r\n\t                                        this._a(\"suppressZoomResetOnWorldRectChange\", this.i.xz);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the world bounding rectangle.\r\n\t*/\r\n\tget worldRect() : IgRect {\r\n\t\treturn fromRect(this.i.zw);\r\n\t}\r\n\tset worldRect(v: IgRect) {\r\n\t\tthis.i.zw = toRect(v);\r\n\t                                        this._a(\"worldRect\", rectToString(this.i.zw));\r\n\t}\r\n\t/**\r\n\t * Gets the actual value of the WorldRect.\r\n\t*/\r\n\tget actualWorldRect() : IgRect {\r\n\t\treturn fromRect(this.i.zk);\r\n\t}\r\n\tset actualWorldRect(v: IgRect) {\r\n\t\tthis.i.zk = toRect(v);\r\n\t                                        this._a(\"actualWorldRect\", rectToString(this.i.zk));\r\n\t}\r\n\t/**\r\n\t * The X-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget xAxis() : IgcNumericXAxisComponent {\r\n\t                                        const r = this.i.xj;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericXAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset xAxis(v: IgcNumericXAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xj = null : this.i.xj = v.i;\r\n\t}\r\n\t/**\r\n\t * The Y-axis for this IgxGeographicMap.Component\r\n\t * Under normal circumstances, this property should not be set in application code.  By default, it will be set to a numeric axis with a spherical mercator scaler.\r\n\t*/\r\n\tget yAxis() : IgcNumericYAxisComponent {\r\n\t                                        const r = this.i.xl;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcNumericYAxisComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset yAxis(v: IgcNumericYAxisComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xl = null : this.i.xl = v.i;\r\n\t}\r\n\t/**\r\n\t * Indicates if this SeriesViewer is a map.\r\n\t*/\r\n\tget isMap() : boolean {\r\n\t\treturn (this.i.fh as boolean);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the WindowRect property.\r\n\t*/\r\n\tget windowScale() : number {\r\n\t\treturn (this.i.x6 as number);\r\n\t}\r\n\tset windowScale(v: number) {\r\n\t\tthis.i.x6 = +v;\r\n\t                                        this._a(\"windowScale\", this.i.x6);\r\n\t}\r\n\t/**\r\n\t * A number between 0 and 1 determining the scale of the horizontal/vertical zoom.\r\n\t * This property is effectively a shortcut to the Width/Height of the ActualWindowRect property.\r\n\t*/\r\n\tget actualWindowScale() : number {\r\n\t\treturn (this.i.x5 as number);\r\n\t}\r\n\tset actualWindowScale(v: number) {\r\n\t\tthis.i.x5 = +v;\r\n\t                                        this._a(\"actualWindowScale\", this.i.x5);\r\n\t}\r\n\t/**\r\n\t * Gets whether or not the control is ready for zooming\r\n\t*/\r\n\tget zoomIsReady() : boolean {\r\n\t\treturn (this.i.x2 as boolean);\r\n\t}\r\n\r\n    \t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.backgroundContent && (this.backgroundContent as any).name && (this.backgroundContent as any).name == name) { return this.backgroundContent; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\r\n    \t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.xAxis && (this.xAxis as any)._styling) {\r\n\t    (this.xAxis as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.yAxis && (this.yAxis as any)._styling) {\r\n\t    (this.yAxis as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\t/**\r\n\t * Gets current world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic getCurrentActualWorldRect() : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.zo();\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomRectFromGeoRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomRectFromGeoRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Updates zoom window using window coordinates\r\n\t\r\n\t*/\r\n\tpublic updateZoomWindow(zoomWindow: IgRect) {\r\n\t\tthis.i.y0(toRect(zoomWindow));\r\n\t}\r\n\t/**\r\n\t * Updates world rect in geographic coordinates\r\n\t\r\n\t*/\r\n\tpublic updateWorldRect(worldRect: IgRect) {\r\n\t\tthis.i.yz(toRect(worldRect));\r\n\t}\r\n\t/**\r\n\t * Given the current plot area of the control and a geographic region, get the WindowRect that would encompass that geographic region.\r\n\t\r\n\t* @param geographic  * The geographic area.\r\n\t*/\r\n\tpublic getZoomFromGeographicRect(geographic: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicRect(toRect(geographic));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic convertGeographicToZoom(geographic: IgRect, extraPixelPadding: number) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.zl(toRect(geographic), extraPixelPadding);\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getZoomFromGeographicPoints(northWest: IgPoint, southEast: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.getZoomFromGeographicPoints(toPoint(northWest), toPoint(southEast));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Given a WindowRect and the current plot area, get the geographic region represented by that WindowRect.\r\n\t\r\n\t* @param windowRect  * The zoom area.\r\n\t*/\r\n\tpublic getGeographicFromZoom(windowRect: IgRect) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.zq(toRect(windowRect));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a pixel-based coordinate to a geographic coordinate.\r\n\t\r\n\t* @param pixelCoordinate  * A pixel-based coordinate\r\n\t*/\r\n\tpublic getGeographicPoint(pixelCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.zc(toPoint(pixelCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getPixelPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.zd(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Convert a geographic coordinate to a pixel-based coordinate.\r\n\t\r\n\t* @param geographicCoordinate  * A geographic coordinate\r\n\t*/\r\n\tpublic getWindowPoint(geographicCoordinate: IgPoint) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.ze(toPoint(geographicCoordinate));\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * Removes all cached tile images from the map imagery assigned to the map's background content.\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.yn();\r\n\t}\r\n\t/**\r\n\t * Notifies the chart that the CSS styles in effect have been updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.yv();\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for horizontal dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleHorizontal() : number {\r\n\t                        \r\n\t\tlet iv = this.i.hz();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets actual window scale for vertical dimension of the control\r\n\t\r\n\t*/\r\n\tpublic getActualWindowScaleVertical() : number {\r\n\t                        \r\n\t\tlet iv = this.i.h0();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Calls for a deferred refresh to the GeographicMap's background.\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n\t/**\r\n\t * Returns the chart visuals expressed as a ChartVisualData object.\r\n\t\r\n\t*/\r\n\tpublic exportVisualData() : any {\r\n\t                        \r\n\t\tlet iv = this.i.x9();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Zoom in to the geographic region specified, when possible (may need to wait for map to be initialized).\r\n\t\r\n\t* @param geographic  * The geographic region to zoom to.\r\n\t*/\r\n\tpublic zoomToGeographic(geographic: IgRect) {\r\n\t\tthis.i.y2(toRect(geographic));\r\n\t}\r\n\r\n    \t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBingMapsMapImageryModule } from './igc-bing-maps-map-imagery-module';\r\nimport { IgcOpenStreetMapImageryModule } from './igc-open-street-map-imagery-module';\r\nimport { IgcCustomMapImageryModule } from './igc-custom-map-imagery-module';\r\nimport { IgcArcGISOnlineMapImageryModule } from './igc-arc-gis-online-map-imagery-module';\r\nimport { IgcGeographicMapComponent } from './igc-geographic-map-component';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\n\r\nexport class IgcGeographicMapCoreModule {\r\n    public static register() {\r\n                IgcBingMapsMapImageryModule.register();\r\n        IgcOpenStreetMapImageryModule.register();\r\n        IgcCustomMapImageryModule.register();\r\n        IgcArcGISOnlineMapImageryModule.register();\r\n        IgcGeographicMapComponent.register();\r\n        TypeRegistrar.registerCons('IgcGeographicMapComponent', IgcGeographicMapComponent);\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImagesChangedEventArgs as ImagesChangedEventArgs_internal } from \"./ImagesChangedEventArgs\";\r\n\r\nexport class IgcImagesChangedEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImagesChangedEventArgs_internal\r\n{\r\n\treturn new ImagesChangedEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImagesChangedEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapComponent } from \"./igc-geographic-map-component\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcImagesChangedEventArgs } from \"./igc-images-changed-event-args\";\r\nimport { IgcCancellingMultiScaleImageEventArgs } from \"igniteui-core/igc-cancelling-multi-scale-image-event-args\";\r\nimport { IgcDownloadingMultiScaleImageEventArgs } from \"igniteui-core/igc-downloading-multi-scale-image-event-args\";\r\nimport { GeographicMapImagery as GeographicMapImagery_internal } from \"./GeographicMapImagery\";\r\nimport { TypeRegistrar } from \"igniteui-core/type\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { fromRect, toRect, ensureBool } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Control class used for displaying multi-scale TileSource imagery.  Designed to be used for background imagery in the IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : GeographicMapImagery_internal\r\n{\r\n\treturn null;\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : GeographicMapImagery_internal {\r\n\treturn this._implementation;\r\n\t}/**\r\n\t                             * @hidden \r\n\t                             */\r\n\tstatic _createFromInternal(internal: any) : IgcGeographicMapImagery {\r\n\t    if (!internal) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                if (!internal.$type) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                let name = internal.$type.name;\r\n\t                                let externalName = \"Igc\" + name + \"Component\";\r\n\t                                if (!TypeRegistrar.isRegistered(externalName)) {\r\n\t                                    return null;\r\n\t                                }\r\n\t                                return TypeRegistrar.create(externalName);\r\n\t                            }\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\t/**\r\n\t * The deferral handler to use for deferred refreshes.\r\n\t*/\r\n\tget deferralHandler() : IMapRenderDeferralHandler {\r\n\t\treturn this.i.deferralHandler as IMapRenderDeferralHandler;\r\n\t}\r\n\tset deferralHandler(v: IMapRenderDeferralHandler) {\r\n\t                                        this.i.deferralHandler = v;\r\n\t}\r\n\t/**\r\n\t * A rectangle representing the portion of the map imagery currently in view.\r\n\t * A rectangle at X=0, Y=0 with a Height and Width of 1 implies the entire plotting area is in view.  A Height and Width of .5 would imply that the view is halfway zoomed in.\r\n\t*/\r\n\tget windowRect() : IgRect {\r\n\t\treturn fromRect(this.i.windowRect);\r\n\t}\r\n\tset windowRect(v: IgRect) {\r\n\t\tthis.i.windowRect = toRect(v);\r\n\t}\r\n\t/**\r\n\t * The IgxGeographicMapComponent which is hosting this GeographicMapImagery control.\r\n\t*/\r\n\tget geographicMap() : IgcGeographicMapComponent {\r\n\t                                        const r = this.i.geographicMap;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset geographicMap(v: IgcGeographicMapComponent) {\r\n\t\tv == null ? this.i.geographicMap = null : this.i.geographicMap = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the referer sent in the headers of the tile request.\r\n\t*/\r\n\tget referer() : string {\r\n\t\treturn (this.i.referer as string);\r\n\t}\r\n\tset referer(v: string) {\r\n\t\tthis.i.referer = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets if horizontal wrapping is enabled for the imagery.\r\n\t*/\r\n\tget isHorizontalWrappingEnabled() : boolean {\r\n\t\treturn (this.i.isHorizontalWrappingEnabled as boolean);\r\n\t}\r\n\tset isHorizontalWrappingEnabled(v: boolean) {\r\n\t\tthis.i.isHorizontalWrappingEnabled = ensureBool(v);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the UserAgent sent in the headers of the tile request.\r\n\t*/\r\n\tget userAgent() : string {\r\n\t\treturn (this.i.userAgent as string);\r\n\t}\r\n\tset userAgent(v: string) {\r\n\t\tthis.i.userAgent = v;\r\n\t}\r\n\tget opacity() : number {\r\n\t\treturn (this.i.opacity as number);\r\n\t}\r\n\tset opacity(v: number) {\r\n\t\tthis.i.opacity = +v;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    if ((this as any).findEphemera) {\r\n\t        if (name && name.indexOf(\"@@e:\") == 0) {\r\n\t            return (this as any).findEphemera(name);\r\n\t        }\r\n\t    }\r\n\t\r\n\tif (this.geographicMap && (this.geographicMap as any).name && (this.geographicMap as any).name == name) { return this.geographicMap; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.clearTileCache();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when the image tiles have been downloaded.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicMapImagery, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _imagesChanged: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void = null;\r\n\t    private _imagesChanged_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when tile images have changed.\r\n\t*/\r\n\t\r\n\tpublic get imagesChanged(): (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void {\r\n\treturn this._imagesChanged;\r\n\t}\r\n\t    public set imagesChanged(ev: (s: IgcGeographicMapImagery, e: IgcImagesChangedEventArgs) => void) {\r\n\t        if (this._imagesChanged_wrapped !== null) {\r\n\t            this.i.imagesChanged = delegateRemove(this.i.imagesChanged, this._imagesChanged_wrapped);\r\n\t            this._imagesChanged_wrapped = null;\r\n\t            this._imagesChanged = null;\r\n\t        }\r\n\t\r\n\t        this._imagesChanged = ev;\r\n\t        this._imagesChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImagesChangedEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImagesChanged) {\r\n\t                        (this as any).beforeImagesChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imagesChanged) {\r\n\t    this._imagesChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imagesChanged = delegateCombine(this.i.imagesChanged, this._imagesChanged_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _cancellingImage: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void = null;\r\n\t    private _cancellingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get cancellingImage(): (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void {\r\n\treturn this._cancellingImage;\r\n\t}\r\n\t    public set cancellingImage(ev: (s: IgcGeographicMapImagery, e: IgcCancellingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._cancellingImage_wrapped !== null) {\r\n\t            this.i.cancellingImage = delegateRemove(this.i.cancellingImage, this._cancellingImage_wrapped);\r\n\t            this._cancellingImage_wrapped = null;\r\n\t            this._cancellingImage = null;\r\n\t        }\r\n\t\r\n\t        this._cancellingImage = ev;\r\n\t        this._cancellingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcCancellingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeCancellingImage) {\r\n\t                        (this as any).beforeCancellingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._cancellingImage) {\r\n\t    this._cancellingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.cancellingImage = delegateCombine(this.i.cancellingImage, this._cancellingImage_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _downloadingImage: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void = null;\r\n\t    private _downloadingImage_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when an image is being downloaded.\r\n\t*/\r\n\t\r\n\tpublic get downloadingImage(): (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void {\r\n\treturn this._downloadingImage;\r\n\t}\r\n\t    public set downloadingImage(ev: (s: IgcGeographicMapImagery, e: IgcDownloadingMultiScaleImageEventArgs) => void) {\r\n\t        if (this._downloadingImage_wrapped !== null) {\r\n\t            this.i.downloadingImage = delegateRemove(this.i.downloadingImage, this._downloadingImage_wrapped);\r\n\t            this._downloadingImage_wrapped = null;\r\n\t            this._downloadingImage = null;\r\n\t        }\r\n\t\r\n\t        this._downloadingImage = ev;\r\n\t        this._downloadingImage_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcDownloadingMultiScaleImageEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeDownloadingImage) {\r\n\t                        (this as any).beforeDownloadingImage(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._downloadingImage) {\r\n\t    this._downloadingImage(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.downloadingImage = delegateCombine(this.i.downloadingImage, this._downloadingImage_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcGeographicShapeSeriesModule } from './igc-geographic-shape-series-module';\r\nimport { IgcGeographicPolylineSeriesModule } from './igc-geographic-polyline-series-module';\r\nimport { IgcTileGeneratorMapImageryModule } from './igc-tile-generator-map-imagery-module';\r\nimport { IgcHeatTileGeneratorModule } from 'igniteui-core/igc-heat-tile-generator-module';\r\nimport { IgcGeographicTileSeriesModule } from './igc-geographic-tile-series-module';\r\nimport { IgcSizeScaleModule } from 'igniteui-charts/igc-size-scale-module';\r\nimport { IgcValueBrushScaleModule } from 'igniteui-charts/igc-value-brush-scale-module';\r\nimport { IgcCustomPaletteColorScaleModule } from 'igniteui-charts/igc-custom-palette-color-scale-module';\r\nimport { IgcGeographicProportionalSymbolSeriesModule } from './igc-geographic-proportional-symbol-series-module';\r\nimport { IgcGeographicSymbolSeriesModule } from './igc-geographic-symbol-series-module';\r\nimport { IgcGeographicScatterAreaSeriesModule } from './igc-geographic-scatter-area-series-module';\r\nimport { IgcGeographicHighDensityScatterSeriesModule } from './igc-geographic-high-density-scatter-series-module';\r\nimport { IgcGeographicContourLineSeriesModule } from './igc-geographic-contour-line-series-module';\r\nimport { IgcGeographicMapCoreModule } from './igc-geographic-map-core-module';\r\nimport { IgcShapeDataSourceModule } from 'igniteui-core/igc-shape-data-source-module';\r\n\r\n\r\nexport class IgcGeographicMapModule {\r\n    public static register() {\r\n                IgcGeographicShapeSeriesModule.register();\r\n        IgcGeographicPolylineSeriesModule.register();\r\n        IgcTileGeneratorMapImageryModule.register();\r\n        IgcHeatTileGeneratorModule.register();\r\n        IgcGeographicTileSeriesModule.register();\r\n        IgcSizeScaleModule.register();\r\n        IgcValueBrushScaleModule.register();\r\n        IgcCustomPaletteColorScaleModule.register();\r\n        IgcGeographicProportionalSymbolSeriesModule.register();\r\n        IgcGeographicSymbolSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesModule.register();\r\n        IgcGeographicHighDensityScatterSeriesModule.register();\r\n        IgcGeographicContourLineSeriesModule.register();\r\n        IgcGeographicMapCoreModule.register();\r\n        IgcShapeDataSourceModule.register();\r\n\r\n    }\r\n}","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, toPoint, fromPoint, fromRect } from \"igniteui-core/componentUtil\";\r\n\r\n/**\r\n * Base class for hosting chart series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMapSeriesHostComponent extends IgcSeriesComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMapSeriesHost {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMapSeriesHostComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMapSeriesHostComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMapSeriesHostComponent._observedAttributesIgcGeographicMapSeriesHostComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Checks if this control is geographic coordinate system\r\n\t*/\r\n\tget isGeographic() : boolean {\r\n\t\treturn (this.i.fd as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets whether this series supports markers\r\n\t*/\r\n\tget hasMarkers() : boolean {\r\n\t\treturn (this.i.hasMarkers as boolean);\r\n\t}\r\n\t/**\r\n\t * The minimum scale at which this series becomes visible.\r\n\t * The default value for this property is 1.0, which means the series will always be visible.  At a VisibleFromScale setting of 0.0, the series will never be visible.  At a VisibleFromScale setting of 0.5, the series will be visible as long as the map is zoomed in to at least 200%.\r\n\t*/\r\n\tget visibleFromScale() : number {\r\n\t\treturn (this.i.w7 as number);\r\n\t}\r\n\tset visibleFromScale(v: number) {\r\n\t\tthis.i.w7 = +v;\r\n\t                                        this._a(\"visibleFromScale\", this.i.w7);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the coercion methods to use when loading data from data sources.\r\n\t * Should be specified before setting any member paths, if being used. Setting it later \r\n\t * will not cause data to be reimported into the chart.\r\n\t*/\r\n\tget coercionMethods() : any {\r\n\t\treturn this.i.coercionMethods as any;\r\n\t}\r\n\tset coercionMethods(v: any) {\r\n\t                                        this.i.coercionMethods = v;\r\n\t}\r\n\t/**\r\n\t * Called to notify about changes to indexed-based properties, e.g. Brushes, Outlines, MarkerBrushes, MarkerOutlines and refresh series\r\n\t\r\n\t*/\r\n\tpublic notifyIndexedPropertiesChanged() {\r\n\t\tthis.i.qi();\r\n\t}\r\n\tpublic getItemValue(item: any, memberPathName: string) : any {\r\n\t                        \r\n\t\tlet iv = this.i.kr(item, memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the value of a requested member path from the series.\r\n\t\r\n\t* @param memberPathName  * The property name of a valid member path for the series\r\n\t*/\r\n\tpublic getMemberPathValue(memberPathName: string) : string {\r\n\t                        \r\n\t\tlet iv = this.i.mf(memberPathName);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Gets the item that is the best match for the specified world coordinates.\r\n\t\r\n\t* @param world  * The world coordinates to use.\r\n\t*/\r\n\tpublic getItem(world: IgPoint) : any {\r\n\t                        \r\n\t\tlet iv = this.i.ko(toPoint(world));\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getPreviousOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.kb(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getNextOrExactIndex(world: IgPoint, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.j9(toPoint(world), skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i6(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.wh(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinate for which to get a value bounding box for\r\n\t*/\r\n\tpublic getSeriesValueBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.ws(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\t/**\r\n\t * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\r\n\t\r\n\t* @param world  * The world coordinates for which to get a value marker bounding box for\r\n\t*/\r\n\tpublic getSeriesValueMarkerBoundingBox(world: IgPoint) : IgRect {\r\n\t                        \r\n\t\tlet iv = this.i.wu(toPoint(world));\r\n\t                        return fromRect(iv);\r\n\t}\r\n\tpublic getSeriesHighValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i2(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesHighValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.wd(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesLowValue(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i4(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\tpublic getSeriesLowValuePosition(world: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.wf(toPoint(world), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValuePositionFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : IgPoint {\r\n\t                        \r\n\t\tlet iv = this.i.wi(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return fromPoint(iv);\r\n\t}\r\n\tpublic getSeriesValueFromSeriesPixel(mouse: IgPoint, useInterpolation: boolean, skipUnknowns: boolean) : number {\r\n\t                        \r\n\t\tlet iv = this.i.i7(toPoint(mouse), useInterpolation, skipUnknowns);\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\r\n\t\r\n\t*/\r\n\tpublic getItemSpan() : number {\r\n\t                        \r\n\t\tlet iv = this.i.ix();\r\n\t                        return (iv);\r\n\t}\r\n\t/**\r\n\t * Renders the series.\r\n\t\r\n\t* @param animate  * True if the change should be animated.\r\n\t*/\r\n\tpublic renderSeries(animate: boolean) {\r\n\t\tthis.i.ru(animate);\r\n\t}\r\n\t/**\r\n\t * Called when this series' Style is updated.\r\n\t\r\n\t*/\r\n\tpublic styleUpdated() {\r\n\t\tthis.i.sg();\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Base class for creating marker series in a IgxGeographicMap.Component\r\n*/\r\nexport abstract class IgcGeographicMarkerSeriesComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicMarkerSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicMarkerSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicMarkerSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicMarkerSeriesComponent._observedAttributesIgcGeographicMarkerSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.xf;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.xf = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.xf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.xg as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.xg = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.xg);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.xe;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.xe = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.xe));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.xd;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.xd = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.xd));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.xv as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.xv = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.x9);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.x9 = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.x9));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.ya);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.ya = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.ya));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the maximum number of markerItems displayed by the current series.\r\n\t * If more than the specified number of markerItems are visible, the series will automatically\r\n\t * choose a representative set.\r\n\t*/\r\n\tget maximumMarkers() : number {\r\n\t\treturn (this.i.xh as number);\r\n\t}\r\n\tset maximumMarkers(v: number) {\r\n\t\tthis.i.xh = +v;\r\n\t                                        this._a(\"maximumMarkers\", this.i.xh);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.xu as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.xu = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.x7);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.x7 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.x7));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.x8);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.x8 = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.x8));\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolylineSeries } from \"igniteui-charts/ScatterPolylineSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, markDep } from \"igniteui-core/type\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicPolylineSeriesView, 'GeographicPolylineSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicPolylineSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cy = a;\r\n\t}\r\n\tprotected cy: GeographicPolylineSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t\tthis.cy.jq = Defaults.aa;\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\t(<ScatterPolylineSeries>this.cy.w5).aad = this.cy.yk;\r\n\t\t(<ScatterPolylineSeries>this.cy.w5).aai = this.cy.ys;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<ScatterPolylineSeries>this.cy.w5).aad = this.cy.yk;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<ScatterPolylineSeries>this.cy.w5).aai = this.cy.ys;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicPolylineSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicPolylineSeries, 'GeographicPolylineSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicPolylineSeries();\r\n\t}\r\n\tprotected get_fs(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicPolylineSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicPolylineSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.yl = <GeographicPolylineSeriesView>a;\r\n\t}\r\n\tyl: GeographicPolylineSeriesView;\r\n\tyk: StyleSelector;\r\n\tys: Style;\r\n\tprotected w4(): Series {\r\n\t\tlet a = new ScatterPolylineSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.yp));\r\n\t\treturn a;\r\n\t}\r\n\tprivate yp(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicPolylineSeries.$$p[1]:\r\n\t\t\tthis.yl.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicPolylineSeries.$$p[0]:\r\n\t\t\tthis.yl.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicPolylineSeries, 'raisePropertyChanged', [ 'ShapeStyle:ys:yq', [ (<any>Style).$, null ], 'ShapeStyleSelector:yk:yr', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicPolylineSeries } from \"./GeographicPolylineSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\n\r\n/**\r\n * Series class used for displaying multiple polylines, in a geographic context, for datasources which contain multiple lists of points.\r\n*/\r\nexport class IgcGeographicPolylineSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicPolylineSeries\r\n{\r\n\treturn new GeographicPolylineSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicPolylineSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicPolylineSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicPolylineSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicPolylineSeriesComponent._observedAttributesIgcGeographicPolylineSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-polyline-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicPolylineSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicPolylineSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicPolylineSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicPolylineSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polyline shape.\r\n\t*/\r\n\tget isPolyline() : boolean {\r\n\t\treturn (this.i.fs as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.ys ? (this.i.ys.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ys.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.ys ? (this.i.ys.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.ys.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.ys ? (this.i.ys.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ys.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.ys.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.ys ? (this.i.ys.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.ys.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.ys.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.ys) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.ys = new Style();\r\n\t\r\n\t                                }\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicPolylineSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolylineSeriesModule } from 'igniteui-charts/igc-scatter-polyline-series-module';\r\n\r\nimport { IgcGeographicPolylineSeriesComponent } from './igc-geographic-polyline-series-component';\r\nimport { GeographicPolylineSeries } from './GeographicPolylineSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicPolylineSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolylineSeriesModule.register();\r\n        IgcGeographicPolylineSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicPolylineSeriesComponent\", IgcGeographicPolylineSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicPolylineSeries\", (<any>GeographicPolylineSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { BubbleSeries } from \"igniteui-charts/BubbleSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, Boolean_$type, Number_$type, enumGetBox, EnumUtil, typeGetValue, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { SizeScale } from \"igniteui-charts/SizeScale\";\r\nimport { BrushScale } from \"igniteui-charts/BrushScale\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeriesView, 'GeographicProportionalSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicProportionalSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cu = a;\r\n\t}\r\n\tprivate cu: GeographicProportionalSymbolSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\tlet a = <BubbleSeries>this.cu.w5;\r\n\t\ta.aay = this.cu.y4;\r\n\t\ta.aa6 = this.cu.y2;\r\n\t\ta.xf = this.cu.xf;\r\n\t\ta.x7 = this.cu.xv;\r\n\t\ta.xo = this.cu.xg;\r\n\t\ta.ac8 = this.cu.yo;\r\n\t\ta.ady = this.cu.y9;\r\n\t\ta.acx = this.cu.yg;\r\n\t\ta.ado = this.cu.y0;\r\n\t\ta.adj = this.cu.ys;\r\n\t\ta.acu = this.cu.yd;\r\n\t\ta.ac6 = this.cu.yk;\r\n\t\ta.ac7 = this.cu.yn;\r\n\t\ta.add = this.cu.yq;\r\n\t\ta.adc = this.cu.yp;\r\n\t}\r\n\tc3(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).aay = this.cu.y4;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).aa6 = this.cu.y2;\r\n\t}\r\n\tc8(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).xf = this.cu.xf;\r\n\t}\r\n\tc6(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).x7 = this.cu.xv;\r\n\t}\r\n\tc7(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).xo = this.cu.xg;\r\n\t}\r\n\tc9(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).aae = this.cu.xh;\r\n\t}\r\n\tdb(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).xAxis = (<XamGeographicMap>this.cu.dc).xj;\r\n\t}\r\n\tdc(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).yAxis = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tda(): void {\r\n\t\tlet a = <BubbleSeries>this.cu.w5;\r\n\t\tif (this.cu.dc == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.cu.dc).xj;\r\n\t\ta.yAxis = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tc4(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).yo = this.cu.x9;\r\n\t}\r\n\tc5(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).yp = this.cu.ya;\r\n\t}\r\n\tdd(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).ady = this.cu.y9;\r\n\t}\r\n\tde(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).acx = this.cu.yg;\r\n\t\t(<BubbleSeries>this.cu.w5).ac8 = this.cu.yo;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).ado = this.cu.y0;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).acu = this.cu.yd;\r\n\t\t(<BubbleSeries>this.cu.w5).ac6 = this.cu.yk;\r\n\t\t(<BubbleSeries>this.cu.w5).ac7 = this.cu.yn;\r\n\t\t(<BubbleSeries>this.cu.w5).add = this.cu.yq;\r\n\t\t(<BubbleSeries>this.cu.w5).adc = this.cu.yp;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).adj = this.cu.ys;\r\n\t}\r\n\tdf(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).ac8 = this.cu.yo;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).ac6 = this.cu.yk;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).ac7 = this.cu.yn;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).add = this.cu.yq;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<BubbleSeries>this.cu.w5).adc = this.cu.yp;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicProportionalSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicProportionalSymbolSeries, 'GeographicProportionalSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicProportionalSymbolSeries();\r\n\t}\r\n\tprotected get_ek(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicProportionalSymbolSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicProportionalSymbolSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.yh = <GeographicProportionalSymbolSeriesView>a;\r\n\t}\r\n\tyh: GeographicProportionalSymbolSeriesView;\r\n\tprotected jm(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected w4(): Series {\r\n\t\treturn new BubbleSeries();\r\n\t}\r\n\tprivate ye: BubbleSeries = null;\r\n\ty2: string;\r\n\ty4: string;\r\n\ty9: string;\r\n\tyg: SizeScale;\r\n\ty0: string;\r\n\tys: string;\r\n\tyd: BrushScale;\r\n\tyk: boolean;\r\n\tyn: boolean;\r\n\tyq: number;\r\n\typ: number;\r\n\tyo: boolean;\r\n\tym: boolean;\r\n\tyl: boolean;\r\n\tprotected yj: boolean = false;\r\n\tprotected yi: boolean = false;\r\n\tprotected get_ff(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tyf: ScatterItemSearchMode;\r\n\tyr: number;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.yh.da();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[9]:\r\n\t\t\tthis.yh.c3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[8]:\r\n\t\t\tthis.yh.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.yh.db();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.yh.dc();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[13]:\r\n\t\t\tthis.yh.dd();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[14]:\r\n\t\t\tthis.yh.de();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[15]:\r\n\t\t\tthis.yh.df();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[7]:\r\n\t\t\tthis.yh.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[0]:\r\n\t\t\tthis.yh.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[1]:\r\n\t\t\tthis.yh.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[2]:\r\n\t\t\tthis.yh.cx();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[12]:\r\n\t\t\tthis.yh.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[11]:\r\n\t\t\tthis.yh.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[10]:\r\n\t\t\tthis.yh.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[4]:\r\n\t\t\t(<ScatterBase>this.w5).zu = this.ym;\r\n\t\t\tthis.yj = this.ym;\r\n\t\t\tif (this.ym) {\r\n\t\t\t\tlet e = (<ScatterBase>this.w5);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.ze));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.w5);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.ze));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.w5).zt = this.yl;\r\n\t\t\tthis.yi = this.yl;\r\n\t\t\tif (this.ym) {\r\n\t\t\t\tlet g = (<ScatterBase>this.w5);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.zd));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.w5);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.zd));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[5]:\r\n\t\t\t(<ScatterBase>this.w5).zd = this.yf;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicProportionalSymbolSeries.$$p[6]:\r\n\t\t\t(<ScatterBase>this.w5).aad = this.yr;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate ze(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate zd(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicProportionalSymbolSeries, 'raisePropertyChanged', [ 'FillMemberPath:ys:zf', [ 2 ], 'FillScale:yd:zg', [ (<any>BrushScale).$ ], 'FillScaleUseGlobalValues:yk:zh', [ 0, false ], 'IsCustomScatterMarkerStyleAllowed:yl:zi', [ 0, false ], 'IsCustomScatterStyleAllowed:ym:zj', [ 0, false ], 'ItemSearchMode:yf:zk', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:yr:zl', [ 1, 10000 ], 'LabelMemberPath:y0:zm', [ 2 ], 'LatitudeMemberPath:y2:zn', [ 2, null ], 'LongitudeMemberPath:y4:zo', [ 2, null ], 'MarkerBrushBrightness:yp:zp', [ 1, NaN ], 'MarkerOutlineBrightness:yq:zq', [ 1, NaN ], 'MarkerOutlineUsesFillScale:yn:zr', [ 0, false ], 'RadiusMemberPath:y9:zs', [ 2, null ], 'RadiusScale:yg:zt', [ (<any>SizeScale).$ ], 'RadiusScaleUseGlobalValues:yo:zu', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcSizeScaleComponent } from \"igniteui-charts/igc-size-scale-component\";\r\nimport { IgcBrushScaleComponent } from \"igniteui-charts/igc-brush-scale-component\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicProportionalSymbolSeries } from \"./GeographicProportionalSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicProportionalSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicProportionalSymbolSeries\r\n{\r\n\treturn new GeographicProportionalSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicProportionalSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicProportionalSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicProportionalSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicProportionalSymbolSeriesComponent._observedAttributesIgcGeographicProportionalSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-proportional-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicProportionalSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicProportionalSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.ek as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.y2 as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.y2 = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.y4 as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.y4 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius mapping property for the current series object.\r\n\t*/\r\n\tget radiusMemberPath() : string {\r\n\t\treturn (this.i.y9 as string);\r\n\t}\r\n\tset radiusMemberPath(v: string) {\r\n\t\tthis.i.y9 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the radius size scale for the bubbles.\r\n\t*/\r\n\tget radiusScale() : IgcSizeScaleComponent {\r\n\t                                        const r = this.i.yg;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcSizeScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset radiusScale(v: IgcSizeScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.yg = null : this.i.yg = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the Label mapping property for the current series object.\r\n\t*/\r\n\tget labelMemberPath() : string {\r\n\t\treturn (this.i.y0 as string);\r\n\t}\r\n\tset labelMemberPath(v: string) {\r\n\t\tthis.i.y0 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.ys as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.ys = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the marker brush.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.yd;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.yd = null : this.i.yd = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the FillScale uses global values of FillMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.yk as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.yk = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.yk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the marker outline should use FillScale like the marker fill does.\r\n\t * This setting applies only if the current series has a FillScale set and it overrides MarkerOutline setting.\r\n\t*/\r\n\tget markerOutlineUsesFillScale() : boolean {\r\n\t\treturn (this.i.yn as boolean);\r\n\t}\r\n\tset markerOutlineUsesFillScale(v: boolean) {\r\n\t\tthis.i.yn = ensureBool(v);\r\n\t                                        this._a(\"markerOutlineUsesFillScale\", this.i.yn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker outline. Using negative value will change marker outline to darker color and positive value will change marker outline to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest outline) and maximum value of 1 (brightest outline)\r\n\t*/\r\n\tget markerOutlineBrightness() : number {\r\n\t\treturn (this.i.yq as number);\r\n\t}\r\n\tset markerOutlineBrightness(v: number) {\r\n\t\tthis.i.yq = +v;\r\n\t                                        this._a(\"markerOutlineBrightness\", this.i.yq);\r\n\t}\r\n\t/**\r\n\t * Gets or sets brightness of the marker fill. Using negative value will change marker fill to darker color and positive value will change marker fill to brighter color \r\n\t * Note you can use any values between minimum value of -1 (darkest fill) and maximum value of 1 (brightest fill)\r\n\t*/\r\n\tget markerBrushBrightness() : number {\r\n\t\treturn (this.i.yp as number);\r\n\t}\r\n\tset markerBrushBrightness(v: number) {\r\n\t\tthis.i.yp = +v;\r\n\t                                        this._a(\"markerBrushBrightness\", this.i.yp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the whether or not the RadiusScale uses global values of RadiusMemberPath of multiple series.\r\n\t * This setting applies only if multiple series are using the same RadiusScale.\r\n\t*/\r\n\tget radiusScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.yo as boolean);\r\n\t}\r\n\tset radiusScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.yo = ensureBool(v);\r\n\t                                        this._a(\"radiusScaleUseGlobalValues\", this.i.yo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.ym as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.ym = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.ym);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.yl as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.yl = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.yl);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.yf;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.yf = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.yf));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.yr as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.yr = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.yr);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.radiusScale && (this.radiusScale as any).name && (this.radiusScale as any).name == name) { return this.radiusScale; }\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.radiusScale && (this.radiusScale as any)._styling) {\r\n\t    (this.radiusScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicProportionalSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcBubbleSeriesModule } from 'igniteui-charts/igc-bubble-series-module';\r\n\r\nimport { IgcGeographicProportionalSymbolSeriesComponent } from './igc-geographic-proportional-symbol-series-component';\r\nimport { GeographicProportionalSymbolSeries } from './GeographicProportionalSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicProportionalSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcBubbleSeriesModule.register();\r\n        IgcGeographicProportionalSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicProportionalSymbolSeriesComponent\", IgcGeographicProportionalSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicProportionalSymbolSeries\", (<any>GeographicProportionalSymbolSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcColorScaleComponent } from \"igniteui-charts/igc-color-scale-component\";\r\nimport { IgcTriangulationStatusEventArgs } from \"igniteui-core/igc-triangulation-status-event-args\";\r\nimport { IgcGeographicXYTriangulatingSeriesComponent } from \"./igc-geographic-xy-triangulating-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicScatterAreaSeries } from \"./GeographicScatterAreaSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class which draws a colored 2D surface, in a geographic context, based on a triangulation of XY data with numeric values assigned to each point.\r\n*/\r\nexport class IgcGeographicScatterAreaSeriesComponent extends IgcGeographicXYTriangulatingSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicScatterAreaSeries\r\n{\r\n\treturn new GeographicScatterAreaSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicScatterAreaSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicScatterAreaSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicScatterAreaSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicScatterAreaSeriesComponent._observedAttributesIgcGeographicScatterAreaSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-scatter-area-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicScatterAreaSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicScatterAreaSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicScatterAreaSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicScatterAreaSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows an area shape.\r\n\t*/\r\n\tget isArea() : boolean {\r\n\t\treturn (this.i.ew as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property on each data item containing a numeric value which can be converted to a color by the ColorScale.\r\n\t*/\r\n\tget colorMemberPath() : string {\r\n\t\treturn (this.i.x3 as string);\r\n\t}\r\n\tset colorMemberPath(v: string) {\r\n\t\tthis.i.x3 = v;\r\n\t}\r\n\t/**\r\n\t * The ColorScale used to resolve the color values of points in the series.\r\n\t*/\r\n\tget colorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.xy;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset colorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xy = null : this.i.xy = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets actual color scale that is set on ColorScale property or default ColorScale\r\n\t*/\r\n\tget actualColorScale() : IgcColorScaleComponent {\r\n\t                                        const r = this.i.xx;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcColorScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset actualColorScale(v: IgcColorScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xx = null : this.i.xx = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.colorScale && (this.colorScale as any).name && (this.colorScale as any).name == name) { return this.colorScale; }\r\n\tif (this.actualColorScale && (this.actualColorScale as any).name && (this.actualColorScale as any).name == name) { return this.actualColorScale; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.colorScale && (this.colorScale as any)._styling) {\r\n\t    (this.colorScale as any)._styling(container, component, this);\r\n\t}\r\n\tif (this.actualColorScale && (this.actualColorScale as any)._styling) {\r\n\t    (this.actualColorScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\t/**\r\n\t * Updates ActualColorScale properties using HostedSeries's ColorScale properties\r\n\t\r\n\t*/\r\n\tpublic updateActualColorScale() {\r\n\t\tthis.i.x8();\r\n\t}\r\n\t\r\n\t    private _triangulationStatusChanged: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void = null;\r\n\t    private _triangulationStatusChanged_wrapped: any = null;\r\n\t/**\r\n\t * Raised when the status of an ongoing Triangulation has changed.\r\n\t*/\r\n\t\r\n\tpublic get triangulationStatusChanged(): (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void {\r\n\treturn this._triangulationStatusChanged;\r\n\t}\r\n\t    public set triangulationStatusChanged(ev: (s: IgcGeographicScatterAreaSeriesComponent, e: IgcTriangulationStatusEventArgs) => void) {\r\n\t        if (this._triangulationStatusChanged_wrapped !== null) {\r\n\t            this.i.triangulationStatusChanged = delegateRemove(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);\r\n\t            this._triangulationStatusChanged_wrapped = null;\r\n\t            this._triangulationStatusChanged = null;\r\n\t        }\r\n\t\r\n\t        this._triangulationStatusChanged = ev;\r\n\t        this._triangulationStatusChanged_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcTriangulationStatusEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeTriangulationStatusChanged) {\r\n\t                        (this as any).beforeTriangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._triangulationStatusChanged) {\r\n\t    this._triangulationStatusChanged(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.triangulationStatusChanged = delegateCombine(this.i.triangulationStatusChanged, this._triangulationStatusChanged_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterAreaSeriesModule } from 'igniteui-charts/igc-scatter-area-series-module';\r\n\r\nimport { IgcGeographicScatterAreaSeriesComponent } from './igc-geographic-scatter-area-series-component';\r\nimport { GeographicScatterAreaSeries } from './GeographicScatterAreaSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicScatterAreaSeriesModule {\r\n    public static register(): void {\r\nIgcScatterAreaSeriesModule.register();\r\n        IgcGeographicScatterAreaSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicScatterAreaSeriesComponent\", IgcGeographicScatterAreaSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicScatterAreaSeries\", (<any>GeographicScatterAreaSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { IgcShapeDataSource } from \"igniteui-core/igc-shape-data-source\";\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcAssigningShapeStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-style-event-args';\r\nimport { IgcAssigningShapeMarkerStyleEventArgs } from 'igniteui-charts/igc-assigning-shape-marker-style-event-args';\r\nimport { ShapeItemSearchMode, ShapeItemSearchMode_$type } from 'igniteui-charts/ShapeItemSearchMode';\r\nimport { IgcBrushScaleComponent } from 'igniteui-charts/igc-brush-scale-component';\r\n\r\n/**\r\n * Base class for series which render polygons on a map.\r\n*/\r\nexport abstract class IgcGeographicShapeSeriesBaseComponent extends IgcGeographicMapSeriesHostComponent\r\n{\r\n\r\n\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeriesBase {\r\n\t\treturn this._implementation;\r\n\t}\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesBaseComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesBaseComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesBaseComponent._observedAttributesIgcGeographicShapeSeriesBaseComponent;               \r\n\t                }                 \r\n\t            \r\n\r\n    private _shapeDataSource: string;\r\n\t/**\r\n \t * Gets or sets the string path of the .shp portion of the Shapefile.\r\n\t*/\r\n    set shapeDataSource(value: string) {\r\n        this._shapeDataSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get shapeDataSource(): string {\r\n        return this._shapeDataSource;\r\n    }\r\n\r\n    private _databaseSource: string;\r\n\t/**\r\n\t * Gets or sets the string path of the .dbf portion of the Shapefile.\r\n\t*/\r\n    set databaseSource(value: string) {\r\n        this._databaseSource = value;\r\n        this.updateShapeDataSource();\r\n    }\r\n    get databaseSource(): string {\r\n        return this._databaseSource;\r\n    }\r\n\r\n    private _currData: any = null;\r\n    private _onImportCompleted: any = null;\r\n    protected onUpdateDataSource(dataSource: any): any {\r\n        if (this._onImportCompleted == null) {\r\n            this._onImportCompleted = (s, e) => {\r\n                if (this._currData) {\r\n                    this._currData.i.importCompleted = delegateRemove(this._currData.i.importCompleted, this._onImportCompleted);\r\n                    var data = this._currData;\r\n                    this._currData = null;\r\n                    this.i.itemsSource = data.getPointData();\r\n                }\r\n            };\r\n        }\r\n        \r\n        if (dataSource && dataSource.getPointData) {\r\n            if (dataSource.count > 0) {\r\n                return dataSource.getPointData();\r\n            }\r\n            this._currData = dataSource;\r\n            this._currData.i.importCompleted = delegateCombine(this._currData.i.importCompleted, this._onImportCompleted);\r\n            return null;\r\n        }\r\n        return dataSource;\r\n    }\r\n\r\n    private _cachedShapeDataSource: IgcShapeDataSource;\r\n    private updateShapeDataSource() {\r\n        if (this._cachedShapeDataSource == null) {\r\n            this._cachedShapeDataSource = new IgcShapeDataSource();\r\n            this.onShapeDataSourceImportCompleted = this.onShapeDataSourceImportCompleted.bind(this);\r\n            this._cachedShapeDataSource.importCompleted = this.onShapeDataSourceImportCompleted;\r\n        }\r\n\r\n        this._cachedShapeDataSource.shapefileSource = this._shapeDataSource;\r\n       \tthis._cachedShapeDataSource.databaseSource = this._databaseSource;\r\n\r\n        if (this._shapeDataSource && this._databaseSource) {\r\n            this._cachedShapeDataSource.dataBind();\r\n        }\r\n    }\r\n\r\n    private onShapeDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedShapeDataSource.getPointData();\r\n    }\r\n\r\n\t/**\r\n\t * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\r\n\t * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\r\n\t*/\r\n\tget shapeMemberPath() : string {\r\n\t\treturn (this.i.x4 as string);\r\n\t}\r\n\tset shapeMemberPath(v: string) {\r\n\t\tthis.i.x4 = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomShapeStyleAllowed() : boolean {\r\n\t\treturn (this.i.xp as boolean);\r\n\t}\r\n\tset isCustomShapeStyleAllowed(v: boolean) {\r\n\t\tthis.i.xp = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeStyleAllowed\", this.i.xp);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomShapeMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.xo as boolean);\r\n\t}\r\n\tset isCustomShapeMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.xo = ensureBool(v);\r\n\t                                        this._a(\"isCustomShapeMarkerStyleAllowed\", this.i.xo);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ShapeItemSearchMode {\r\n\t\treturn this.i.xg;\r\n\t}\r\n\tset itemSearchMode(v: ShapeItemSearchMode) {\r\n\t\tthis.i.xg = ensureEnum<ShapeItemSearchMode>(ShapeItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ShapeItemSearchMode>(ShapeItemSearchMode_$type, this.i.xg));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.xs as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.xs = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.xs);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill mapping property for the current series object.\r\n\t*/\r\n\tget fillMemberPath() : string {\r\n\t\treturn (this.i.xt as string);\r\n\t}\r\n\tset fillMemberPath(v: string) {\r\n\t\tthis.i.xt = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush scale for the fill brush of markers.\r\n\t*/\r\n\tget fillScale() : IgcBrushScaleComponent {\r\n\t                                        const r = this.i.xf;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = IgcBrushScaleComponent._createFromInternal(r);\r\n\t                                            if (e) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset fillScale(v: IgcBrushScaleComponent) {\r\n\t                                        if (v != null && this._stylingContainer && (v as any)._styling) (v as any)._styling(this._stylingContainer, this, this);\r\n\t\r\n\t\tv == null ? this.i.xf = null : this.i.xf = v.i;\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether or not the FillScale uses global min/max values of FillMemberPath from multiple series.\r\n\t * This setting applies only if multiple series are using the same FillScale.\r\n\t*/\r\n\tget fillScaleUseGlobalValues() : boolean {\r\n\t\treturn (this.i.xn as boolean);\r\n\t}\r\n\tset fillScaleUseGlobalValues(v: boolean) {\r\n\t\tthis.i.xn = ensureBool(v);\r\n\t                                        this._a(\"fillScaleUseGlobalValues\", this.i.xn);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchPointsThreshold() : number {\r\n\t\treturn (this.i.xr as number);\r\n\t}\r\n\tset itemSearchPointsThreshold(v: number) {\r\n\t\tthis.i.xr = +v;\r\n\t                                        this._a(\"itemSearchPointsThreshold\", this.i.xr);\r\n\t}\r\n\t/**\r\n\t * Set a shapefile datasource to use with the series.\r\n\t*/\r\n\tget shapefileDataSource() : IgcShapeDataSource {\r\n\t                                        const r = this.i.xj;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t                                        if (!(r as any).externalObject) {\r\n\t                                            let e = new IgcShapeDataSource();\r\n\t                                            if ((r as any).$type) {\r\n\t                                                (e as any)._implementation = r;\r\n\t                                            } else {\r\n\t                                                if ((e.i as any).setNativeElement) {\r\n\t                                                    (e.i as any).setNativeElement(r);\r\n\t                                                }\r\n\t                                            }\r\n\t                                            (r as any).externalObject = e;\r\n\t                                        }\r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset shapefileDataSource(v: IgcShapeDataSource) {\r\n\t\tv == null ? this.i.xj = null : this.i.xj = v.i;\r\n\t}\r\n\t/**\r\n\t * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\r\n\t * In the case of GeographicPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\r\n\t*/\r\n\tget shapeFilterResolution() : number {\r\n\t\treturn (this.i.xq as number);\r\n\t}\r\n\tset shapeFilterResolution(v: number) {\r\n\t\tthis.i.xq = +v;\r\n\t                                        this._a(\"shapeFilterResolution\", this.i.xq);\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.fillScale && (this.fillScale as any).name && (this.fillScale as any).name == name) { return this.fillScale; }\r\n\tif (this.shapefileDataSource && (this.shapefileDataSource as any).name && (this.shapefileDataSource as any).name == name) { return this.shapefileDataSource; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t\r\n\t        protected _styling(container: any, component: any, parent?: any) {\r\n\t            super._styling(container, component, parent);\r\n\t\r\n\t            this._inStyling = true;\r\n\t            if (this.fillScale && (this.fillScale as any)._styling) {\r\n\t    (this.fillScale as any)._styling(container, component, this);\r\n\t}\r\n\t\r\n\t            this._inStyling = false;\r\n\t        }\r\n\r\n\t\r\n\t    private _assigningShapeStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void = null;\r\n\t    private _assigningShapeStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void {\r\n\treturn this._assigningShapeStyle;\r\n\t}\r\n\t    public set assigningShapeStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\r\n\t            this._assigningShapeStyle_wrapped = null;\r\n\t            this._assigningShapeStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeStyle = ev;\r\n\t        this._assigningShapeStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeStyle) {\r\n\t                        (this as any).beforeAssigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeStyle) {\r\n\t    this._assigningShapeStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningShapeMarkerStyle: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningShapeMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Shape Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningShapeMarkerStyle(): (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void {\r\n\treturn this._assigningShapeMarkerStyle;\r\n\t}\r\n\t    public set assigningShapeMarkerStyle(ev: (s: IgcGeographicShapeSeriesBaseComponent, e: IgcAssigningShapeMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningShapeMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\r\n\t            this._assigningShapeMarkerStyle_wrapped = null;\r\n\t            this._assigningShapeMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningShapeMarkerStyle = ev;\r\n\t        this._assigningShapeMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningShapeMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningShapeMarkerStyle) {\r\n\t                        (this as any).beforeAssigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningShapeMarkerStyle) {\r\n\t    this._assigningShapeMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);;\r\n\t    }\r\n}","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicShapeSeriesBaseView } from \"./GeographicShapeSeriesBaseView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { Brush } from \"igniteui-core/Brush\";\r\nimport { Defaults } from \"igniteui-charts/Defaults\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterPolygonSeries } from \"igniteui-charts/ScatterPolygonSeries\";\r\nimport { Base, Type, markType, runOn, delegateCombine, typeCast, enumGetBox, EnumUtil, Number_$type, markDep } from \"igniteui-core/type\";\r\nimport { StyleSelector } from \"igniteui-charts/StyleSelector\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { StyleShapeEventArgs } from \"igniteui-charts/StyleShapeEventArgs\";\r\nimport { ShapeSeriesBase } from \"igniteui-charts/ShapeSeriesBase\";\r\nimport { PropertyUpdatedEventArgs } from \"igniteui-core/PropertyUpdatedEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { DeviceUtils } from \"igniteui-core/DeviceUtils\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeriesView extends GeographicShapeSeriesBaseView {\r\n\tstatic $t: Type = markType(GeographicShapeSeriesView, 'GeographicShapeSeriesView', (<any>GeographicShapeSeriesBaseView).$);\r\n\tconstructor(a: GeographicShapeSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cy = a;\r\n\t\tif (!this.t) {\r\n\t\t\tthis.cy.x4 = \"points\";\r\n\t\t}\r\n\t}\r\n\tprotected cy: GeographicShapeSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t\tthis.cy.zr = Defaults.a8;\r\n\t\t\tthis.cy.jq = Defaults.ac;\r\n\t\t\tthis.cy.yq = Defaults.ab;\r\n\t\t\tthis.cy.yn = Defaults.d;\r\n\t\t\tthis.cy.yl = Defaults.a;\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tsuper.ci();\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aby = this.cy.zt;\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aar = this.cy.yo;\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).abd = this.cy.y9;\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aau = this.cy.yq;\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aad = this.cy.yk;\r\n\t}\r\n\tc3(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).abd = this.cy.y9;\r\n\t}\r\n\tc5(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aau = this.cy.yq;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aad = this.cy.yk;\r\n\t}\r\n\tc4(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aam = this.cy.yn;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).abu = this.cy.zq;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).abv = this.cy.zr;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).abx = this.cy.zs;\r\n\t}\r\n\tc6(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aar = this.cy.yo;\r\n\t}\r\n\tc7(): void {\r\n\t\t(<ScatterPolygonSeries>this.cy.w5).aby = this.cy.zt;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicShapeSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicShapeSeries, 'GeographicShapeSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicShapeSeries();\r\n\t}\r\n\tprotected get_fr(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicShapeSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicShapeSeriesView(this);\r\n\t}\r\n\typ: GeographicShapeSeriesView;\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.yp = <GeographicShapeSeriesView>a;\r\n\t}\r\n\tprotected w4(): Series {\r\n\t\tlet a = new ScatterPolygonSeries();\r\n\t\ta.styleShape = delegateCombine(a.styleShape, runOn(this, this.y6));\r\n\t\ta.propertyUpdated = delegateCombine(a.propertyUpdated, runOn(this, this.y7));\r\n\t\treturn a;\r\n\t}\r\n\tprivate y6(a: any, b: StyleShapeEventArgs): void {\r\n\t\tif (this.styleShape != null) {\r\n\t\t\tthis.styleShape(this, b);\r\n\t\t}\r\n\t}\r\n\tstyleShape: (sender: any, e: StyleShapeEventArgs) => void = null;\r\n\tprivate y7(a: any, b: PropertyUpdatedEventArgs): void {\r\n\t\tlet c = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.w5);\r\n\t\tif (c == null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\tyo: StyleSelector;\r\n\tzt: Style;\r\n\tyn: MarkerType;\r\n\tym: MarkerOutlineMode;\r\n\tyl: MarkerFillMode;\r\n\ty9: DataTemplate;\r\n\tzq: Brush;\r\n\tzr: Brush;\r\n\tzs: Style;\r\n\tyq: number;\r\n\tip(): number {\r\n\t\treturn this.yq;\r\n\t}\r\n\tvq(): Brush {\r\n\t\treturn this.zo;\r\n\t}\r\n\tvr(): Brush {\r\n\t\treturn this.zp;\r\n\t}\r\n\ts3(): DataTemplate {\r\n\t\treturn this.y8;\r\n\t}\r\n\tmc(): string {\r\n\t\tlet a = typeCast<ScatterPolygonSeries>((<any>ScatterPolygonSeries).$, this.w5);\r\n\t\tif (a == null) {\r\n\t\t\treturn \"Unknown\";\r\n\t\t}\r\n\t\treturn a.mc();\r\n\t}\r\n\tyk: CollisionAvoidanceType;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase GeographicShapeSeries.$$p[6]:\r\n\t\t\t(<ScatterPolygonSeries>this.w5).aak = this.ym;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[5]:\r\n\t\t\t(<ScatterPolygonSeries>this.w5).aag = this.yl;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[9]:\r\n\t\t\tthis.yp.c3();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[10]:\r\n\t\t\tthis.yp.c5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[4]:\r\n\t\t\tthis.yp.c0();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[11]:\r\n\t\t\tthis.yp.c4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[3]:\r\n\t\t\tthis.yp.cz();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[7]:\r\n\t\t\tthis.yp.c1();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[8]:\r\n\t\t\tthis.yp.c2();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[13]:\r\n\t\t\tthis.yp.c6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicShapeSeries.$$p[12]:\r\n\t\t\tthis.yp.c7();\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprotected jm(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\ty8: DataTemplate;\r\n\tzo: Brush;\r\n\tzp: Brush;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicShapeSeries, 'raisePropertyChanged', [ 'ActualMarkerBrush:zo:za', [ (<any>Brush).$ ], 'ActualMarkerOutline:zp:zb', [ (<any>Brush).$ ], 'ActualMarkerTemplate:y8:zc', [ (<any>DataTemplate).$, null ], 'MarkerBrush:zq:zd', [ (<any>Brush).$ ], 'MarkerCollisionAvoidance:yk:ze', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'MarkerFillMode:yl:zf', [ MarkerFillMode_$type, enumGetBox<MarkerFillMode>(MarkerFillMode_$type, 0) ], 'MarkerOutlineMode:ym:zg', [ MarkerOutlineMode_$type, enumGetBox<MarkerOutlineMode>(MarkerOutlineMode_$type, 0) ], 'MarkerOutline:zr:zh', [ (<any>Brush).$ ], 'MarkerStyle:zs:zi', [ (<any>Style).$ ], 'MarkerTemplate:y9:zj', [ (<any>DataTemplate).$, null ], 'MarkerThickness:yq:zk', [ 1, DeviceUtils.g(2) ], 'MarkerType:yn:zl', [ MarkerType_$type, enumGetBox<MarkerType>(MarkerType_$type, 2) ], 'ShapeStyle:zt:zm', [ (<any>Style).$, null ], 'ShapeStyleSelector:yo:zn', [ (<any>StyleSelector).$, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { MarkerType, MarkerType_$type } from \"igniteui-charts/MarkerType\";\r\nimport { MarkerOutlineMode, MarkerOutlineMode_$type } from \"igniteui-charts/MarkerOutlineMode\";\r\nimport { MarkerFillMode, MarkerFillMode_$type } from \"igniteui-charts/MarkerFillMode\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { IgcStyleShapeEventArgs } from \"igniteui-charts/igc-style-shape-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicShapeSeries } from \"./GeographicShapeSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString, brushToString, stringToBrush } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\nimport { Style } from \"igniteui-core/Style\";\r\nimport { DataTemplate } from \"igniteui-core/DataTemplate\";\r\n\r\n/**\r\n * Series class which renders polygons as Paths, in a geographic context, based on lists of points in the ItemsSource.\r\n*/\r\nexport class IgcGeographicShapeSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicShapeSeries\r\n{\r\n\treturn new GeographicShapeSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicShapeSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicShapeSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicShapeSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicShapeSeriesComponent._observedAttributesIgcGeographicShapeSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-shape-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicShapeSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicShapeSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicShapeSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicShapeSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a polygon shape.\r\n\t*/\r\n\tget isPolygon() : boolean {\r\n\t\treturn (this.i.fr as boolean);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the fill brush.\r\n\t*/\r\n\tget shapeFill() : string {\r\n\t\treturn this.i.zt ? (this.i.zt.fill as string) : null;\r\n\t}\r\n\tset shapeFill(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.zt.fill = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke brush.\r\n\t*/\r\n\tget shapeStroke() : string {\r\n\t\treturn this.i.zt ? (this.i.zt.stroke as string) : null;\r\n\t}\r\n\tset shapeStroke(v: string) {\r\n\t\tthis.ensureShapeStyle();\r\n\t                                        this.i.zt.stroke = v;\r\n\t}\r\n\t/**\r\n\t * Gets or sets the stroke thickness.\r\n\t*/\r\n\tget shapeStrokeThickness() : number {\r\n\t\treturn this.i.zt ? (this.i.zt.strokeThickness as number) : NaN;\r\n\t}\r\n\tset shapeStrokeThickness(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.zt.strokeThickness = +v;\r\n\t                                        this._a(\"shapeStrokeThickness\", this.i.zt.strokeThickness);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the opacity.\r\n\t*/\r\n\tget shapeOpacity() : number {\r\n\t\treturn this.i.zt ? (this.i.zt.opacity as number) : NaN;\r\n\t}\r\n\tset shapeOpacity(v: number) {\r\n\t                                        this.ensureShapeStyle();\r\n\t\tthis.i.zt.opacity = +v;\r\n\t                                        this._a(\"shapeOpacity\", this.i.zt.opacity);\r\n\t}\r\n\tensureShapeStyle() {\r\n\tif (this.i.zt) {\r\n\t                                            return;\r\n\t                                        }\r\n\t                                        this.i.zt = new Style();\r\n\t\r\n\t                                }\r\n\t/**\r\n\t * Gets or sets the marker type for the current series object.\r\n\t * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\r\n\t*/\r\n\tget markerType() : MarkerType {\r\n\t\treturn this.i.yn;\r\n\t}\r\n\tset markerType(v: MarkerType) {\r\n\t\tthis.i.yn = ensureEnum<MarkerType>(MarkerType_$type, v);\r\n\t                                        this._a(\"markerType\", enumToString<MarkerType>(MarkerType_$type, this.i.yn));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\r\n\t*/\r\n\tget markerOutlineMode() : MarkerOutlineMode {\r\n\t\treturn this.i.ym;\r\n\t}\r\n\tset markerOutlineMode(v: MarkerOutlineMode) {\r\n\t\tthis.i.ym = ensureEnum<MarkerOutlineMode>(MarkerOutlineMode_$type, v);\r\n\t                                        this._a(\"markerOutlineMode\", enumToString<MarkerOutlineMode>(MarkerOutlineMode_$type, this.i.ym));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether the marker brush is based on the marker outline of the series rather than the marker brushes collection.\r\n\t*/\r\n\tget markerFillMode() : MarkerFillMode {\r\n\t\treturn this.i.yl;\r\n\t}\r\n\tset markerFillMode(v: MarkerFillMode) {\r\n\t\tthis.i.yl = ensureEnum<MarkerFillMode>(MarkerFillMode_$type, v);\r\n\t                                        this._a(\"markerFillMode\", enumToString<MarkerFillMode>(MarkerFillMode_$type, this.i.yl));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the MarkerTemplate for the current series object.\r\n\t*/\r\n\tget markerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.y9 as IgDataTemplate);\r\n\t}\r\n\tset markerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.y9 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\r\n\t*/\r\n\tget markerBrush() : string {\r\n\t\treturn brushToString(this.i.zq);\r\n\t}\r\n\tset markerBrush(v: string) {\r\n\t\tthis.i.zq = stringToBrush(v);\r\n\t                                        this._a(\"markerBrush\", brushToString(this.i.zq));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\r\n\t*/\r\n\tget markerOutline() : string {\r\n\t\treturn brushToString(this.i.zr);\r\n\t}\r\n\tset markerOutline(v: string) {\r\n\t\tthis.i.zr = stringToBrush(v);\r\n\t                                        this._a(\"markerOutline\", brushToString(this.i.zr));\r\n\t}\r\n\t/**\r\n\t * Gets or sets thickness of the marker outline\r\n\t*/\r\n\tget markerThickness() : number {\r\n\t\treturn (this.i.yq as number);\r\n\t}\r\n\tset markerThickness(v: number) {\r\n\t\tthis.i.yq = +v;\r\n\t                                        this._a(\"markerThickness\", this.i.yq);\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.yk;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.yk = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.yk));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker template for the current series object.\r\n\t*/\r\n\tget actualMarkerTemplate() : IgDataTemplate {\r\n\t\treturn (this.i.y8 as IgDataTemplate);\r\n\t}\r\n\tset actualMarkerTemplate(v: IgDataTemplate) {\r\n\t\tthis.i.y8 = ((v as any) as DataTemplate);\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker brush for the current series object.\r\n\t*/\r\n\tget actualMarkerBrush() : string {\r\n\t\treturn brushToString(this.i.zo);\r\n\t}\r\n\tset actualMarkerBrush(v: string) {\r\n\t\tthis.i.zo = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerBrush\", brushToString(this.i.zo));\r\n\t}\r\n\t/**\r\n\t * Gets the effective marker outline for the current series object.\r\n\t*/\r\n\tget actualMarkerOutline() : string {\r\n\t\treturn brushToString(this.i.zp);\r\n\t}\r\n\tset actualMarkerOutline(v: string) {\r\n\t\tthis.i.zp = stringToBrush(v);\r\n\t                                        this._a(\"actualMarkerOutline\", brushToString(this.i.zp));\r\n\t}\r\n\t\r\n\t    private _styleShape: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void = null;\r\n\t    private _styleShape_wrapped: any = null;\r\n\t\r\n\tpublic get styleShape(): (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void {\r\n\treturn this._styleShape;\r\n\t}\r\n\t    public set styleShape(ev: (s: IgcGeographicShapeSeriesComponent, e: IgcStyleShapeEventArgs) => void) {\r\n\t        if (this._styleShape_wrapped !== null) {\r\n\t            this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\r\n\t            this._styleShape_wrapped = null;\r\n\t            this._styleShape = null;\r\n\t        }\r\n\t\r\n\t        this._styleShape = ev;\r\n\t        this._styleShape_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcStyleShapeEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeStyleShape) {\r\n\t                        (this as any).beforeStyleShape(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._styleShape) {\r\n\t    this._styleShape(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterPolygonSeriesModule } from 'igniteui-charts/igc-scatter-polygon-series-module';\r\n\r\nimport { IgcGeographicShapeSeriesComponent } from './igc-geographic-shape-series-component';\r\nimport { GeographicShapeSeries } from './GeographicShapeSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicShapeSeriesModule {\r\n    public static register(): void {\r\nIgcScatterPolygonSeriesModule.register();\r\n        IgcGeographicShapeSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicShapeSeriesComponent\", IgcGeographicShapeSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicShapeSeries\", (<any>GeographicShapeSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { HostSeriesView } from \"./HostSeriesView\";\r\nimport { SeriesView } from \"igniteui-charts/SeriesView\";\r\nimport { ScatterSeries } from \"igniteui-charts/ScatterSeries\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ScatterBase } from \"igniteui-charts/ScatterBase\";\r\nimport { GeographicMarkerSeries } from \"./GeographicMarkerSeries\";\r\nimport { MarkerSeries } from \"igniteui-charts/MarkerSeries\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { XamGeographicMap } from \"./XamGeographicMap\";\r\nimport { Base, Type, markType, String_$type, enumGetBox, EnumUtil, Boolean_$type, typeGetValue, Number_$type, runOn, delegateCombine, delegateRemove, markDep } from \"igniteui-core/type\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { AssigningScatterStyleEventArgs } from \"igniteui-charts/AssigningScatterStyleEventArgs\";\r\nimport { AssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/AssigningScatterMarkerStyleEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeriesView extends HostSeriesView {\r\n\tstatic $t: Type = markType(GeographicSymbolSeriesView, 'GeographicSymbolSeriesView', (<any>HostSeriesView).$);\r\n\tconstructor(a: GeographicSymbolSeries) {\r\n\t\tsuper(a);\r\n\t\tthis.cu = a;\r\n\t}\r\n\tprivate cu: GeographicSymbolSeries = null;\r\n\ta4(): void {\r\n\t\tsuper.a4();\r\n\t\tif (!this.t) {\r\n\t\t}\r\n\t}\r\n\tci(): void {\r\n\t\tlet a = <ScatterSeries>this.cu.w5;\r\n\t\tsuper.ci();\r\n\t\ta.aay = this.cu.yt;\r\n\t\ta.aa6 = this.cu.yr;\r\n\t\ta.xf = this.cu.xf;\r\n\t\ta.x7 = this.cu.xv;\r\n\t\ta.xo = this.cu.xg;\r\n\t}\r\n\tcw(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).aay = this.cu.yt;\r\n\t}\r\n\tcv(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).aa6 = this.cu.yr;\r\n\t}\r\n\tc2(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).xf = this.cu.xf;\r\n\t}\r\n\tc0(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).x7 = this.cu.xv;\r\n\t}\r\n\tc1(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).xo = this.cu.xg;\r\n\t}\r\n\tc3(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).aae = this.cu.xh;\r\n\t}\r\n\tc5(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).xAxis = (<XamGeographicMap>this.cu.dc).xj;\r\n\t}\r\n\tc6(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).yAxis = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tc4(): void {\r\n\t\tlet a = <ScatterSeries>this.cu.w5;\r\n\t\tif (this.cu.dc == null) {\r\n\t\t\ta.xAxis = null;\r\n\t\t\ta.yAxis = null;\r\n\t\t\treturn;\r\n\t\t}\r\n\t\ta.xAxis = (<XamGeographicMap>this.cu.dc).xj;\r\n\t\ta.yAxis = (<XamGeographicMap>this.cu.dc).xl;\r\n\t}\r\n\tcy(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).yy = this.cu.yd;\r\n\t}\r\n\tcx(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).yo = this.cu.x9;\r\n\t}\r\n\tcz(): void {\r\n\t\t(<ScatterSeries>this.cu.w5).yp = this.cu.ya;\r\n\t}\r\n}\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicSymbolSeries extends GeographicMarkerSeries {\r\n\tstatic $t: Type = markType(GeographicSymbolSeries, 'GeographicSymbolSeries', (<any>GeographicMarkerSeries).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicSymbolSeries();\r\n\t}\r\n\tprotected get_ek(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicSymbolSeries).$;\r\n\t}\r\n\tprotected ct(): SeriesView {\r\n\t\treturn new GeographicSymbolSeriesView(this);\r\n\t}\r\n\tq3(a: SeriesView): void {\r\n\t\tsuper.q3(a);\r\n\t\tthis.yg = <GeographicSymbolSeriesView>a;\r\n\t}\r\n\tyg: GeographicSymbolSeriesView;\r\n\tprotected jm(): number {\r\n\t\treturn 0.7;\r\n\t}\r\n\tprotected w4(): Series {\r\n\t\treturn new ScatterSeries();\r\n\t}\r\n\tprivate yf: ScatterSeries = null;\r\n\tyr: string;\r\n\tyt: string;\r\n\tyd: CollisionAvoidanceType;\r\n\tyk: boolean;\r\n\tyj: boolean;\r\n\tprotected yi: boolean = false;\r\n\tprotected yh: boolean = false;\r\n\tprotected get_ff(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tassigningScatterStyle: (sender: any, args: AssigningScatterStyleEventArgs) => void = null;\r\n\tassigningScatterMarkerStyle: (sender: any, args: AssigningScatterMarkerStyleEventArgs) => void = null;\r\n\tye: ScatterItemSearchMode;\r\n\tym: number;\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"SeriesViewer\":\r\n\t\t\tthis.yg.c4();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[5]:\r\n\t\t\tthis.yg.cw();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[4]:\r\n\t\t\tthis.yg.cv();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[6]:\r\n\t\t\tthis.yg.cy();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"XAxis\":\r\n\t\t\tthis.yg.c5();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase \"YAxis\":\r\n\t\t\tthis.yg.c6();\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[1]:\r\n\t\t\t(<ScatterBase>this.w5).zu = this.yk;\r\n\t\t\tthis.yi = this.yk;\r\n\t\t\tif (this.yk) {\r\n\t\t\t\tlet e = (<ScatterBase>this.w5);\r\n\t\t\t\te.assigningScatterStyle = delegateCombine(e.assigningScatterStyle, runOn(this, this.yy));\r\n\t\t\t} else {\r\n\t\t\t\tlet f = (<ScatterBase>this.w5);\r\n\t\t\t\tf.assigningScatterStyle = delegateRemove(f.assigningScatterStyle, runOn(this, this.yy));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[0]:\r\n\t\t\t(<ScatterBase>this.w5).zt = this.yj;\r\n\t\t\tthis.yh = this.yj;\r\n\t\t\tif (this.yk) {\r\n\t\t\t\tlet g = (<ScatterBase>this.w5);\r\n\t\t\t\tg.assigningScatterMarkerStyle = delegateCombine(g.assigningScatterMarkerStyle, runOn(this, this.yx));\r\n\t\t\t} else {\r\n\t\t\t\tlet h = (<ScatterBase>this.w5);\r\n\t\t\t\th.assigningScatterMarkerStyle = delegateRemove(h.assigningScatterMarkerStyle, runOn(this, this.yx));\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[2]:\r\n\t\t\t(<ScatterBase>this.w5).zd = this.ye;\r\n\t\t\tbreak;\r\n\r\n\t\t\tcase GeographicSymbolSeries.$$p[3]:\r\n\t\t\t(<ScatterBase>this.w5).aad = this.ym;\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate yy(a: any, b: AssigningScatterStyleEventArgs): void {\r\n\t\tif (this.assigningScatterStyle != null) {\r\n\t\t\tthis.assigningScatterStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tprivate yx(a: any, b: AssigningScatterMarkerStyleEventArgs): void {\r\n\t\tif (this.assigningScatterMarkerStyle != null) {\r\n\t\t\tthis.assigningScatterMarkerStyle(this, b);\r\n\t\t}\r\n\t}\r\n\tyl: boolean;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, GeographicSymbolSeries, 'raisePropertyChanged', [ 'IsCustomScatterMarkerStyleAllowed:yj:yz', [ 0, false ], 'IsCustomScatterStyleAllowed:yk:y0', [ 0, false ], 'ItemSearchMode:ye:y1', [ ScatterItemSearchMode_$type, enumGetBox<ScatterItemSearchMode>(ScatterItemSearchMode_$type, 0) ], 'ItemSearchThreshold:ym:y2', [ 1, 10000 ], 'LatitudeMemberPath:yr:y3', [ 2, null ], 'LongitudeMemberPath:yt:y4', [ 2, null ], 'MarkerCollisionAvoidance:yd:y5', [ CollisionAvoidanceType_$type, enumGetBox<CollisionAvoidanceType>(CollisionAvoidanceType_$type, 0) ], 'UseLightweightMarkers:yl:y6', [ 0, false ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { CollisionAvoidanceType, CollisionAvoidanceType_$type } from \"igniteui-charts/CollisionAvoidanceType\";\r\nimport { ScatterItemSearchMode, ScatterItemSearchMode_$type } from \"igniteui-charts/ScatterItemSearchMode\";\r\nimport { IgcAssigningScatterStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-style-event-args\";\r\nimport { IgcAssigningScatterMarkerStyleEventArgs } from \"igniteui-charts/igc-assigning-scatter-marker-style-event-args\";\r\nimport { IgcGeographicMarkerSeriesComponent } from \"./igc-geographic-marker-series-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicSymbolSeries } from \"./GeographicSymbolSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool, ensureEnum, enumToString } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class for a geographic map with points marked at given locations.\r\n * This is the geographic equivalent of a ScatterSeries.\r\n*/\r\nexport class IgcGeographicSymbolSeriesComponent extends IgcGeographicMarkerSeriesComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicSymbolSeries\r\n{\r\n\treturn new GeographicSymbolSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicSymbolSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicSymbolSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicSymbolSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicSymbolSeriesComponent._observedAttributesIgcGeographicSymbolSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-symbol-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicSymbolSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicSymbolSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicSymbolSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicSymbolSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the series has only marker as visuals\r\n\t*/\r\n\tget hasOnlyMarkers() : boolean {\r\n\t\treturn (this.i.ek as boolean);\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the latitude coordinate of the symbol.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.yr as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.yr = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of ItemsSource items which contains the longitude coordinate of the symbol.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.yt as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.yt = v;\r\n\t}\r\n\t/**\r\n\t * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\r\n\t*/\r\n\tget markerCollisionAvoidance() : CollisionAvoidanceType {\r\n\t\treturn this.i.yd;\r\n\t}\r\n\tset markerCollisionAvoidance(v: CollisionAvoidanceType) {\r\n\t\tthis.i.yd = ensureEnum<CollisionAvoidanceType>(CollisionAvoidanceType_$type, v);\r\n\t                                        this._a(\"markerCollisionAvoidance\", enumToString<CollisionAvoidanceType>(CollisionAvoidanceType_$type, this.i.yd));\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual visuals.\r\n\t*/\r\n\tget isCustomScatterStyleAllowed() : boolean {\r\n\t\treturn (this.i.yk as boolean);\r\n\t}\r\n\tset isCustomScatterStyleAllowed(v: boolean) {\r\n\t\tthis.i.yk = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterStyleAllowed\", this.i.yk);\r\n\t}\r\n\t/**\r\n\t * Gets or sets whether this Scatter series should allow custom style overrides of its individual marker visuals.\r\n\t*/\r\n\tget isCustomScatterMarkerStyleAllowed() : boolean {\r\n\t\treturn (this.i.yj as boolean);\r\n\t}\r\n\tset isCustomScatterMarkerStyleAllowed(v: boolean) {\r\n\t\tthis.i.yj = ensureBool(v);\r\n\t                                        this._a(\"isCustomScatterMarkerStyleAllowed\", this.i.yj);\r\n\t}\r\n\t/**\r\n\t * Gets or sets the mode the series will use to find the closest point to the cursor.\r\n\t*/\r\n\tget itemSearchMode() : ScatterItemSearchMode {\r\n\t\treturn this.i.ye;\r\n\t}\r\n\tset itemSearchMode(v: ScatterItemSearchMode) {\r\n\t\tthis.i.ye = ensureEnum<ScatterItemSearchMode>(ScatterItemSearchMode_$type, v);\r\n\t                                        this._a(\"itemSearchMode\", enumToString<ScatterItemSearchMode>(ScatterItemSearchMode_$type, this.i.ye));\r\n\t}\r\n\t/**\r\n\t * Gets or sets the threshold to use when searching for items using ItemSearchMode.\r\n\t*/\r\n\tget itemSearchThreshold() : number {\r\n\t\treturn (this.i.ym as number);\r\n\t}\r\n\tset itemSearchThreshold(v: number) {\r\n\t\tthis.i.ym = +v;\r\n\t                                        this._a(\"itemSearchThreshold\", this.i.ym);\r\n\t}\r\n\t\r\n\t    private _assigningScatterStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void = null;\r\n\t    private _assigningScatterStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Category Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void {\r\n\treturn this._assigningScatterStyle;\r\n\t}\r\n\t    public set assigningScatterStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterStyle = delegateRemove(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);\r\n\t            this._assigningScatterStyle_wrapped = null;\r\n\t            this._assigningScatterStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterStyle = ev;\r\n\t        this._assigningScatterStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterStyle) {\r\n\t                        (this as any).beforeAssigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterStyle) {\r\n\t    this._assigningScatterStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterStyle = delegateCombine(this.i.assigningScatterStyle, this._assigningScatterStyle_wrapped);;\r\n\t    }\r\n\t\r\n\t    private _assigningScatterMarkerStyle: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void = null;\r\n\t    private _assigningScatterMarkerStyle_wrapped: any = null;\r\n\t/**\r\n\t * Event raised when Assigning Scatter Marker Style\r\n\t*/\r\n\t\r\n\tpublic get assigningScatterMarkerStyle(): (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void {\r\n\treturn this._assigningScatterMarkerStyle;\r\n\t}\r\n\t    public set assigningScatterMarkerStyle(ev: (s: IgcGeographicSymbolSeriesComponent, e: IgcAssigningScatterMarkerStyleEventArgs) => void) {\r\n\t        if (this._assigningScatterMarkerStyle_wrapped !== null) {\r\n\t            this.i.assigningScatterMarkerStyle = delegateRemove(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);\r\n\t            this._assigningScatterMarkerStyle_wrapped = null;\r\n\t            this._assigningScatterMarkerStyle = null;\r\n\t        }\r\n\t\r\n\t        this._assigningScatterMarkerStyle = ev;\r\n\t        this._assigningScatterMarkerStyle_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcAssigningScatterMarkerStyleEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeAssigningScatterMarkerStyle) {\r\n\t                        (this as any).beforeAssigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._assigningScatterMarkerStyle) {\r\n\t    this._assigningScatterMarkerStyle(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.assigningScatterMarkerStyle = delegateCombine(this.i.assigningScatterMarkerStyle, this._assigningScatterMarkerStyle_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcScatterSeriesModule } from 'igniteui-charts/igc-scatter-series-module';\r\n\r\nimport { IgcGeographicSymbolSeriesComponent } from './igc-geographic-symbol-series-component';\r\nimport { GeographicSymbolSeries } from './GeographicSymbolSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicSymbolSeriesModule {\r\n    public static register(): void {\r\nIgcScatterSeriesModule.register();\r\n        IgcGeographicSymbolSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicSymbolSeriesComponent\", IgcGeographicSymbolSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicSymbolSeries\", (<any>GeographicSymbolSeries).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { GeographicShapeSeriesBase } from \"./GeographicShapeSeriesBase\";\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { Base, Type, EventArgs, runOn, delegateRemove, delegateCombine, markType } from \"igniteui-core/type\";\r\nimport { Series } from \"igniteui-charts/Series\";\r\nimport { Control } from \"igniteui-core/Control\";\r\nimport { GeographicMapSeriesHost } from \"./GeographicMapSeriesHost\";\r\nimport { ImageTilesReadyEventArgs } from \"./ImageTilesReadyEventArgs\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class GeographicTileSeries extends GeographicShapeSeriesBase {\r\n\tstatic $t: Type = markType(GeographicTileSeries, 'GeographicTileSeries', (<any>GeographicShapeSeriesBase).$);\r\n\tprotected bk(): Series {\r\n\t\treturn new GeographicTileSeries();\r\n\t}\r\n\tprotected get_f4(): boolean {\r\n\t\treturn true;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.ab = (<any>GeographicTileSeries).$;\r\n\t}\r\n\tget ym(): GeographicMapImagery {\r\n\t\treturn this.yl;\r\n\t}\r\n\tset ym(a: GeographicMapImagery) {\r\n\t\tlet b: boolean = a != this.ym;\r\n\t\tif (b) {\r\n\t\t\tlet c: any = this.ym;\r\n\t\t\tthis.yl = a;\r\n\t\t\tthis.raisePropertyChanged(\"TileImagery\", c, a);\r\n\t\t}\r\n\t}\r\n\tprivate yl: GeographicMapImagery = null;\r\n\tyq(): void {\r\n\t\tif (this.ym != null) {\r\n\t\t\tthis.ym.clearTileCache();\r\n\t\t}\r\n\t}\r\n\tprotected rc(a: any, b: string, c: any, d: any): void {\r\n\t\tsuper.rc(a, b, c, d);\r\n\t\tswitch (b) {\r\n\t\t\tcase \"TileImagery\":\r\n\t\t\tif (this.w5 != null) {\r\n\t\t\t\t(<TileSeries>this.w5).aag = this.ym;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\tprivate yk: TileSeries = null;\r\n\tprotected xa(a: any, b: any): void {\r\n\t\tsuper.xa(a, b);\r\n\t\t(<TileSeries>this.w5).aag = this.ym;\r\n\t\tif (this.yk != null) {\r\n\t\t\tlet c = this.yk;\r\n\t\t\tc.imageTilesReady = delegateRemove(c.imageTilesReady, runOn(this, this.yp));\r\n\t\t}\r\n\t\tthis.yk = <TileSeries>this.w5;\r\n\t\tif (this.yk != null) {\r\n\t\t\tlet d = this.yk;\r\n\t\t\td.imageTilesReady = delegateCombine(d.imageTilesReady, runOn(this, this.yp));\r\n\t\t}\r\n\t}\r\n\tprotected w4(): Series {\r\n\t\treturn new TileSeries();\r\n\t}\r\n\timageTilesReady: (sender: any, e: ImageTilesReadyEventArgs) => void = null;\r\n\tprivate yp(a: any, b: EventArgs): void {\r\n\t\tif (this.imageTilesReady != null) {\r\n\t\t\tthis.imageTilesReady(this, new ImageTilesReadyEventArgs());\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcImageTilesReadyEventArgs } from \"./igc-image-tiles-ready-event-args\";\r\nimport { IgcGeographicShapeSeriesBaseComponent } from \"./igc-geographic-shape-series-base-component\";\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicTileSeries } from \"./GeographicTileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Series class used for displaying a tile set, and using shapes to define the areas that should be rendered.\r\n*/\r\nexport class IgcGeographicTileSeriesComponent extends IgcGeographicShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : GeographicTileSeries\r\n{\r\n\treturn new GeographicTileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : GeographicTileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcGeographicTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcGeographicTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcGeographicTileSeriesComponent._observedAttributesIgcGeographicTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-geographic-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcGeographicTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcGeographicTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcGeographicTileSeriesComponent.htmlTagName,\r\n\t                            IgcGeographicTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.f4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.ym;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.ym = null : this.i.ym = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Removes all cached tile Imagery from the\r\n\t\r\n\t*/\r\n\tpublic clearTileCache() {\r\n\t\tthis.i.yq();\r\n\t}\r\n\t\r\n\t    private _imageTilesReady: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void = null;\r\n\t    private _imageTilesReady_wrapped: any = null;\r\n\t/**\r\n\t * This event is fired whenever the image tiles transition from a loading state (e.g. some are fading in) to a loaded state.\r\n\t*/\r\n\t\r\n\tpublic get imageTilesReady(): (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void {\r\n\treturn this._imageTilesReady;\r\n\t}\r\n\t    public set imageTilesReady(ev: (s: IgcGeographicTileSeriesComponent, e: IgcImageTilesReadyEventArgs) => void) {\r\n\t        if (this._imageTilesReady_wrapped !== null) {\r\n\t            this.i.imageTilesReady = delegateRemove(this.i.imageTilesReady, this._imageTilesReady_wrapped);\r\n\t            this._imageTilesReady_wrapped = null;\r\n\t            this._imageTilesReady = null;\r\n\t        }\r\n\t\r\n\t        this._imageTilesReady = ev;\r\n\t        this._imageTilesReady_wrapped = (o, e) => {\r\n\t            \r\n\t                    let outerArgs = new IgcImageTilesReadyEventArgs();\r\n\t(<any>outerArgs)._provideImplementation(e);\r\n\t                    if ((this as any).beforeImageTilesReady) {\r\n\t                        (this as any).beforeImageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t                    if (this._imageTilesReady) {\r\n\t    this._imageTilesReady(this, outerArgs);\r\n\t                    }\r\n\t\r\n\t        };\r\n\t        this.i.imageTilesReady = delegateCombine(this.i.imageTilesReady, this._imageTilesReady_wrapped);;\r\n\t    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { IgcTileSeriesModule } from './igc-tile-series-module';\r\n\r\nimport { IgcGeographicTileSeriesComponent } from './igc-geographic-tile-series-component';\r\nimport { GeographicTileSeries } from './GeographicTileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcGeographicTileSeriesModule {\r\n    public static register(): void {\r\nIgcTileSeriesModule.register();\r\n        IgcGeographicTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcGeographicTileSeriesComponent\", IgcGeographicTileSeriesComponent);\r\n        TypeRegistrar.register(\"GeographicTileSeries\", (<any>GeographicTileSeries).$type);\r\n    }\r\n}\r\n","import { IgRect } from \"igniteui-core/IgRect\"\r\nimport { IgSize } from \"igniteui-core/IgSize\"\r\nimport { IgPoint } from \"igniteui-core/IgPoint\"\r\nimport { IgDataTemplate } from \"igniteui-core/IgDataTemplate\"\r\nimport { IgcGeographicMapSeriesHostComponent } from \"./igc-geographic-map-series-host-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { GeographicXYTriangulatingSeries } from \"./GeographicXYTriangulatingSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, initializePropertiesFromCss, NamePatcher } from \"igniteui-core/componentUtil\";\r\nimport { IgcTriangulationDataSource } from \"igniteui-core/igc-triangulation-data-source\";\r\nimport { IEnumerable } from \"igniteui-core/type\";\r\nimport { RegisterElementHelper } from 'igniteui-core/module-manager';\r\n\r\n/**\r\n * Base class for geographic series which triangulate XY data prior to rendering.\r\n*/\r\nexport abstract class IgcGeographicXYTriangulatingSeriesComponent extends IgcGeographicMapSeriesHostComponent {\r\n\r\n\r\n    public get i(): GeographicXYTriangulatingSeries {\r\n        return this._implementation;\r\n    }\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private static _observedAttributesIgcGeographicXYTriangulatingSeriesComponent: string[] = null;\r\n    static get observedAttributes() {\r\n        if (IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent == null) {\r\n            let names = getAllPropertyNames(IgcGeographicXYTriangulatingSeriesComponent);\r\n            for (let i = 0; i < names.length; i++) {\r\n                names[i] = toSpinal(names[i]);\r\n            }\r\n            IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent = names;\r\n        }\r\n        return IgcGeographicXYTriangulatingSeriesComponent._observedAttributesIgcGeographicXYTriangulatingSeriesComponent;\r\n    }\r\n\r\n    private _triangulationDataSource: string;\r\n\t/**\r\n\t * Gets or sets the string path specifying the location of the Itf file.\r\n\t*/\r\n    set triangulationDataSource(value: string) {\r\n        this._triangulationDataSource = value;\r\n        this.updateTriangulationDataSource();\r\n    }\r\n    get triangulationDataSource(): string {\r\n        return this._triangulationDataSource;\r\n    }\r\n\r\n    private _cachedTriangulationDataSource: IgcTriangulationDataSource;\r\n    private updateTriangulationDataSource() {\r\n        if (this._cachedTriangulationDataSource == null) {\r\n            this._cachedTriangulationDataSource = new IgcTriangulationDataSource();\r\n            this.onTriangulationDataSourceImportCompleted = this.onTriangulationDataSourceImportCompleted.bind(this);\r\n            this._cachedTriangulationDataSource.importCompleted = this.onTriangulationDataSourceImportCompleted;\r\n        }\r\n\r\n       \tthis._cachedTriangulationDataSource.source = this._triangulationDataSource;\r\n    }\r\n\r\n    private onTriangulationDataSourceImportCompleted(s: any, e: any) {\r\n        this.dataSource = this._cachedTriangulationDataSource.getPointData();\r\n        this.trianglesSource = <any[]><any>this._cachedTriangulationDataSource.getTriangleData();\r\n    }\r\n\r\n\t\t/**\r\n\t * The name of the property from which to extract the Longitude for each item in the ItemsSource.\r\n\t*/\r\n\tget longitudeMemberPath() : string {\r\n\t\treturn (this.i.xh as string);\r\n\t}\r\n\tset longitudeMemberPath(v: string) {\r\n\t\tthis.i.xh = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property from which to extract the Latitude for each item in the ItemsSource.\r\n\t*/\r\n\tget latitudeMemberPath() : string {\r\n\t\treturn (this.i.xf as string);\r\n\t}\r\n\tset latitudeMemberPath(v: string) {\r\n\t\tthis.i.xf = v;\r\n\t}\r\n\t/**\r\n\t * The source of triangulation data.\r\n\t * This property is optional.  If it is left as null, the triangulation will be created based on the items in the ItemsSource.  Triangulation is a demanding operation, so the runtime performance will be better when specifying a TriangulationSource, especially when a large number of data items are present.\r\n\t*/\r\n\tget trianglesSource() : any[] {\r\n\t\treturn (this.i.xe as any) as any[];\r\n\t}\r\n\tset trianglesSource(v: any[]) {\r\n\t                                        this.i.xe = (v as any) as IEnumerable;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the first vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath1() : string {\r\n\t\treturn (this.i.xk as string);\r\n\t}\r\n\tset triangleVertexMemberPath1(v: string) {\r\n\t\tthis.i.xk = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the second vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath2() : string {\r\n\t\treturn (this.i.xm as string);\r\n\t}\r\n\tset triangleVertexMemberPath2(v: string) {\r\n\t\tthis.i.xm = v;\r\n\t}\r\n\t/**\r\n\t * The name of the property of the TrianglesSource items which, for each triangle, contains the index of the third vertex point in the ItemsSource.\r\n\t*/\r\n\tget triangleVertexMemberPath3() : string {\r\n\t\treturn (this.i.xo as string);\r\n\t}\r\n\tset triangleVertexMemberPath3(v: string) {\r\n\t\tthis.i.xo = v;\r\n\t}\r\n\r\n    \r\n\r\n    \r\n\r\n\t\r\n\r\n    \r\n\r\n    //@@ZoneRunner\r\n    \r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { ImageTilesReadyEventArgs as ImageTilesReadyEventArgs_internal } from \"./ImageTilesReadyEventArgs\";\r\n\r\nexport class IgcImageTilesReadyEventArgs\r\n{\r\n\r\nprotected createImplementation() : ImageTilesReadyEventArgs_internal\r\n{\r\n\treturn new ImageTilesReadyEventArgs_internal();\r\n}\r\n\tprotected _implementation: any;\r\n\t                            /**\r\n\t                             * @hidden \r\n\t                             */\r\n\tpublic get i() : ImageTilesReadyEventArgs_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tprivate onImplementationCreated() {\r\n\t\t\r\n\t}\r\n\tconstructor() {\r\n\tthis._implementation = this.createImplementation();\r\n\t(<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n\tprotected _provideImplementation(i: any) {\r\n\t    this._implementation = i;\r\n\t    (<any>this._implementation).externalObject = this;\r\n\tthis.onImplementationCreated();\r\n\t                                if ((this as any)._initializeAdapters) {\r\n\t                                    (this as any)._initializeAdapters();\r\n\t                                }\r\n\t\r\n\t}\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { OpenStreetMapImagery as OpenStreetMapImagery_internal } from \"./OpenStreetMapImagery\";\r\n\r\n/**\r\n * UI element class used to display OpenStreetMap imagery in the IgxGeographicMap.Component\r\n*/\r\nexport class IgcOpenStreetMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : OpenStreetMapImagery_internal\r\n{\r\n\treturn new OpenStreetMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : OpenStreetMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the tile path URL.\r\n\t*/\r\n\tget tilePath() : string {\r\n\t\treturn (this.i.tilePath as string);\r\n\t}\r\n\tset tilePath(v: string) {\r\n\t\tthis.i.tilePath = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcOpenStreetMapImagery } from './igc-open-street-map-imagery';\r\nimport { OpenStreetMapImagery } from './OpenStreetMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcOpenStreetMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcOpenStreetMapImagery\", IgcOpenStreetMapImagery);\r\n        TypeRegistrar.register(\"OpenStreetMapImagery\", (<any>OpenStreetMapImagery).$type);\r\n    }\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\nimport { GeographicMapImagery } from \"./GeographicMapImagery\";\r\nimport { ITileGenerator, ITileGenerator_$type } from \"igniteui-core/ITileGenerator\";\r\nimport { DependencyProperty } from \"igniteui-core/DependencyProperty\";\r\nimport { DependencyObject } from \"igniteui-core/DependencyObject\";\r\nimport { TileGeneratorTileSource } from \"igniteui-core/TileGeneratorTileSource\";\r\nimport { Base, Type, runOn, delegateCombine, markType, markDep } from \"igniteui-core/type\";\r\nimport { DownloadingMultiScaleImageEventArgs } from \"igniteui-core/DownloadingMultiScaleImageEventArgs\";\r\nimport { CancellingMultiScaleImageEventArgs } from \"igniteui-core/CancellingMultiScaleImageEventArgs\";\r\nimport { TileImageCreatedEventArgs } from \"igniteui-core/TileImageCreatedEventArgs\";\r\nimport { TileImageZoomChangingEventArgs } from \"igniteui-core/TileImageZoomChangingEventArgs\";\r\nimport { DependencyPropertyChangedEventArgs } from \"igniteui-core/DependencyPropertyChangedEventArgs\";\r\nimport { PropertyMetadata } from \"igniteui-core/PropertyMetadata\";\r\nimport { IMapRenderDeferralHandler } from \"igniteui-core/IMapRenderDeferralHandler\";\r\nimport { stringReplace } from \"igniteui-core/string\";\r\n\r\n/**\r\n * @hidden \r\n */\r\nexport class TileGeneratorMapImagery extends GeographicMapImagery {\r\n\tstatic $t: Type = markType(TileGeneratorMapImagery, 'TileGeneratorMapImagery', (<any>GeographicMapImagery).$);\r\n\tconstructor() {\r\n\t\tsuper(new TileGeneratorTileSource());\r\n\t\tthis.downloadingImage = delegateCombine(this.downloadingImage, runOn(this, this.br));\r\n\t\tthis.cancellingImage = delegateCombine(this.cancellingImage, runOn(this, this.bq));\r\n\t}\r\n\tprivate bq(a: any, b: CancellingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.cancelTile(d, e, f);\r\n\t\t}\r\n\t}\r\n\tprivate br(a: any, b: DownloadingMultiScaleImageEventArgs): void {\r\n\t\tlet c = b.uri.toString().split('/');\r\n\t\tlet d = parseInt(stringReplace(c[3], \"/\", \"\"));\r\n\t\tlet e = parseInt(stringReplace(c[4], \"/\", \"\"));\r\n\t\tlet f = parseInt(stringReplace(stringReplace(c[5], \"/\", \"\"), \".png\", \"\"));\r\n\t\tb.uri = null;\r\n\t\tlet img_ = b.image;\r\n\t\tif (this.tileGenerator != null) {\r\n\t\t\tthis.tileGenerator.getTile(d, e, f, (g: any, h: TileImageCreatedEventArgs) => this.deferralHandler.deferAction(() => img_.src = h.url), (g: any, h: TileImageCreatedEventArgs) => {\r\n\t\t\t}, (g: any, h: TileImageZoomChangingEventArgs) => {\r\n\t\t\t}, img_);\r\n\t\t}\r\n\t}\r\n\ttileGenerator: ITileGenerator;\r\n\tstatic $$p: string[] = markDep(DependencyProperty, PropertyMetadata, TileGeneratorMapImagery, 'ba', [ 'TileGenerator', [ ITileGenerator_$type, null ] ]);\r\n}\r\n\r\n\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { TileGeneratorMapImagery as TileGeneratorMapImagery_internal } from \"./TileGeneratorMapImagery\";\r\nimport { ITileGenerator } from \"igniteui-core/ITileGenerator\";\r\n\r\n/**\r\n * Represents a CustomMapImagery MapImagery\r\n*/\r\nexport class IgcTileGeneratorMapImagery extends IgcGeographicMapImagery\r\n{\r\n\r\nprotected createImplementation() : TileGeneratorMapImagery_internal\r\n{\r\n\treturn new TileGeneratorMapImagery_internal();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileGeneratorMapImagery_internal {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t}\r\n\t/**\r\n\t * Gets or sets the culture name for this tile source.\r\n\t*/\r\n\tget tileGenerator() : ITileGenerator {\r\n\t\treturn this.i.tileGenerator as ITileGenerator;\r\n\t}\r\n\tset tileGenerator(v: ITileGenerator) {\r\n\t                                        this.i.tileGenerator = v;\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileGeneratorMapImagery } from './igc-tile-generator-map-imagery';\r\nimport { TileGeneratorMapImagery } from './TileGeneratorMapImagery';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileGeneratorMapImageryModule {\r\n    public static register(): void {\r\n        \r\n        TypeRegistrar.registerCons(\"IgcTileGeneratorMapImagery\", IgcTileGeneratorMapImagery);\r\n        TypeRegistrar.register(\"TileGeneratorMapImagery\", (<any>TileGeneratorMapImagery).$type);\r\n    }\r\n}\r\n","import { IgRect } from 'igniteui-core/IgRect'\r\nimport { IgSize } from 'igniteui-core/IgSize'\r\nimport { IgPoint } from 'igniteui-core/IgPoint'\r\nimport { IgDataTemplate } from 'igniteui-core/IgDataTemplate'\r\nimport { IgcHTMLElement } from 'igniteui-core/igc-html-element'\r\nimport { delegateCombine, delegateRemove } from 'igniteui-core/type';\r\nimport { IgcGeographicMapImagery } from \"./igc-geographic-map-imagery\";\r\nimport { IgcShapeSeriesBaseComponent } from \"igniteui-charts/igc-shape-series-base-component\";\r\nimport { IgcSeriesComponent } from \"igniteui-charts/igc-series-component\";\r\nimport { TileSeries } from \"./TileSeries\";\r\nimport { getAllPropertyNames, fromSpinal, toSpinal, ensureBool } from \"igniteui-core/componentUtil\";\r\nimport { RegisterElementHelper } from \"igniteui-core/module-manager\";\r\n\r\n/**\r\n * Represents a tile series class that can render imagery tiles\r\n*/\r\nexport class IgcTileSeriesComponent extends IgcShapeSeriesBaseComponent\r\n{\r\n\r\nprotected createImplementation() : TileSeries\r\n{\r\n\treturn new TileSeries();\r\n}\r\n\t/**\r\n\t                             * @hidden \r\n\t                             */\r\n\t                            public get i() : TileSeries {\r\n\t\treturn this._implementation;\r\n\t}\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t                                     \r\n\t}\r\n\t\r\n\t    connectedCallback() {\r\n\t        if (super[\"connectedCallback\"]) {\r\n\t            super[\"connectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).connectedCallback) {\r\n\t            (<any>this.i).connectedCallback();\r\n\t        }\r\n\t        \r\n\t        if (!this._attached) {\r\n\t            this._attached = true;\r\n\t            this._flushQueuedAttributes();\r\n\t        }\r\n\t    }\r\n\t    disconnectedCallback() {\r\n\t        if (super[\"disconnectedCallback\"]) {\r\n\t            super[\"disconnectedCallback\"]();\r\n\t        }\r\n\t        if ((<any>this.i).disconnectedCallback) {\r\n\t            (<any>this.i).disconnectedCallback();\r\n\t        }\r\n\t        if (this._attached) {\r\n\t            this._attached = false;\r\n\t        }\r\n\t    }\r\n\t\r\n\t                private static _observedAttributesIgcTileSeriesComponent: string[] = null;\r\n\t                static get observedAttributes() {\r\n\t                    if (IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent == null) {\r\n\t                        let names = getAllPropertyNames(IgcTileSeriesComponent);\r\n\t    for (let i = 0; i < names.length; i++) {\r\n\t                            names[i] = toSpinal(names[i]);\r\n\t    }\r\n\t    IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent = names;\r\n\t                    }\r\n\t                    return IgcTileSeriesComponent._observedAttributesIgcTileSeriesComponent;               \r\n\t                }                 \r\n\t            \r\n\t\r\n\t                public static htmlTagName: string = \"igc-tile-series\";\r\n\t                protected static _isElementRegistered = false;\r\n\t\r\n\t                public static register() {\r\n\t                    if (!IgcTileSeriesComponent._isElementRegistered) {\r\n\t                        IgcTileSeriesComponent._isElementRegistered = true;\r\n\t                        RegisterElementHelper.registerElement(\r\n\t                            IgcTileSeriesComponent.htmlTagName,\r\n\t                            IgcTileSeriesComponent);\r\n\t                    }\r\n\t            }\r\n\t/**\r\n\t * Gets whether the current series shows a tile imagery.\r\n\t*/\r\n\tget isTile() : boolean {\r\n\t\treturn (this.i.f4 as boolean);\r\n\t}\r\n\t/**\r\n\t * The MapImagery which is used to provide the tiles for display.\r\n\t*/\r\n\tget tileImagery() : IgcGeographicMapImagery {\r\n\t                                        const r = this.i.aag;\r\n\t                                        if (r == null) {\r\n\t                                            return null;\r\n\t                                        }\r\n\t                                        \r\n\t\treturn (r as any).externalObject;\r\n\t}\r\n\tset tileImagery(v: IgcGeographicMapImagery) {\r\n\t\tv == null ? this.i.aag = null : this.i.aag = v.i;\r\n\t}\r\n\t\r\n\t    public findByName(name: string): any {\r\n\t        \r\n\t    var baseResult = super.findByName(name);\r\n\t    if (baseResult)\r\n\t    {\r\n\t        return baseResult;\r\n\t    }\r\n\t\r\n\tif (this.tileImagery && (this.tileImagery as any).name && (this.tileImagery as any).name == name) { return this.tileImagery; }\r\n\t\r\n\t        return null;\r\n\t    }\r\n\t/**\r\n\t * Defers rendering of the series\r\n\t\r\n\t*/\r\n\tpublic deferredRefresh() {\r\n\t\tthis.i.deferredRefresh();\r\n\t}\r\n}\r\n","/* \r\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE: \r\nhttps://www.infragistics.com/legal/license/igultimate-la \r\nhttps://www.infragistics.com/legal/license/igultimate-eula \r\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE: you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\r\n*/\r\n\r\n\r\nimport { IgcTileSeriesComponent } from './igc-tile-series-component';\r\nimport { TileSeries } from './TileSeries';\r\nimport { TypeRegistrar } from 'igniteui-core/type';\r\n\r\nexport class IgcTileSeriesModule {\r\n    public static register(): void {\r\n        IgcTileSeriesComponent.register();\r\n        TypeRegistrar.registerCons(\"IgcTileSeriesComponent\", IgcTileSeriesComponent);\r\n        TypeRegistrar.register(\"TileSeries\", (<any>TileSeries).$type);\r\n    }\r\n}\r\n"],"names":["GeographicMapSeriesHost","qi","super","this","w5","constructor","w3","w4","get_fd","kr","a","b","c","nf","mf","get_kj","k1","set_kj","o1","ed","d","e","ai","bp","xa","get_hasMarkers","hasMarkers","hostedSeries_","externalObject","createFromInternal","Prefix","Postfix","_implementation","ph","w6","ci","r5","dh","dj","di","dk","ko","kx","kb","j9","i6","wh","ws","ao","wt","ap","wu","wv","i2","wd","i4","wf","wi","i7","we","i3","wg","i5","j5","ix","it","kp","ct","HostSeriesView","q3","$","w7","xc","h","rc","dc","rn","nq","rf","wx","index","p2","kh","S","actualWindowRectChanged","xb","f","w9","c4","cj","cq","cn","hs_","v_","_visibility","visibility","f9","expectFunctions","cs","ch","cp","ce","cf","jh","cm","il","cg","co","cr","title","ck","cl","legend","cw","a5","width","v2_","ru","q7","qp","rt","a2","sg","get_coercionMethods","_coercionMethods","set_coercionMethods","coercionMethods","p1","kn","pa","$t","i","raisePropertyChanged","oldValue","newValue","cd","a3","legendItemVisibility","itemsSource","vk","v0","jk","ke","_opacity","jq","gq","legendItemBadgeShape","be","ve","vi","GeographicMarkerSeries","propertyUpdated","xt","s3","xu","vq","x7","vr","x8","ip","xg","mc","propertyName","x5","yn","ym","$$p","yo","x9","yp","ya","xe","xd","xf","xv","xo","aae","xh","B","g","GeographicShapeSeriesBase","xm","xl","assigningShapeStyle","assigningShapeMarkerStyle","xi","xk","GeographicShapeSeriesBaseView","get_ff","get_ef","cv","cx","yd","xp","yc","x6","yu","xr","yv","xs","yz","xn","importCompleted","j","count","ext_","xj","getPointData","get_g8","set_g8","cu","zc","x4","yr","xq","ImageTilesReadyEventArgs","ImagesChangedEventArgs","MapBackgroundTilingMode","MapBackgroundTilingMode_$type","MapResizeBehavior","MapResizeBehavior_$type","TileSeries","ShapeSeriesBase","bk","get_f4","aad","imageTilesReady","aah","aai","ab","TileSeriesView","aac","get_yf","aag","aaf","propertyChanged","aal","dv","qn","aam","deferralHandler","du","type","XamGeographicMap","geographicMap","aao","dr","dy","ae","dw","register","unRegister","deferredRefresh","deferAction","j0","setTimeout","window","su","dx","rv","aan","getViewInfo","p0","ho","item","bd","d7","zs","isEmpty","height","o7","ds","IMapRenderDeferralHandler","ShapeSeriesViewBase","dn","dz","GeometryGroup","dq","dp","a4","t","Defaults","tileSeries_Outline","tileSeries_Brush","add","c1","cz","c7","clear","c6","windowRect","createElement","get2DCanvasContext","RenderingContext","CanvasViewRenderer","setAttribute","b9","toString","imagesChanged","dt","bf","bj","m","aa","r","clip","Math","round","left","top","o","getNativeElement","z","a6","SphericalMercatorVerticalScaler","VerticalLinearScaler","q","getMercatorUnscaledValue","au","p","getMercatorScaledValue1","af","values_","Array","isArray","v","w","x","y","n","s","u","ac","ah","ag","sin","log","aj","p3","ak","p4","mb","am","as","at","Rect","aq","getMercatorScaledValue3","getMercatorScaledValue2","static","exp","asin","SphericalMercatorHorizontalScaler","HorizontalLinearScaler","k","l","SeriesViewer","xx","zf","zb","$type","NaN","zi","x3","xw","zh","empty","zg","bottom","backgroundContent","OpenStreetMapImagery","$ret","NumericXAxis","bi","n4","NumericYAxis","yq","yx","oi","provideContainer","provideRenderer","fv","hp","fp","x1","fq","zk","l_op_Inequality","q5","zo","zw","zu","right","getZoomRectFromGeoRect","getZoomFromGeographicRect","y0","zm","zl","ScalerParams","zj","el","intersect","getZoomFromGeographicPoints","zq","ww","eo","zd","e6","ze","GeographicMapImagery","clearTileCache","yt","gk","ee","series","yy","sh","get_fh","x0","floor","ceil","abs","zn","e3","nm","Tuple$2","ht","MathUtil","zp","db","XamGeographicMapView","qo","qz","y1","hz","h0","r4","min","f8","xy","q0","isHorizontalWrappingEnabled","fu","fr","yw","xz","fs","gg","sf","hs","sb","c2","getFontInfo","fo","vx","fw","getFontBrush","fx","rx","ItfConverter","triangulationSource","points","triangles","rk","r3","n0","sa","ChartVisualData","fy","axes","add1","_inner","name","contentArea","RectData","centralArea","plotArea","w1","ys","zv","y2","x2","DependencyProperty","PropertyMetadata","Control","an","cancellingImage","downloadingImage","bb","GeographicMapImageryView","al","a9","referer","userAgent","av","bg","ba","geographicMapProperty","a7","bs","bn","bc","a8","XamMultiScaleImage","Size","b1","b2","b3","bz","GeographicXYTriangulatingSeriesView","trianglesSource","cy","c0","GeographicScatterAreaSeriesView","c3","SeriesViewerView","fn","fz","bw","get_ap","d4","BrushCollection","remove","ft","d1","fd","ad","crosshairLineThickness","fe","_stroke","crosshairLineBrush","OpenStreetMapTileSource","tilePath","tilePathProperty","bq","setTilePathUrl","br","GeographicXYTriangulatingSeries","GeographicScatterAreaSeries","get_ew","triangulationStatusChanged","sl","ScatterAreaSeries","ColorScale","BingMapsImageryStyle","IgcSubDomainsCollection","IgCollection","list","length","_createInnerColl","coll","SyncableObservableCollection$2","compare","ext","int","comp","equals","createTo","createFrom","BingMapsImageryStyle_$type","SubDomainsCollection","ObservableCollection$1","_rest","specialize","BingMapsMapImageryView","subDomains","actualTilePath","actualSubDomains","cultureName","BingMapsMapImagery","BingMapsTileSource","_pendingBingRequest_","_isInitialized","b0","by","getResponseCompleted","bind","actualBingImageryRestUri","cc","isInitialized","bingImageryRestUri","requestMapSettings","bv","isDeferredLoad","string","apiKey","Uri","isWellFormedUriString","imageryStyle","url_","submit","data_","resourceSets_","JSON","parse","resourceSets","resources_","resources","imageUrl_","subDomains_","List$1","imageUrlSubdomains","collectionChanged","IgcBingMapsMapImagery","createImplementation","_subDomains","_actualSubDomains","innerColl","_fromInner","_setSyncTarget","_fromOuter","syncColl","SyncableObservableCollection$1","IgcBingMapsMapImageryModule","registerCons","IgcCustomMapImagery","_getTileImageUri","_getTileImageUri_wrapped","getTileImageUri","ev","outerArgs","_provideImplementation","beforeGetTileImageUri","CustomMapImagery","IgcCustomMapImageryModule","GeographicContourLineSeriesView","za","GeographicContourLineSeries","get_fk","ScatterContourSeries","v7","v8","ji","wa","ValueBrushScale","ContourValueResolver","C","IgcGeographicContourLineSeriesComponent","_triangulationStatusChanged","_triangulationStatusChanged_wrapped","connectedCallback","_attached","_flushQueuedAttributes","disconnectedCallback","observedAttributes","_observedAttributesIgcGeographicContourLineSeriesComponent","names","_isElementRegistered","registerElement","htmlTagName","isLineContour","fk","valueMemberPath","fillScale","_createFromInternal","_stylingContainer","_styling","actualFillScale","valueResolver","I","findByName","container","component","parent","_inStyling","beforeTriangulationStatusChanged","IgcGeographicContourLineSeriesModule","IgcScatterContourSeriesModule","GeographicHighDensityScatterSeriesView","HighDensityScatterSeries","yl","aak","aaj","c5","GeographicHighDensityScatterSeries","jl","get_fp","progressiveLoadStatusChanged","currentStatus","Color","IgcGeographicHighDensityScatterSeriesComponent","_progressiveLoadStatusChanged","_progressiveLoadStatusChanged_wrapped","_observedAttributesIgcGeographicHighDensityScatterSeriesComponent","isPixel","latitudeMemberPath","longitudeMemberPath","useBruteForce","_a","progressiveLoad","mouseOverEnabled","heatMinimum","heatMaximum","heatMinimumColor","heatMaximumColor","pointExtent","progressiveStatus","beforeProgressiveLoadStatusChanged","IgcGeographicHighDensityScatterSeriesModule","IgcHighDensityScatterSeriesModule","ArcGISOnlineMapImagery","ArcGISOnlineTileSource","bu","bt","_pendingTokenRequest_","_pendingMapServerRequest_","userToken","getResponseCompleted_MapServerResponse","getResponseCompleted_TokenResponse","mapServerUri","mapServerUriProperty","userName","userNameProperty","password","passwordProperty","userTokenProperty","isMapPublic","isMapPublicProperty","defaultTokenTimeout","b8","tokenGenerationEndPoint","refererUri","acquireNewToken","substr","token","tileInfo","levelOfDetail","lods","IgcArcGISOnlineMapImagery","IgcArcGISOnlineMapImageryModule","IgcGeographicMapComponent","value","_height","style","notifyContainerResized","_width","_chart","undefined","_series","_innerColl","addListener","sender","_seriesAdapter","action","NotifyCollectionChangedAction","Add","addManualItem","newItems","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","contentSeries","actualSeries","_dataSource","_disconnected","_defaultTooltips","_imageTilesReady","_imageTilesReady_wrapped","ensureStylablePatched","Object","getPrototypeOf","_renderer","document","DataChartStylingDefaults","_container","updateRoot","setStyleProperty","nativeElement","_wrapper","chart","owner","_provideRenderer","provideData","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","MutationObserver","mutation","updateContentChildren","observe","childList","addSizeWatcher","destroy","dataSource","bindData","currSeries","children","push","notifyContentChanged","onDetachedFromUI","onAttachedToUI","classList","appendChild","rootWrapper","display","afterContentInit","isRegistered","create","onContentReady","_onDefaultTooltipsReady","createTooltip","ele","wrapper","updateToolTip","hideToolTip","showDefaultTooltip","self","isSubContent","removeChild","context","_observedAttributesIgcGeographicMapComponent","zoomable","resizeBehavior","backgroundTilingMode","useWorldRectForZoomBounds","suppressZoomResetOnWorldRectChange","worldRect","actualWorldRect","xAxis","yAxis","isMap","fh","windowScale","actualWindowScale","zoomIsReady","getCurrentActualWorldRect","iv","geographic","updateZoomWindow","zoomWindow","updateWorldRect","convertGeographicToZoom","extraPixelPadding","northWest","southEast","getGeographicFromZoom","getGeographicPoint","pixelCoordinate","getPixelPoint","geographicCoordinate","getWindowPoint","styleUpdated","getActualWindowScaleHorizontal","getActualWindowScaleVertical","exportVisualData","zoomToGeographic","beforeImageTilesReady","IgcGeographicMapCoreModule","IgcOpenStreetMapImageryModule","IgcImagesChangedEventArgs","onImplementationCreated","_initializeAdapters","IgcGeographicMapImagery","internal","externalName","_imagesChanged","_imagesChanged_wrapped","_cancellingImage","_cancellingImage_wrapped","_downloadingImage","_downloadingImage_wrapped","opacity","findEphemera","indexOf","beforeImagesChanged","beforeCancellingImage","beforeDownloadingImage","IgcGeographicMapModule","IgcGeographicShapeSeriesModule","IgcGeographicPolylineSeriesModule","IgcTileGeneratorMapImageryModule","IgcHeatTileGeneratorModule","IgcGeographicTileSeriesModule","IgcSizeScaleModule","IgcValueBrushScaleModule","IgcCustomPaletteColorScaleModule","IgcGeographicProportionalSymbolSeriesModule","IgcGeographicSymbolSeriesModule","IgcGeographicScatterAreaSeriesModule","IgcShapeDataSourceModule","IgcGeographicMapSeriesHostComponent","_observedAttributesIgcGeographicMapSeriesHostComponent","isGeographic","visibleFromScale","notifyIndexedPropertiesChanged","getItemValue","memberPathName","getMemberPathValue","getItem","world","getPreviousOrExactIndex","skipUnknowns","getNextOrExactIndex","getSeriesValue","useInterpolation","getSeriesValuePosition","getSeriesValueBoundingBox","getSeriesValueMarkerBoundingBox","getSeriesHighValue","getSeriesHighValuePosition","getSeriesLowValue","getSeriesLowValuePosition","getSeriesValuePositionFromSeriesPixel","mouse","getSeriesValueFromSeriesPixel","getItemSpan","renderSeries","animate","IgcGeographicMarkerSeriesComponent","_observedAttributesIgcGeographicMarkerSeriesComponent","markerType","markerThickness","markerOutlineMode","markerFillMode","markerTemplate","markerBrush","markerOutline","maximumMarkers","actualMarkerTemplate","actualMarkerBrush","actualMarkerOutline","GeographicPolylineSeriesView","yk","GeographicPolylineSeries","get_fs","styleShape","ScatterPolylineSeries","Style","StyleSelector","IgcGeographicPolylineSeriesComponent","_styleShape","_styleShape_wrapped","_observedAttributesIgcGeographicPolylineSeriesComponent","isPolyline","shapeFill","fill","ensureShapeStyle","shapeStroke","stroke","shapeStrokeThickness","strokeThickness","shapeOpacity","beforeStyleShape","IgcScatterPolylineSeriesModule","GeographicProportionalSymbolSeriesView","aay","y4","aa6","ac8","ady","y9","acx","yg","ado","adj","acu","ac6","ac7","adc","c8","c9","da","dd","de","df","GeographicProportionalSymbolSeries","get_ek","ye","yj","yi","assigningScatterStyle","assigningScatterMarkerStyle","yh","jm","BubbleSeries","zt","yf","BrushScale","ScatterItemSearchMode","SizeScale","IgcGeographicProportionalSymbolSeriesComponent","_assigningScatterStyle","_assigningScatterStyle_wrapped","_assigningScatterMarkerStyle","_assigningScatterMarkerStyle_wrapped","_observedAttributesIgcGeographicProportionalSymbolSeriesComponent","hasOnlyMarkers","ek","radiusMemberPath","radiusScale","labelMemberPath","fillMemberPath","fillScaleUseGlobalValues","markerOutlineUsesFillScale","markerOutlineBrightness","markerBrushBrightness","radiusScaleUseGlobalValues","isCustomScatterStyleAllowed","isCustomScatterMarkerStyleAllowed","itemSearchMode","itemSearchThreshold","beforeAssigningScatterStyle","beforeAssigningScatterMarkerStyle","IgcBubbleSeriesModule","IgcGeographicScatterAreaSeriesComponent","_observedAttributesIgcGeographicScatterAreaSeriesComponent","isArea","ew","colorMemberPath","colorScale","actualColorScale","updateActualColorScale","IgcScatterAreaSeriesModule","IgcGeographicShapeSeriesBaseComponent","_currData","_onImportCompleted","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_observedAttributesIgcGeographicShapeSeriesBaseComponent","shapeDataSource","_shapeDataSource","updateShapeDataSource","databaseSource","_databaseSource","onUpdateDataSource","data","_cachedShapeDataSource","onShapeDataSourceImportCompleted","shapefileSource","dataBind","shapeMemberPath","isCustomShapeStyleAllowed","isCustomShapeMarkerStyleAllowed","itemSearchPointsThreshold","shapefileDataSource","setNativeElement","shapeFilterResolution","beforeAssigningShapeStyle","beforeAssigningShapeMarkerStyle","GeographicShapeSeriesView","zr","aby","aar","abd","aau","abu","abv","abx","GeographicShapeSeries","get_fr","ScatterPolygonSeries","y6","y7","y8","Brush","DataTemplate","CollisionAvoidanceType","MarkerFillMode","MarkerOutlineMode","DeviceUtils","MarkerType","IgcGeographicShapeSeriesComponent","_observedAttributesIgcGeographicShapeSeriesComponent","isPolygon","markerCollisionAvoidance","IgcScatterPolygonSeriesModule","GeographicSymbolSeriesView","GeographicSymbolSeries","ScatterSeries","IgcGeographicSymbolSeriesComponent","_observedAttributesIgcGeographicSymbolSeriesComponent","IgcScatterSeriesModule","GeographicTileSeries","IgcGeographicTileSeriesComponent","_observedAttributesIgcGeographicTileSeriesComponent","isTile","f4","tileImagery","IgcTileSeriesModule","IgcGeographicXYTriangulatingSeriesComponent","_observedAttributesIgcGeographicXYTriangulatingSeriesComponent","triangulationDataSource","_triangulationDataSource","updateTriangulationDataSource","_cachedTriangulationDataSource","onTriangulationDataSourceImportCompleted","source","getTriangleData","triangleVertexMemberPath1","triangleVertexMemberPath2","triangleVertexMemberPath3","IgcImageTilesReadyEventArgs","IgcOpenStreetMapImagery","TileGeneratorMapImagery","TileGeneratorTileSource","uri","split","parseInt","tileGenerator","cancelTile","img_","image","getTile","src","url","ITileGenerator","IgcTileGeneratorMapImagery","IgcTileSeriesComponent","_observedAttributesIgcTileSeriesComponent"],"sourceRoot":""}